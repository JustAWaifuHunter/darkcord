{"meta":{"generator":"1.0.4","format":30,"date":1707078235432},"classes":[{"name":"Application","extends":[[["Base"]]],"construct":{"name":"new Application","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIApplication",">"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"botPublic","description":"When false only app owner can join the app's bot to guilds","type":[[["boolean"]]],"meta":{"line":34,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L34"}},{"name":"botRequireCodeGrant","description":"When true the app's bot will only join upon completion of the full oauth2 code grant flow","type":[[["boolean"]]],"meta":{"line":38,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L38"}},{"name":"coverImage","description":"The application's default rich presence invite cover image hash","type":[[["string"]]],"meta":{"line":74,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L74"}},{"name":"customInstallUrl","description":"The application's default custom authorization link, if enabled","type":[[["string"]]],"meta":{"line":98,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L98"}},{"name":"description","description":"The description of the app","type":[[["string"]]],"meta":{"line":26,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L26"}},{"name":"flags","description":"The application's public flags","type":[[["ApplicationFlags"]]],"meta":{"line":78,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L78"}},{"name":"guildId","description":"If this application is a game sold on Discord, this field will be the guild to which it has been linked","type":[[["string"]]],"meta":{"line":62,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L62"}},{"name":"icon","description":"The icon hash of the app","type":[[["null"," |"],["string"]]],"meta":{"line":22,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L22"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"installParams","description":"Settings for the application's default in-app authorization link, if enabled","type":[[["APIApplicationInstallParams"]]],"meta":{"line":94,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L94"}},{"name":"name","description":"The name of the app","type":[[["string"]]],"meta":{"line":18,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L18"}},{"name":"owner","description":"Partial user object containing info on the owner of the application","type":[[["null"," |"],["User"]]],"meta":{"line":50,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L50"}},{"name":"primarySkuId","description":"If this application is a game sold on Discord, this field will be the id of the \"Game SKU\" that is created, if exists","type":[[["string"]]],"meta":{"line":66,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L66"}},{"name":"privacyPolicyUrl","description":"The url of the app's privacy policy","type":[[["string"]]],"meta":{"line":46,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L46"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"roleConnectionsVerificationUrl","description":"The application's role connection verification entry point, which when configured will render the app as a verification method in the guild role verification configuration","type":[[["string"]]],"meta":{"line":102,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L102"}},{"name":"rpcOrigins","description":"An array of rpc origin urls, if rpc is enabled","type":[[["Array","<"],["string",">"]]],"meta":{"line":30,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L30"}},{"name":"slug","description":"If this application is a game sold on Discord, this field will be the URL slug that links to the store page","type":[[["string"]]],"meta":{"line":70,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L70"}},{"name":"tags","description":"Up to 5 tags describing the content and functionality of the application","type":[[["["],["string",", "],["unknown",", "],["unknown",", "],["unknown",", "],["unknown","]"]]],"meta":{"line":82,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L82"}},{"name":"team","description":"If the application belongs to a team, this will be a list of the members of that team","type":[[["null"," |"],["Team"]]],"meta":{"line":58,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L58"}},{"name":"termsOfServiceUrl","description":"The url of the app's terms of service","type":[[["string"]]],"meta":{"line":42,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L42"}},{"name":"verifyKey","description":"The hex encoded key for verification in interactions and the GameSDK's GetTicket","type":[[["string"]]],"meta":{"line":54,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L54"}}],"methods":[{"name":"toJSON","returns":[[[["void"]]]],"meta":{"line":88,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L88"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"AuditLog","construct":{"name":"new AuditLog","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["GuildDataModel","<"],["APIAuditLog",">>"]]]}]},"props":[{"name":"applicationCommands","type":[[["Array","<"],["APIApplicationCommand",">"]]],"meta":{"line":17,"file":"AuditLog.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/AuditLog.ts#L17"}},{"name":"auditLogEntries","type":[[["Array","<"],["APIAuditLogEntry",">"]]],"meta":{"line":20,"file":"AuditLog.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/AuditLog.ts#L20"}},{"name":"autoModerationRules","type":[[["Array","<"],["APIAutoModerationRule",">"]]],"meta":{"line":21,"file":"AuditLog.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/AuditLog.ts#L21"}},{"name":"guildScheduledEvents","type":[[["Array","<"],["APIGuildScheduledEvent",">"]]],"meta":{"line":24,"file":"AuditLog.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/AuditLog.ts#L24"}},{"name":"integrations","type":[[["Map","<"],["string",", "],["Integration",">"]]],"meta":{"line":22,"file":"AuditLog.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/AuditLog.ts#L22"}},{"name":"threads","type":[[["Cache","<"],["ThreadChannel",">"]]],"meta":{"line":23,"file":"AuditLog.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/AuditLog.ts#L23"}},{"name":"users","type":[[["Cache","<"],["User"," |"],["APIUser",">"]]],"meta":{"line":19,"file":"AuditLog.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/AuditLog.ts#L19"}},{"name":"webhooks","type":[[["Map","<"],["string",", "],["Webhook",">"]]],"meta":{"line":18,"file":"AuditLog.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/AuditLog.ts#L18"}}]},{"name":"AutocompleteInteraction","extends":[[["Interaction"]]],"construct":{"name":"new AutocompleteInteraction","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIApplicationCommandAutocompleteInteraction",">"]]]},{"name":"httpResponse","optional":true,"type":[[["InteractionResponse"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"_http","type":[[["InteractionResponse"]]],"meta":{"line":1223,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1223"}},{"name":"acknowledged","description":"The interaction is acknowledged","type":[[["boolean"]]],"meta":{"line":1231,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1231"}},{"name":"applicationId","description":"Id of the application this interaction is for","type":[[["string"]]],"meta":{"line":52,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L52"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"isHTTP","description":"This interaction is received for webserver","type":[[["boolean"]]],"meta":{"line":1227,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1227"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"token","description":"Continuation token for responding to the interaction","type":[[["string"]]],"meta":{"line":60,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L60"}},{"name":"type","description":"Type of interaction","type":[[["InteractionType"]]],"meta":{"line":56,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L56"}},{"name":"version","description":"Read-only property, always 1","type":[[["number"]]],"meta":{"line":64,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L64"}}],"methods":[{"name":"isAutoComplete","returns":[[[["this"," "],["is"," "],["AutocompleteInteraction"]]]],"meta":{"line":103,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L103"}},{"name":"isCommand","returns":[[[["this"," "],["is"," "],["CommandInteraction"]]]],"meta":{"line":95,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L95"}},{"name":"isComponent","returns":[[[["this"," "],["is"," "],["ComponentInteraction"]]]],"meta":{"line":99,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L99"}},{"name":"isModalSubmit","returns":[[[["this"," "],["is"," "],["ModalSubmitInteraction"]]]],"meta":{"line":107,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L107"}},{"name":"result","params":[{"name":"choices","optional":false,"type":[[["Array","<"],["APIApplicationCommandOptionChoice","<"],["string"," |"],["number",">>"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":1243,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1243"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\napplicationId",": "],["string",","],["\ncreatedAt",": "],["number",","],["\nid",": "],["string",","],["\nrawData",": "],["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","},"],["\ntoken",": "],["string",","],["\ntype",": "],["InteractionType",","],["\nversion",": "],["number\n","}>>"]]]],"meta":{"line":111,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L111"}},{"name":"from","scope":"static","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIInteraction",">"]]]},{"name":"res","optional":true,"type":[[["InteractionResponse"]]]}],"returns":[[[["Interaction"]]]],"meta":{"line":75,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L75"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"Base","construct":{"name":"new Base","params":[{"name":"data","optional":false,"type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]]},{"name":"client","optional":true,"type":[[["AnyClient"]]]},{"name":"id","optional":true,"type":[[["string"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}}],"methods":[{"name":"toJSON","returns":[[[["void"]]]],"meta":{"line":88,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L88"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"BaseClient","extends":[[["EventEmitter"]]],"construct":{"name":"new BaseClient","params":[{"name":"options","optional":true,"type":[[["BaseClientOptions"]]]}]},"props":[{"name":"application","description":"Application of this client","type":[[["null"," |"],["ClientApplication"]]],"meta":{"line":52,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L52"}},{"name":"isReady","description":"Client has ready","type":[[["boolean"]]],"meta":{"line":56,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L56"}},{"name":"options","description":"Client options","type":[[["BaseClientOptions"]]],"meta":{"line":48,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L48"}},{"name":"readyAt","description":"Time that the bot was ready","type":[[["number"]]],"meta":{"line":60,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L60"}},{"name":"rest","description":"Client rest to make requests","type":[[["Rest"]]],"meta":{"line":44,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L44"}},{"name":"captureRejectionSymbol","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["captureRejectionSymbol",")"]]],"meta":{"line":405,"file":"events.d.ts"}},{"name":"captureRejections","description":"Sets or gets the default captureRejection value for all emitters.","scope":"static","type":[[["boolean"]]],"meta":{"line":410,"file":"events.d.ts"}},{"name":"defaultMaxListeners","scope":"static","type":[[["number"]]],"meta":{"line":411,"file":"events.d.ts"}},{"name":"errorMonitor","description":"This symbol shall be used to install a listener for only monitoring `'error'`\nevents. Listeners installed using this symbol are called before the regular\n`'error'` listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an\n`'error'` event is emitted, therefore the process will still crash if no\nregular `'error'` listener is installed.","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["errorMonitor",")"]]],"meta":{"line":404,"file":"events.d.ts"}}],"methods":[{"name":"[captureRejectionSymbol]","params":[{"name":"error","optional":false,"type":[[["Error"]]]},{"name":"event","optional":false,"type":[[["string"]]]},{"name":"args","optional":false,"variable":true,"type":[[["Array","<"],["any",">"]]]}],"returns":[[[["void"]]]],"meta":{"line":115,"file":"events.d.ts"}},{"name":"addListener","description":"Alias for `emitter.on(eventName, listener)`.","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["BaseClient","<"],["E",">"]]]],"meta":{"line":475,"file":"events.d.ts"}},{"name":"connect","returns":[[[["void"]]]],"meta":{"line":89,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L89"}},{"name":"emit","params":[{"name":"event","optional":false,"type":[[["T"]]]},{"name":"args","optional":false,"variable":true,"type":[[["E","["],["T","]"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":38,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L38"}},{"name":"eventNames","description":"Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.\n\n```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```","returns":[[[["Array","<"],["string"," |"],["symbol",">"]]]],"meta":{"line":794,"file":"events.d.ts"}},{"name":"getMaxListeners","description":"Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to defaultMaxListeners.","returns":[[[["number"]]]],"meta":{"line":647,"file":"events.d.ts"}},{"name":"listen","description":"Decorator to listen event","params":[{"name":"event","description":"the event for target","optional":false,"type":[[["keyof"," "],["E"]]]}],"returns":[[[["("],["target",": "],["any",", "],["name",": "],["any",") => "],["void"]]]],"meta":{"line":83,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L83"}},{"name":"listenerCount","description":"Returns the number of listeners listening to the event named `eventName`.\n\nIf `listener` is provided, it will return how many times the listener\nis found in the list of the listeners of the event.","params":[{"name":"eventName","description":"The name of the event being listened for","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","description":"The event handler function","optional":true,"type":[[["Function"]]]}],"returns":[[[["number"]]]],"meta":{"line":741,"file":"events.d.ts"}},{"name":"listeners","description":"Returns a copy of the array of listeners for the event named `eventName`.\n\n```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["Array","<"],["Function",">"]]]],"meta":{"line":660,"file":"events.d.ts"}},{"name":"off","description":"Alias for `emitter.removeListener()`.","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["BaseClient","<"],["E",">"]]]],"meta":{"line":620,"file":"events.d.ts"}},{"name":"on","params":[{"name":"event","optional":false,"type":[[["T"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["E","["],["T","]) => "],["any"]]]}],"returns":[[[["BaseClient","<"],["E",">"]]]],"meta":{"line":34,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L34"}},{"name":"once","params":[{"name":"event","optional":false,"type":[[["T"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["E","["],["T","]) => "],["any"]]]}],"returns":[[[["BaseClient","<"],["E",">"]]]],"meta":{"line":36,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L36"}},{"name":"prependListener","description":"Adds the `listener` function to the _beginning_ of the listeners array for the\nevent named `eventName`. No checks are made to see if the `listener` has\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\ntimes.\n\n```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"eventName","description":"The name of the event.","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","description":"The callback function","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["BaseClient","<"],["E",">"]]]],"meta":{"line":759,"file":"events.d.ts"}},{"name":"prependOnceListener","description":"Adds a **one-time**`listener` function for the event named `eventName` to the _beginning_ of the listeners array. The next time `eventName` is triggered, this\nlistener is removed, and then invoked.\n\n```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"eventName","description":"The name of the event.","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","description":"The callback function","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["BaseClient","<"],["E",">"]]]],"meta":{"line":775,"file":"events.d.ts"}},{"name":"rawListeners","description":"Returns a copy of the array of listeners for the event named `eventName`,\nincluding any wrappers (such as those created by `.once()`).\n\n```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["Array","<"],["Function",">"]]]],"meta":{"line":690,"file":"events.d.ts"}},{"name":"removeAllListeners","description":"Removes all listeners, or those of the specified `eventName`.\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the `EventEmitter` instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"event","optional":true,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["BaseClient","<"],["E",">"]]]],"meta":{"line":631,"file":"events.d.ts"}},{"name":"removeListener","description":"Removes the specified `listener` from the listener array for the event named`eventName`.\n\n```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```\n\n`removeListener()` will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified `eventName`, then `removeListener()` must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any`removeListener()` or `removeAllListeners()` calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from`emit()` in progress. Subsequent events behave as expected.\n\n```js\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe `emitter.listeners()` method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), `removeListener()` will remove the most\nrecently added instance. In the example the `once('ping')`listener is removed:\n\n```js\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["BaseClient","<"],["E",">"]]]],"meta":{"line":615,"file":"events.d.ts"}},{"name":"setMaxListeners","description":"By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"n","optional":false,"type":[[["number"]]]}],"returns":[[[["BaseClient","<"],["E",">"]]]],"meta":{"line":641,"file":"events.d.ts"}},{"name":"addAbortListener","description":"Listens once to the `abort` event on the provided `signal`.\n\nListening to the `abort` event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall `e.stopImmediatePropagation()`. Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using `AbortSignal`s in Node.js APIs by solving these\ntwo issues by listening to the event such that `stopImmediatePropagation` does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```","scope":"static","params":[{"name":"signal","optional":false,"type":[[["AbortSignal"]]]},{"name":"resource","optional":false,"type":[[["("],["event",": "],["Event",") => "],["void"]]]}],"returns":[{"types":[[["Disposable"]]],"description":"Disposable that removes the `abort` listener."}],"returnsDescription":"Disposable that removes the `abort` listener.","meta":{"line":394,"file":"events.d.ts"}},{"name":"getEventListeners","description":"Returns a copy of the array of listeners for the event named `eventName`.\n\nFor `EventEmitter`s this behaves exactly the same as calling `.listeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n```js\nconst { getEventListeners, EventEmitter } = require('events');\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  getEventListeners(ee, 'foo'); // [listener]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  getEventListeners(et, 'foo'); // [listener]\n}\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"," |_"],["DOMEventTarget"]]]},{"name":"name","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["Array","<"],["Function",">"]]]],"meta":{"line":312,"file":"events.d.ts"}},{"name":"getMaxListeners","description":"Returns the currently set max amount of listeners.\n\nFor `EventEmitter`s this behaves exactly the same as calling `.getMaxListeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"," |_"],["DOMEventTarget"]]]}],"returns":[[[["number"]]]],"meta":{"line":341,"file":"events.d.ts"}},{"name":"listenerCount","description":"A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.\n\n```js\nconst { EventEmitter, listenerCount } = require('events');\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```","scope":"static","deprecated":"Since v3.2.0 - Use `listenerCount` instead.","params":[{"name":"emitter","description":"The emitter to query","optional":false,"type":[[["EventEmitter"]]]},{"name":"eventName","description":"The event name","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["number"]]]],"meta":{"line":284,"file":"events.d.ts"}},{"name":"on","description":"```js\nconst { on, EventEmitter } = require('events');\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo')) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n```\n\nReturns an `AsyncIterator` that iterates `eventName` events. It will throw\nif the `EventEmitter` emits `'error'`. It removes all listeners when\nexiting the loop. The `value` returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn `AbortSignal` can be used to cancel waiting on events:\n\n```js\nconst { on, EventEmitter } = require('events');\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"]]]},{"name":"eventName","description":"The name of the event being listened for","optional":false,"type":[[["string"]]]},{"name":"options","optional":true,"type":[[["StaticEventEmitterOptions"]]]}],"returns":[{"types":[[["AsyncIterableIterator","<"],["any",">"]]],"description":"that iterates `eventName` events emitted by the `emitter`"}],"returnsDescription":"that iterates `eventName` events emitted by the `emitter`","meta":{"line":263,"file":"events.d.ts"}},{"name":"once","description":"Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special`'error'` event\nsemantics and does not listen to the `'error'` event.\n\n```js\nconst { once, EventEmitter } = require('events');\n\nasync function run() {\n  const ee = new EventEmitter();\n\n  process.nextTick(() => {\n    ee.emit('myevent', 42);\n  });\n\n  const [value] = await once(ee, 'myevent');\n  console.log(value);\n\n  const err = new Error('kaboom');\n  process.nextTick(() => {\n    ee.emit('error', err);\n  });\n\n  try {\n    await once(ee, 'myevent');\n  } catch (err) {\n    console.log('error happened', err);\n  }\n}\n\nrun();\n```\n\nThe special handling of the `'error'` event is only used when `events.once()`is used to wait for another event. If `events.once()` is used to wait for the\n'`error'` event itself, then it is treated as any other kind of event without\nspecial handling:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.log('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```\n\nAn `AbortSignal` can be used to cancel waiting for the event:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["_"],["NodeEventTarget"]]]},{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"options","optional":true,"type":[[["StaticEventEmitterOptions"]]]}],"returns":[[[["Promise","<"],["Array","<"],["any",">>"]]]],"meta":{"line":199,"file":"events.d.ts"}},{"name":"setMaxListeners","description":"```js\nconst {\n  setMaxListeners,\n  EventEmitter\n} = require('events');\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```","scope":"static","params":[{"name":"n","description":"A non-negative number. The maximum number of listeners per `EventTarget` event.","optional":true,"type":[[["number"]]]},{"name":"eventTargets","optional":false,"variable":true,"type":[[["Array","<"],["EventEmitter"," |_"],["DOMEventTarget",">"]]]}],"returns":[[[["void"]]]],"meta":{"line":359,"file":"events.d.ts"}}]},{"name":"BaseGuild","extends":[[["Base"]]],"construct":{"name":"new BaseGuild","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIPartialGuild",">"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"banner","description":"Banner hash","type":[[["null"," |"],["string"]]],"meta":{"line":71,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L71"}},{"name":"description","description":"The description of a guild","type":[[["null"," |"],["string"]]],"meta":{"line":87,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L87"}},{"name":"features","description":"Enabled guild features","type":[[["Array","<"],["GuildFeature",">"]]],"meta":{"line":79,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L79"}},{"name":"icon","description":"Icon hash","type":[[["null"," |"],["string"]]],"meta":{"line":75,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L75"}},{"name":"id","description":"The guild id","type":[[["string"]]],"meta":{"line":103,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L103"}},{"name":"name","description":"Guild name (2-100 characters, excluding trailing and leading whitespace)","type":[[["string"]]],"meta":{"line":99,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L99"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"splash","description":"Splash hash","type":[[["null"," |"],["string"]]],"meta":{"line":83,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L83"}},{"name":"vanityUrlCode","description":"The vanity url code for the guild","type":[[["null"," |"],["string"]]],"meta":{"line":95,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L95"}},{"name":"verificationLevel","description":"Verification level required for the guild","type":[[["null"," |"],["GuildVerificationLevel"]]],"meta":{"line":91,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L91"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APIPartialGuild"]]]}],"returns":[[[["BaseGuild"]]]],"meta":{"line":139,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L139"}},{"name":"bannerURL","params":[{"name":"format","optional":true,"type":[[["GuildBannerFormat"]]]}],"returns":[[[["null"," |"],["string"]]]],"meta":{"line":125,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L125"}},{"name":"iconURL","params":[{"name":"format","optional":true,"type":[[["GuildIconFormat"]]]}],"returns":[[[["null"," |"],["string"]]]],"meta":{"line":110,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L110"}},{"name":"toJSON","returns":[[[["void"]]]],"meta":{"line":88,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L88"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"BaseVoiceChannel","extends":[[["GuildChannel"]]],"construct":{"name":"new BaseVoiceChannel","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIVoiceChannelBase","<"],["GuildVoice"," |"],["GuildStageVoice",">>"]]]},{"name":"guild","optional":false,"type":[[["Guild"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"bitrate","description":"The bitrate (in bits) of the voice channel","type":[[["number"]]],"meta":{"line":853,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L853"}},{"name":"flags","description":"The flags of the channel","type":[[["null"," |"],["ChannelFlags"]]],"meta":{"line":75,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L75"}},{"name":"guild","type":[[["Guild"]]],"meta":{"line":335,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L335"}},{"name":"guildId","description":"The id of the guild (may be missing for some channel objects received over gateway guild dispatches)","type":[[["string"]]],"meta":{"line":339,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L339"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"members","description":"Members in this voice channel","type":[[["MemberDataManager"]]],"meta":{"line":861,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L861"}},{"name":"name","description":"The name of the channel (2-100 characters)","type":[[["null"," |"],["string"]]],"meta":{"line":71,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L71"}},{"name":"nsfw","description":"Whether the channel is nsfw","type":[[["boolean"]]],"meta":{"line":357,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L357"}},{"name":"parentId","description":"ID of the parent category for a channel (each parent category can contain up to 50 channels)\nOR\nID of the parent channel for thread","type":[[["string"]]],"meta":{"line":345,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L345"}},{"name":"permissionOverwrites","description":"Explicit permission overwrites for members and roles","type":[[["DataCache","<"],["PermissionOverwrite",">"]]],"meta":{"line":349,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L349"}},{"name":"position","description":"Sorting position of the channel","type":[[["number"]]],"meta":{"line":353,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L353"}},{"name":"rawData","type":[[["APIChannel"]]],"meta":{"line":77,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L77"}},{"name":"rtcRegion","description":"Voice region id for the voice or stage channel","type":[[["string"]]],"meta":{"line":849,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L849"}},{"name":"threads","description":"The threads in this channel","type":[[["DataCache","<"],["ThreadChannel",">"]]],"meta":{"line":361,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L361"}},{"name":"type","description":"The type of the channel","type":[[["ChannelType"]]],"meta":{"line":67,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L67"}},{"name":"userLimit","description":"The user limit of the voice channel","type":[[["number"]]],"meta":{"line":857,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L857"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APIVoiceChannelBase","<"],["GuildVoice"," |"],["GuildStageVoice",">"]]]}],"returns":[[[["BaseVoiceChannel"]]]],"meta":{"line":877,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L877"}},{"name":"edit","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPatchAPIChannelJSONBody",">"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":86,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L86"}},{"name":"editPermissions","params":[{"name":"overwriteId","description":"User or Role id","optional":false,"type":[[["string"]]]},{"name":"options","description":"Options to edit permissions","optional":false,"type":[[["APIOverwrite"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":393,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L393"}},{"name":"fetchInformation","description":"Update information of this channel\n\nUtil if this is forged","returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":195,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L195"}},{"name":"isDM","returns":[[[["this"," "],["is"," "],["DMChannel"]]]],"meta":{"line":151,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L151"}},{"name":"isGuildChannel","returns":[[[["this"," "],["is"," "],["GuildChannel"]]]],"meta":{"line":163,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L163"}},{"name":"isGuildText","returns":[[[["this"," "],["is"," "],["GuildTextChannel"]]]],"meta":{"line":159,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L159"}},{"name":"isStage","returns":[[[["this"," "],["is"," "],["StageChannel"]]]],"meta":{"line":177,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L177"}},{"name":"isText","returns":[[[["this"," "],["is"," "],["TextBasedChannel"]]]],"meta":{"line":155,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L155"}},{"name":"isThread","returns":[[[["this"," "],["is"," "],["ThreadChannel"]]]],"meta":{"line":173,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L173"}},{"name":"isVoice","returns":[[[["this"," "],["is"," "],["VoiceChannel"]]]],"meta":{"line":181,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L181"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\nbitrate",": "],["number",","],["\ncreatedAt",": "],["number",","],["\nflags",": "],["null"," |"],["ChannelFlags",","],["\nguild",": "],["Guild",","],["\nguildId",": "],["string",","],["\nid",": "],["string",","],["\nmembers",": "],["MemberDataManager",","],["\nname",": "],["null"," |"],["string",","],["\nnsfw",": "],["boolean",","],["\nparentId",": "],["string",","],["\npermissionOverwrites",": "],["DataCache","<"],["PermissionOverwrite",">,"],["\nposition",": "],["number",","],["\nrawData",": "],["APIChannel",","],["\nrtcRegion",": "],["string",","],["\nthreads",": "],["DataCache","<"],["ThreadChannel",">,"],["\ntype",": "],["ChannelType",","],["\nuserLimit",": "],["number\n","}>>"]]]],"meta":{"line":890,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L890"}},{"name":"toString","returns":[[[["unknown"]]]],"meta":{"line":117,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L117"}},{"name":"from","scope":"static","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIChannel",">"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]}],"returns":[[[["Channel"]]]],"meta":{"line":200,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L200"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"BitField","construct":{"name":"new BitField","params":[{"name":"raw","optional":false,"type":[[["T"]]]},{"name":"flags","optional":false,"type":[[["FLAGS"]]]}]},"props":[{"name":"flags","type":[[["FLAGS"]]],"meta":{"line":5,"file":"BitField.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/BitField.ts#L5"}},{"name":"raw","type":[[["T"]]],"meta":{"line":5,"file":"BitField.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/BitField.ts#L5"}}],"methods":[{"name":"has","params":[{"name":"bits","optional":false,"type":[[["T"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":6,"file":"BitField.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/BitField.ts#L6"}},{"name":"toArray","returns":[[[["Array","<"],["string",">"]]]],"meta":{"line":10,"file":"BitField.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/BitField.ts#L10"}}]},{"name":"Cache","extends":[[["Map","<"],["string",", "],["V",">"]]],"construct":{"name":"new Cache","params":[{"name":"entries","optional":true,"type":[[["CacheEntries","<"],["string",", "],["V",">"]]]}]},"props":[{"name":"#sweeper","access":"private","type":[[["null"," |{"],["\nfilter",": "],["undefined"," |("],["value",": "],["V",") => "],["boolean",","],["\nkeep",": "],["undefined"," |("],["value",": "],["V",") => "],["boolean",","],["\nlifetime",": "],["undefined"," |"],["number\n","}"]]],"meta":{"line":9,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L9"}},{"name":"[toStringTag]","readonly":true,"type":[[["string"]]],"meta":{"line":135,"file":"lib.es2015.symbol.wellknown.d.ts"}},{"name":"limit","type":[[["number"]]],"meta":{"line":8,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L8"}},{"name":"size","readonly":true,"type":[[["number"]]],"meta":{"line":48,"file":"lib.es2015.collection.d.ts"}},{"name":"[species]","scope":"static","readonly":true,"type":[[["MapConstructor"]]],"meta":{"line":317,"file":"lib.es2015.symbol.wellknown.d.ts"}}],"methods":[{"name":"[iterator]","description":"Returns an iterable of entries in the map.","returns":[[[["IterableIterator","<["],["string",", "],["V","]>"]]]],"meta":{"line":121,"file":"lib.es2015.iterable.d.ts"}},{"name":"at","params":[{"name":"index","optional":false,"type":[[["number"]]]}],"returns":[[[["undefined"," |"],["V"]]]],"meta":{"line":173,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L173"}},{"name":"clear","returns":[[[["void"]]]],"meta":{"line":23,"file":"lib.es2015.collection.d.ts"}},{"name":"delete","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[{"types":[[["boolean"]]],"description":"true if an element in the Map existed and has been removed, or false if the element does not exist."}],"returnsDescription":"true if an element in the Map existed and has been removed, or false if the element does not exist.","meta":{"line":27,"file":"lib.es2015.collection.d.ts"}},{"name":"entries","description":"Returns an iterable of key, value pairs for every entry in the map.","returns":[[[["IterableIterator","<["],["string",", "],["V","]>"]]]],"meta":{"line":126,"file":"lib.es2015.iterable.d.ts"}},{"name":"every","params":[{"name":"fn","optional":false,"type":[[["("],["value",": "],["V",", "],["key",": "],["string",", "],["cache",": "],["Cache","<"],["V",">) => "],["boolean"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":116,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L116"}},{"name":"filter","params":[{"name":"fn","optional":false,"type":[[["("],["value",": "],["V",", "],["key",": "],["string",", "],["cache",": "],["Cache","<"],["V",">) => "],["boolean"]]]}],"returns":[[[["Cache","<"],["V",">"]]]],"meta":{"line":92,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L92"}},{"name":"find","params":[{"name":"fn","optional":false,"type":[[["("],["value",": "],["V",", "],["key",": "],["string",", "],["cache",": "],["Cache","<"],["V",">) => "],["boolean"]]]}],"returns":[[[["undefined"," |["],["string",", "],["V","]"]]]],"meta":{"line":104,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L104"}},{"name":"first","returns":[[[["V"]]]],"meta":{"line":140,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L140"}},{"name":"forEach","params":[{"name":"fn","optional":false,"type":[[["("],["value",": "],["V",", "],["key",": "],["string",", "],["cache",": "],["Cache","<"],["V",">) => "],["void"]]]}],"returns":[[[["void"]]]],"meta":{"line":86,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L86"}},{"name":"get","description":"Returns a specified element from the Map object. If the value that is associated to the provided key is an object, then you will get a reference to that object and any change made to that object will effectively modify it inside the Map.","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[{"types":[[["undefined"," |"],["V"]]],"description":"Returns the element associated with the specified key. If no element is associated with the specified key, undefined is returned."}],"returnsDescription":"Returns the element associated with the specified key. If no element is associated with the specified key, undefined is returned.","meta":{"line":36,"file":"lib.es2015.collection.d.ts"}},{"name":"has","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[{"types":[[["boolean"]]],"description":"boolean indicating whether an element with the specified key exists or not."}],"returnsDescription":"boolean indicating whether an element with the specified key exists or not.","meta":{"line":40,"file":"lib.es2015.collection.d.ts"}},{"name":"indexOf","params":[{"name":"value","optional":false,"type":[[["V"]]]}],"returns":[[[["number"]]]],"meta":{"line":185,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L185"}},{"name":"keyOf","params":[{"name":"value","optional":false,"type":[[["V"]]]}],"returns":[[[["string"]]]],"meta":{"line":197,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L197"}},{"name":"keys","description":"Returns an iterable of keys in the map","returns":[[[["IterableIterator","<"],["string",">"]]]],"meta":{"line":131,"file":"lib.es2015.iterable.d.ts"}},{"name":"last","returns":[[[["V"]]]],"meta":{"line":159,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L159"}},{"name":"map","params":[{"name":"fn","optional":false,"type":[[["("],["value",": "],["V",", "],["key",": "],["string",", "],["cache",": "],["Cache","<"],["V",">) => {"],["\nkey",": "],["string",","],["\nvalue",": "],["MV\n","}"]]]}],"returns":[[[["Cache","<"],["MV",">"]]]],"meta":{"line":124,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L124"}},{"name":"partition","params":[{"name":"fn","optional":false,"type":[[["("],["value",": "],["V",", "],["key",": "],["string",", "],["cache",": "],["Cache","<"],["V",">) => "],["boolean"]]]}],"returns":[[[["["],["Cache","<"],["V",">, "],["Cache","<"],["V",">]"]]]],"meta":{"line":216,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L216"}},{"name":"reduce","params":[{"name":"fn","optional":false,"type":[[["("],["previous",": ["],["string",", "],["V","], "],["current",": ["],["string",", "],["V","]) => ["],["string",", "],["V","]"]]]},{"name":"initialValue","optional":false,"type":[[["["],["string",", "],["V","]"]]]}],"returns":[[[["["],["string",", "],["V","]"]]]],"meta":{"line":190,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L190"}},{"name":"reverse","returns":[[[["Cache","<"],["V",">"]]]],"meta":{"line":181,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L181"}},{"name":"set","params":[{"name":"key","optional":false,"type":[[["string"]]]},{"name":"value","optional":false,"type":[[["V"]]]}],"returns":[[[["Cache","<"],["V",">"]]]],"meta":{"line":67,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L67"}},{"name":"some","params":[{"name":"fn","optional":false,"type":[[["("],["value",": "],["V",", "],["key",": "],["string",", "],["cache",": "],["Cache","<"],["V",">) => "],["boolean"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":120,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L120"}},{"name":"sweep","params":[{"name":"fn","optional":false,"type":[[["("],["value",": "],["V",", "],["key",": "],["string",", "],["cache",": "],["Cache","<"],["V",">) => "],["boolean"]]]}],"returns":[[[["number"]]]],"meta":{"line":204,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L204"}},{"name":"values","description":"Returns an iterable of values in the map","returns":[[[["IterableIterator","<"],["V",">"]]]],"meta":{"line":136,"file":"lib.es2015.iterable.d.ts"}}]},{"name":"CacheManager","construct":{"name":"new CacheManager","params":[{"name":"client","optional":false,"type":[[["InteractionClient"," |"],["Client"]]]}]},"props":[{"name":"channels","type":[[["ClientChannelsDataManager"]]],"meta":{"line":16,"file":"CacheManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/CacheManager.ts#L16"}},{"name":"client","type":[[["InteractionClient"," |"],["Client"]]],"meta":{"line":22,"file":"CacheManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/CacheManager.ts#L22"}},{"name":"emojis","type":[[["EmojiDataManager"]]],"meta":{"line":18,"file":"CacheManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/CacheManager.ts#L18"}},{"name":"guilds","type":[[["GuildDataManager"]]],"meta":{"line":17,"file":"CacheManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/CacheManager.ts#L17"}},{"name":"roles","type":[[["ClientRoles"]]],"meta":{"line":20,"file":"CacheManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/CacheManager.ts#L20"}},{"name":"threads","type":[[["DataCache","<"],["ThreadChannel",">"]]],"meta":{"line":21,"file":"CacheManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/CacheManager.ts#L21"}},{"name":"users","type":[[["UserDataManager"]]],"meta":{"line":19,"file":"CacheManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/CacheManager.ts#L19"}}],"methods":[{"name":"_cacheInstance","params":[{"name":"o","optional":false,"type":[[["any"]]]}],"returns":[[[["o"," "],["is"," "],["Cache","<"],["any",">"]]]],"meta":{"line":104,"file":"CacheManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/CacheManager.ts#L104"}},{"name":"_cacheLimit","params":[{"name":"option","optional":false,"type":[[["string"]]]}],"returns":[[[["number"]]]],"meta":{"line":108,"file":"CacheManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/CacheManager.ts#L108"}},{"name":"_createCache","params":[{"name":"option","optional":false,"type":[[["users"," |"],["roles"," |"],["emojis"," |"],["threads"," |"],["channels"," |"],["guilds"]]]}],"returns":[[[["UserDataManager"," |"],["EmojiDataManager"," |"],["ClientRoles"," |"],["GuildDataManager"," |"],["ClientChannelsDataManager"," |"],["DataCache","<"],["Record","<"],["string",", "],["any",">>"]]]],"meta":{"line":31,"file":"CacheManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/CacheManager.ts#L31"}},{"name":"_partial","params":[{"name":"p","optional":false,"type":[[["Partials"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":100,"file":"CacheManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/CacheManager.ts#L100"}},{"name":"cleanup","params":[{"name":"clearGuilds","optional":true,"default":"false","type":[[["boolean"]]]}],"returns":[[[["void"]]]],"meta":{"line":65,"file":"CacheManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/CacheManager.ts#L65"}},{"name":"isPartialCache","params":[{"name":"cache","optional":false,"type":[[["users"," |"],["roles"," |"],["emojis"," |"],["stickers"," |"],["reactions"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":77,"file":"CacheManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/CacheManager.ts#L77"}}]},{"name":"CategoryChannel","extends":[[["GuildChannel"]]],"construct":{"name":"new CategoryChannel","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIGuildCategoryChannel",">"]]]},{"name":"guild","optional":false,"type":[[["Guild"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"channels","description":"The channels present in this category","type":[[["GuildChannelDataManager"]]],"meta":{"line":723,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L723"}},{"name":"flags","description":"The flags of the channel","type":[[["null"," |"],["ChannelFlags"]]],"meta":{"line":75,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L75"}},{"name":"guild","type":[[["Guild"]]],"meta":{"line":335,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L335"}},{"name":"guildId","description":"The id of the guild (may be missing for some channel objects received over gateway guild dispatches)","type":[[["string"]]],"meta":{"line":339,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L339"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"name","description":"The name of the channel (2-100 characters)","type":[[["null"," |"],["string"]]],"meta":{"line":71,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L71"}},{"name":"nsfw","description":"Whether the channel is nsfw","type":[[["boolean"]]],"meta":{"line":357,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L357"}},{"name":"parentId","description":"ID of the parent category for a channel (each parent category can contain up to 50 channels)\nOR\nID of the parent channel for thread","type":[[["string"]]],"meta":{"line":345,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L345"}},{"name":"permissionOverwrites","description":"Explicit permission overwrites for members and roles","type":[[["DataCache","<"],["PermissionOverwrite",">"]]],"meta":{"line":349,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L349"}},{"name":"position","description":"Sorting position of the channel","type":[[["number"]]],"meta":{"line":353,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L353"}},{"name":"rawData","type":[[["APIChannel"]]],"meta":{"line":77,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L77"}},{"name":"threads","description":"The threads in this channel","type":[[["DataCache","<"],["ThreadChannel",">"]]],"meta":{"line":361,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L361"}},{"name":"type","description":"The type of the channel","type":[[["ChannelType"]]],"meta":{"line":67,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L67"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APIGuildChannelResolvable"]]]}],"returns":[[[["CategoryChannel"]]]],"meta":{"line":402,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L402"}},{"name":"edit","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPatchAPIChannelJSONBody",">"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":86,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L86"}},{"name":"editPermissions","params":[{"name":"overwriteId","description":"User or Role id","optional":false,"type":[[["string"]]]},{"name":"options","description":"Options to edit permissions","optional":false,"type":[[["APIOverwrite"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":393,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L393"}},{"name":"fetchInformation","description":"Update information of this channel\n\nUtil if this is forged","returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":195,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L195"}},{"name":"isDM","returns":[[[["this"," "],["is"," "],["DMChannel"]]]],"meta":{"line":151,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L151"}},{"name":"isGuildChannel","returns":[[[["this"," "],["is"," "],["GuildChannel"]]]],"meta":{"line":163,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L163"}},{"name":"isGuildText","returns":[[[["this"," "],["is"," "],["GuildTextChannel"]]]],"meta":{"line":159,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L159"}},{"name":"isStage","returns":[[[["this"," "],["is"," "],["StageChannel"]]]],"meta":{"line":177,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L177"}},{"name":"isText","returns":[[[["this"," "],["is"," "],["TextBasedChannel"]]]],"meta":{"line":155,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L155"}},{"name":"isThread","returns":[[[["this"," "],["is"," "],["ThreadChannel"]]]],"meta":{"line":173,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L173"}},{"name":"isVoice","returns":[[[["this"," "],["is"," "],["VoiceChannel"]]]],"meta":{"line":181,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L181"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\nchannels",": "],["GuildChannelDataManager",","],["\ncreatedAt",": "],["number",","],["\nflags",": "],["null"," |"],["ChannelFlags",","],["\nguild",": "],["Guild",","],["\nguildId",": "],["string",","],["\nid",": "],["string",","],["\nname",": "],["null"," |"],["string",","],["\nnsfw",": "],["boolean",","],["\nparentId",": "],["string",","],["\npermissionOverwrites",": "],["DataCache","<"],["PermissionOverwrite",">,"],["\nposition",": "],["number",","],["\nrawData",": "],["APIChannel",","],["\nthreads",": "],["DataCache","<"],["ThreadChannel",">,"],["\ntype",": "],["ChannelType\n","}>>"]]]],"meta":{"line":742,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L742"}},{"name":"toString","returns":[[[["unknown"]]]],"meta":{"line":117,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L117"}},{"name":"from","scope":"static","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIChannel",">"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]}],"returns":[[[["Channel"]]]],"meta":{"line":200,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L200"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"Channel","extends":[[["Base"]]],"construct":{"name":"new Channel","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIChannelBase","<"],["ChannelType",">>"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"flags","description":"The flags of the channel","type":[[["null"," |"],["ChannelFlags"]]],"meta":{"line":75,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L75"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"name","description":"The name of the channel (2-100 characters)","type":[[["null"," |"],["string"]]],"meta":{"line":71,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L71"}},{"name":"rawData","type":[[["APIChannel"]]],"meta":{"line":77,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L77"}},{"name":"type","description":"The type of the channel","type":[[["ChannelType"]]],"meta":{"line":67,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L67"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APIChannel"]]]}],"returns":[[[["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel"]]]],"meta":{"line":132,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L132"}},{"name":"edit","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPatchAPIChannelJSONBody",">"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":86,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L86"}},{"name":"fetchInformation","description":"Update information of this channel\n\nUtil if this is forged","returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":195,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L195"}},{"name":"isDM","returns":[[[["this"," "],["is"," "],["DMChannel"]]]],"meta":{"line":151,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L151"}},{"name":"isGuildChannel","returns":[[[["this"," "],["is"," "],["GuildChannel"]]]],"meta":{"line":163,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L163"}},{"name":"isGuildText","returns":[[[["this"," "],["is"," "],["GuildTextChannel"]]]],"meta":{"line":159,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L159"}},{"name":"isStage","returns":[[[["this"," "],["is"," "],["StageChannel"]]]],"meta":{"line":177,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L177"}},{"name":"isText","returns":[[[["this"," "],["is"," "],["TextBasedChannel"]]]],"meta":{"line":155,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L155"}},{"name":"isThread","returns":[[[["this"," "],["is"," "],["ThreadChannel"]]]],"meta":{"line":173,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L173"}},{"name":"isVoice","returns":[[[["this"," "],["is"," "],["VoiceChannel"]]]],"meta":{"line":181,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L181"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\ncreatedAt",": "],["number",","],["\nflags",": "],["null"," |"],["ChannelFlags",","],["\nid",": "],["string",","],["\nname",": "],["null"," |"],["string",","],["\nrawData",": "],["APIChannel",","],["\ntype",": "],["ChannelType\n","}>>"]]]],"meta":{"line":121,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L121"}},{"name":"toString","returns":[[[["unknown"]]]],"meta":{"line":117,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L117"}},{"name":"from","scope":"static","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIChannel",">"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]}],"returns":[[[["Channel"]]]],"meta":{"line":200,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L200"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"ChannelDataManager","extends":[[["DataManager","<"],["Channel",">"]]],"construct":{"name":"new ChannelDataManager","params":[{"name":"options","optional":false,"type":[[["number"," |"],["BaseCacheOptions","<"],["unknown",">"]]]},{"name":"manager","optional":false,"type":[[["CacheManager"]]]}]},"props":[{"name":"cache","type":[[["DataCache","<"],["Channel",">"]]],"meta":{"line":53,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L53"}},{"name":"manager","type":[[["CacheManager"]]],"meta":{"line":16,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L16"}}],"methods":[{"name":"_resolve","params":[{"name":"channel","optional":false,"type":[[["Channel"," |"],["APIChannel"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]},{"name":"addInCache","optional":true,"default":"false","type":[[["boolean"]]]}],"returns":[[[["Channel"]]]],"meta":{"line":24,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L24"}},{"name":"add","params":[{"name":"channel","optional":false,"type":[[["Channel"," |"],["APIChannel"]]]},{"name":"replace","optional":true,"default":"true","type":[[["boolean"]]]}],"returns":[[[["any"]]]],"meta":{"line":59,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L59"}},{"name":"fetch","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["any",">"]]]],"meta":{"line":77,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L77"}},{"name":"forge","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["any"]]]],"meta":{"line":67,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L67"}},{"name":"get","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["undefined"," |"],["Channel"]]]],"meta":{"line":63,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L63"}}]},{"name":"ChannelFlags","extends":[[["BitField","<"],["CFlags",", ("],["typeof"," "],["CFlags",")>"]]],"construct":{"name":"new ChannelFlags","params":[{"name":"flags","optional":false,"type":[[["ChannelFlags"]]]}]},"props":[{"name":"flags","type":[[["("],["typeof"," "],["ChannelFlags",")"]]],"meta":{"line":5,"file":"BitField.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/BitField.ts#L5"}},{"name":"raw","type":[[["ChannelFlags"]]],"meta":{"line":5,"file":"BitField.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/BitField.ts#L5"}},{"name":"Flags","scope":"static","default":"CFlags","type":[[["("],["typeof"," "],["ChannelFlags",")"]]],"meta":{"line":58,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L58"}}],"methods":[{"name":"has","params":[{"name":"bits","optional":false,"type":[[["ChannelFlags"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":6,"file":"BitField.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/BitField.ts#L6"}},{"name":"toArray","returns":[[[["Array","<"],["string",">"]]]],"meta":{"line":10,"file":"BitField.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/BitField.ts#L10"}}]},{"name":"ChatInputApplicationCommandInteractionData","extends":[[["Base"]]],"construct":{"name":"new ChatInputApplicationCommandInteractionData","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIChatInputApplicationCommandInteractionData",">"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"guildId","description":"The guild ID of the invoked command","type":[[["string"]]],"meta":{"line":986,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L986"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"name","description":"The name of the invoked command","type":[[["string"]]],"meta":{"line":981,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L981"}},{"name":"options","description":"The options of the invoked command","type":[[["null"," |"],["CommandInteractionOptions"]]],"meta":{"line":991,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L991"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"type","description":"The type of the invoked command","type":[[["ChatInput"]]],"meta":{"line":977,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L977"}}],"methods":[{"name":"toJSON","returns":[[[["void"]]]],"meta":{"line":88,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L88"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"Client","extends":[[["BaseClient","<"],["ClientEvents",">"]]],"construct":{"name":"new Client","params":[{"name":"token","optional":false,"type":[[["string"]]]},{"name":"options","optional":false,"type":[[["ClientOptions"]]]}]},"props":[{"name":"application","description":"Application of this client","type":[[["null"," |"],["ClientApplication"]]],"meta":{"line":52,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L52"}},{"name":"applicationFlags","description":"Client application flags","type":[[["ApplicationFlags"]]],"meta":{"line":225,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L225"}},{"name":"applicationId","description":"Client application id","type":[[["string"]]],"meta":{"line":221,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L221"}},{"name":"cache","description":"The client cache","type":[[["CacheManager"]]],"meta":{"line":229,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L229"}},{"name":"channels","description":"Channels cache","type":[[["ChannelDataManager"]]],"meta":{"line":245,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L245"}},{"name":"emojis","description":"Client emojis","type":[[["EmojiDataManager"]]],"meta":{"line":257,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L257"}},{"name":"guilds","description":"Client guilds","type":[[["GuildDataManager"]]],"meta":{"line":249,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L249"}},{"name":"isReady","description":"Client has ready","type":[[["boolean"]]],"meta":{"line":56,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L56"}},{"name":"options","description":"Client options","type":[[["Required","<"],["Omit","<"],["ClientOptions",", "],["gateway","> & {"],["\ngateway",": "],["Omit","<"],["Required","<{"],["\ncompress",": "],["boolean",","],["\nconcurrency",": "],["number",","],["\ndisabledEvents",": "],["Array","<"],["keyof"," "],["ClientEvents",">,"],["\nencoding",": "],["json"," |"],["etf",","],["\nintents",": "],["GatewayIntentBits"," |"],["Array","<"],["GatewayIntentBits",">,"],["\nproperties",": {"],["\nbrowser",": "],["string",","],["\ndevice",": "],["string\n","},"],["\ntotalShards",": "],["number\n","}>, "],["intents","> & {"],["\nintents",": "],["GatewayIntentBits\n","}"],["\n","}>"]]],"meta":{"line":211,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L211"}},{"name":"pluginManager","description":"Plugin manager for library plugins","type":[[["PluginManager"]]],"meta":{"line":241,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L241"}},{"name":"readyAt","description":"Time that the bot was ready","type":[[["number"]]],"meta":{"line":60,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L60"}},{"name":"rest","description":"Client rest to make requests","type":[[["Rest"]]],"meta":{"line":44,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L44"}},{"name":"roles","description":"Client roles","type":[[["ClientRoles"]]],"meta":{"line":253,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L253"}},{"name":"threads","description":"Client threads","type":[[["DataCache","<"],["ThreadChannel",">"]]],"meta":{"line":261,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L261"}},{"name":"token","description":"Client token","type":[[["string"]]],"meta":{"line":210,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L210"}},{"name":"user","description":"Client user","type":[[["null"," |"],["User"]]],"meta":{"line":237,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L237"}},{"name":"users","description":"Client users","type":[[["UserDataManager"]]],"meta":{"line":265,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L265"}},{"name":"websocket","description":"Client websocket manager for shards","type":[[["WebSocket"]]],"meta":{"line":233,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L233"}},{"name":"captureRejectionSymbol","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["captureRejectionSymbol",")"]]],"meta":{"line":405,"file":"events.d.ts"}},{"name":"captureRejections","description":"Sets or gets the default captureRejection value for all emitters.","scope":"static","type":[[["boolean"]]],"meta":{"line":410,"file":"events.d.ts"}},{"name":"defaultMaxListeners","scope":"static","type":[[["number"]]],"meta":{"line":411,"file":"events.d.ts"}},{"name":"errorMonitor","description":"This symbol shall be used to install a listener for only monitoring `'error'`\nevents. Listeners installed using this symbol are called before the regular\n`'error'` listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an\n`'error'` event is emitted, therefore the process will still crash if no\nregular `'error'` listener is installed.","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["errorMonitor",")"]]],"meta":{"line":404,"file":"events.d.ts"}}],"methods":[{"name":"[captureRejectionSymbol]","params":[{"name":"error","optional":false,"type":[[["Error"]]]},{"name":"event","optional":false,"type":[[["string"]]]},{"name":"args","optional":false,"variable":true,"type":[[["Array","<"],["any",">"]]]}],"returns":[[[["void"]]]],"meta":{"line":115,"file":"events.d.ts"}},{"name":"addListener","description":"Alias for `emitter.on(eventName, listener)`.","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["Client"]]]],"meta":{"line":475,"file":"events.d.ts"}},{"name":"connect","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":350,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L350"}},{"name":"disconnect","returns":[[[["void"]]]],"meta":{"line":354,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L354"}},{"name":"emit","params":[{"name":"event","optional":false,"type":[[["T"]]]},{"name":"args","optional":false,"variable":true,"type":[[["ClientEvents","["],["T","]"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":38,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L38"}},{"name":"eventNames","description":"Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.\n\n```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```","returns":[[[["Array","<"],["string"," |"],["symbol",">"]]]],"meta":{"line":794,"file":"events.d.ts"}},{"name":"getMaxListeners","description":"Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to defaultMaxListeners.","returns":[[[["number"]]]],"meta":{"line":647,"file":"events.d.ts"}},{"name":"listen","description":"Decorator to listen event","params":[{"name":"event","description":"the event for target","optional":false,"type":[[["keyof"," "],["ClientEvents"]]]}],"returns":[[[["("],["target",": "],["any",", "],["name",": "],["any",") => "],["void"]]]],"meta":{"line":83,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L83"}},{"name":"listenerCount","description":"Returns the number of listeners listening to the event named `eventName`.\n\nIf `listener` is provided, it will return how many times the listener\nis found in the list of the listeners of the event.","params":[{"name":"eventName","description":"The name of the event being listened for","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","description":"The event handler function","optional":true,"type":[[["Function"]]]}],"returns":[[[["number"]]]],"meta":{"line":741,"file":"events.d.ts"}},{"name":"listeners","description":"Returns a copy of the array of listeners for the event named `eventName`.\n\n```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["Array","<"],["Function",">"]]]],"meta":{"line":660,"file":"events.d.ts"}},{"name":"off","description":"Alias for `emitter.removeListener()`.","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["Client"]]]],"meta":{"line":620,"file":"events.d.ts"}},{"name":"on","params":[{"name":"event","optional":false,"type":[[["T"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["ClientEvents","["],["T","]) => "],["any"]]]}],"returns":[[[["Client"]]]],"meta":{"line":34,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L34"}},{"name":"once","params":[{"name":"event","optional":false,"type":[[["T"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["ClientEvents","["],["T","]) => "],["any"]]]}],"returns":[[[["Client"]]]],"meta":{"line":36,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L36"}},{"name":"prependListener","description":"Adds the `listener` function to the _beginning_ of the listeners array for the\nevent named `eventName`. No checks are made to see if the `listener` has\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\ntimes.\n\n```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"eventName","description":"The name of the event.","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","description":"The callback function","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["Client"]]]],"meta":{"line":759,"file":"events.d.ts"}},{"name":"prependOnceListener","description":"Adds a **one-time**`listener` function for the event named `eventName` to the _beginning_ of the listeners array. The next time `eventName` is triggered, this\nlistener is removed, and then invoked.\n\n```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"eventName","description":"The name of the event.","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","description":"The callback function","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["Client"]]]],"meta":{"line":775,"file":"events.d.ts"}},{"name":"rawListeners","description":"Returns a copy of the array of listeners for the event named `eventName`,\nincluding any wrappers (such as those created by `.once()`).\n\n```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["Array","<"],["Function",">"]]]],"meta":{"line":690,"file":"events.d.ts"}},{"name":"removeAllListeners","description":"Removes all listeners, or those of the specified `eventName`.\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the `EventEmitter` instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"event","optional":true,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["Client"]]]],"meta":{"line":631,"file":"events.d.ts"}},{"name":"removeListener","description":"Removes the specified `listener` from the listener array for the event named`eventName`.\n\n```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```\n\n`removeListener()` will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified `eventName`, then `removeListener()` must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any`removeListener()` or `removeAllListeners()` calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from`emit()` in progress. Subsequent events behave as expected.\n\n```js\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe `emitter.listeners()` method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), `removeListener()` will remove the most\nrecently added instance. In the example the `once('ping')`listener is removed:\n\n```js\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["Client"]]]],"meta":{"line":615,"file":"events.d.ts"}},{"name":"setMaxListeners","description":"By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"n","optional":false,"type":[[["number"]]]}],"returns":[[[["Client"]]]],"meta":{"line":641,"file":"events.d.ts"}},{"name":"setShardStatus","params":[{"name":"shardId","optional":false,"type":[[["string"," |"],["number"]]]},{"name":"data","optional":false,"type":[[["GatewayPresenceUpdateData"]]]}],"returns":[[[["{"],["\nshardId",": "],["string"," |"],["number",","],["\nstatus",": "],["GatewayPresenceUpdateData\n","}"]]]],"meta":{"line":363,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L363"}},{"name":"setStatus","params":[{"name":"data","optional":false,"type":[[["GatewayPresenceUpdateData"]]]}],"returns":[[[["GatewayPresenceUpdateData"]]]],"meta":{"line":358,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L358"}},{"name":"addAbortListener","description":"Listens once to the `abort` event on the provided `signal`.\n\nListening to the `abort` event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall `e.stopImmediatePropagation()`. Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using `AbortSignal`s in Node.js APIs by solving these\ntwo issues by listening to the event such that `stopImmediatePropagation` does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```","scope":"static","params":[{"name":"signal","optional":false,"type":[[["AbortSignal"]]]},{"name":"resource","optional":false,"type":[[["("],["event",": "],["Event",") => "],["void"]]]}],"returns":[{"types":[[["Disposable"]]],"description":"Disposable that removes the `abort` listener."}],"returnsDescription":"Disposable that removes the `abort` listener.","meta":{"line":394,"file":"events.d.ts"}},{"name":"getEventListeners","description":"Returns a copy of the array of listeners for the event named `eventName`.\n\nFor `EventEmitter`s this behaves exactly the same as calling `.listeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n```js\nconst { getEventListeners, EventEmitter } = require('events');\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  getEventListeners(ee, 'foo'); // [listener]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  getEventListeners(et, 'foo'); // [listener]\n}\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"," |_"],["DOMEventTarget"]]]},{"name":"name","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["Array","<"],["Function",">"]]]],"meta":{"line":312,"file":"events.d.ts"}},{"name":"getMaxListeners","description":"Returns the currently set max amount of listeners.\n\nFor `EventEmitter`s this behaves exactly the same as calling `.getMaxListeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"," |_"],["DOMEventTarget"]]]}],"returns":[[[["number"]]]],"meta":{"line":341,"file":"events.d.ts"}},{"name":"listenerCount","description":"A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.\n\n```js\nconst { EventEmitter, listenerCount } = require('events');\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```","scope":"static","deprecated":"Since v3.2.0 - Use `listenerCount` instead.","params":[{"name":"emitter","description":"The emitter to query","optional":false,"type":[[["EventEmitter"]]]},{"name":"eventName","description":"The event name","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["number"]]]],"meta":{"line":284,"file":"events.d.ts"}},{"name":"on","description":"```js\nconst { on, EventEmitter } = require('events');\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo')) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n```\n\nReturns an `AsyncIterator` that iterates `eventName` events. It will throw\nif the `EventEmitter` emits `'error'`. It removes all listeners when\nexiting the loop. The `value` returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn `AbortSignal` can be used to cancel waiting on events:\n\n```js\nconst { on, EventEmitter } = require('events');\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"]]]},{"name":"eventName","description":"The name of the event being listened for","optional":false,"type":[[["string"]]]},{"name":"options","optional":true,"type":[[["StaticEventEmitterOptions"]]]}],"returns":[{"types":[[["AsyncIterableIterator","<"],["any",">"]]],"description":"that iterates `eventName` events emitted by the `emitter`"}],"returnsDescription":"that iterates `eventName` events emitted by the `emitter`","meta":{"line":263,"file":"events.d.ts"}},{"name":"once","description":"Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special`'error'` event\nsemantics and does not listen to the `'error'` event.\n\n```js\nconst { once, EventEmitter } = require('events');\n\nasync function run() {\n  const ee = new EventEmitter();\n\n  process.nextTick(() => {\n    ee.emit('myevent', 42);\n  });\n\n  const [value] = await once(ee, 'myevent');\n  console.log(value);\n\n  const err = new Error('kaboom');\n  process.nextTick(() => {\n    ee.emit('error', err);\n  });\n\n  try {\n    await once(ee, 'myevent');\n  } catch (err) {\n    console.log('error happened', err);\n  }\n}\n\nrun();\n```\n\nThe special handling of the `'error'` event is only used when `events.once()`is used to wait for another event. If `events.once()` is used to wait for the\n'`error'` event itself, then it is treated as any other kind of event without\nspecial handling:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.log('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```\n\nAn `AbortSignal` can be used to cancel waiting for the event:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["_"],["NodeEventTarget"]]]},{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"options","optional":true,"type":[[["StaticEventEmitterOptions"]]]}],"returns":[[[["Promise","<"],["Array","<"],["any",">>"]]]],"meta":{"line":199,"file":"events.d.ts"}},{"name":"setMaxListeners","description":"```js\nconst {\n  setMaxListeners,\n  EventEmitter\n} = require('events');\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```","scope":"static","params":[{"name":"n","description":"A non-negative number. The maximum number of listeners per `EventTarget` event.","optional":true,"type":[[["number"]]]},{"name":"eventTargets","optional":false,"variable":true,"type":[[["Array","<"],["EventEmitter"," |_"],["DOMEventTarget",">"]]]}],"returns":[[[["void"]]]],"meta":{"line":359,"file":"events.d.ts"}}]},{"name":"ClientApplication","extends":[[["Application"]]],"construct":{"name":"new ClientApplication","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIApplication",">"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"botPublic","description":"When false only app owner can join the app's bot to guilds","type":[[["boolean"]]],"meta":{"line":34,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L34"}},{"name":"botRequireCodeGrant","description":"When true the app's bot will only join upon completion of the full oauth2 code grant flow","type":[[["boolean"]]],"meta":{"line":38,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L38"}},{"name":"coverImage","description":"The application's default rich presence invite cover image hash","type":[[["string"]]],"meta":{"line":74,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L74"}},{"name":"customInstallUrl","description":"The application's default custom authorization link, if enabled","type":[[["string"]]],"meta":{"line":98,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L98"}},{"name":"description","description":"The description of the app","type":[[["string"]]],"meta":{"line":26,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L26"}},{"name":"flags","description":"The application's public flags","type":[[["ApplicationFlags"]]],"meta":{"line":78,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L78"}},{"name":"guildId","description":"If this application is a game sold on Discord, this field will be the guild to which it has been linked","type":[[["string"]]],"meta":{"line":62,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L62"}},{"name":"icon","description":"The icon hash of the app","type":[[["null"," |"],["string"]]],"meta":{"line":22,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L22"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"installParams","description":"Settings for the application's default in-app authorization link, if enabled","type":[[["APIApplicationInstallParams"]]],"meta":{"line":94,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L94"}},{"name":"name","description":"The name of the app","type":[[["string"]]],"meta":{"line":18,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L18"}},{"name":"owner","description":"Partial user object containing info on the owner of the application","type":[[["null"," |"],["User"]]],"meta":{"line":50,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L50"}},{"name":"primarySkuId","description":"If this application is a game sold on Discord, this field will be the id of the \"Game SKU\" that is created, if exists","type":[[["string"]]],"meta":{"line":66,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L66"}},{"name":"privacyPolicyUrl","description":"The url of the app's privacy policy","type":[[["string"]]],"meta":{"line":46,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L46"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"roleConnectionsVerificationUrl","description":"The application's role connection verification entry point, which when configured will render the app as a verification method in the guild role verification configuration","type":[[["string"]]],"meta":{"line":102,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L102"}},{"name":"rpcOrigins","description":"An array of rpc origin urls, if rpc is enabled","type":[[["Array","<"],["string",">"]]],"meta":{"line":30,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L30"}},{"name":"slug","description":"If this application is a game sold on Discord, this field will be the URL slug that links to the store page","type":[[["string"]]],"meta":{"line":70,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L70"}},{"name":"tags","description":"Up to 5 tags describing the content and functionality of the application","type":[[["["],["string",", "],["unknown",", "],["unknown",", "],["unknown",", "],["unknown","]"]]],"meta":{"line":82,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L82"}},{"name":"team","description":"If the application belongs to a team, this will be a list of the members of that team","type":[[["null"," |"],["Team"]]],"meta":{"line":58,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L58"}},{"name":"termsOfServiceUrl","description":"The url of the app's terms of service","type":[[["string"]]],"meta":{"line":42,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L42"}},{"name":"verifyKey","description":"The hex encoded key for verification in interactions and the GameSDK's GetTicket","type":[[["string"]]],"meta":{"line":54,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L54"}}],"methods":[{"name":"bulkOverwriteCommands","params":[{"name":"commands","optional":false,"type":[[["RESTPutAPIApplicationCommandsJSONBody"]]]}],"returns":[[[["Promise","<"],["Array","<"],["APIApplication",">>"]]]],"meta":{"line":185,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L185"}},{"name":"bulkOverwriteGuildCommands","params":[{"name":"guildId","optional":false,"type":[[["string"]]]},{"name":"commands","optional":false,"type":[[["RESTPutAPIApplicationCommandsJSONBody"]]]}],"returns":[[[["Promise","<"],["Array","<"],["APIApplication",">>"]]]],"meta":{"line":192,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L192"}},{"name":"createCommand","params":[{"name":"options","optional":false,"type":[[["RESTPostAPIApplicationCommandsJSONBody"]]]}],"returns":[[[["Promise","<"],["APIApplicationCommand",">"]]]],"meta":{"line":134,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L134"}},{"name":"createGuildCommand","params":[{"name":"guildId","optional":false,"type":[[["string"]]]},{"name":"options","optional":false,"type":[[["RESTPostAPIApplicationCommandsJSONBody"]]]}],"returns":[[[["Promise","<"],["APIApplicationCommand",">"]]]],"meta":{"line":138,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L138"}},{"name":"deleteCommand","params":[{"name":"commandId","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":149,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L149"}},{"name":"deleteGuildCommand","params":[{"name":"guildId","optional":false,"type":[[["string"]]]},{"name":"commandId","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":153,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L153"}},{"name":"editCommand","params":[{"name":"commandId","optional":false,"type":[[["string"]]]},{"name":"options","optional":false,"type":[[["RESTPatchAPIApplicationCommandJSONBody"]]]}],"returns":[[[["Promise","<"],["APIApplication",">"]]]],"meta":{"line":161,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L161"}},{"name":"editGuildCommand","params":[{"name":"guildId","optional":false,"type":[[["string"]]]},{"name":"commandId","optional":false,"type":[[["string"]]]},{"name":"options","optional":false,"type":[[["RESTPatchAPIApplicationCommandJSONBody"]]]}],"returns":[[[["Promise","<"],["APIApplication",">"]]]],"meta":{"line":172,"file":"Application.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Application.ts#L172"}},{"name":"toJSON","returns":[[[["void"]]]],"meta":{"line":88,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L88"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"ClientChannelsDataManager","extends":[[["ChannelDataManager"]]],"construct":{"name":"new ClientChannelsDataManager","params":[{"name":"options","optional":false,"type":[[["number"," |"],["BaseCacheOptions","<"],["unknown",">"]]]},{"name":"manager","optional":false,"type":[[["CacheManager"]]]}]},"props":[{"name":"cache","type":[[["DataCache","<"],["Channel",">"]]],"meta":{"line":53,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L53"}},{"name":"manager","type":[[["CacheManager"]]],"meta":{"line":16,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L16"}}],"methods":[{"name":"_add","params":[{"name":"channel","optional":false,"type":[[["Channel"," |"],["APIChannel"]]]},{"name":"guild","optional":true,"type":[[["GuildResolvable"]]]},{"name":"replace","optional":true,"default":"true","type":[[["boolean"]]]}],"returns":[[[["any"]]]],"meta":{"line":99,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L99"}},{"name":"_resolve","params":[{"name":"channel","optional":false,"type":[[["Channel"," |"],["APIChannel"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]},{"name":"addInCache","optional":true,"default":"false","type":[[["boolean"]]]}],"returns":[[[["Channel"]]]],"meta":{"line":24,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L24"}},{"name":"add","params":[{"name":"channel","optional":false,"type":[[["Channel"," |"],["APIChannel"]]]},{"name":"replace","optional":true,"default":"true","type":[[["boolean"]]]}],"returns":[[[["any"]]]],"meta":{"line":59,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L59"}},{"name":"fetch","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["any",">"]]]],"meta":{"line":77,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L77"}},{"name":"forge","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["any"]]]],"meta":{"line":67,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L67"}},{"name":"get","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["undefined"," |"],["Channel"]]]],"meta":{"line":63,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L63"}}]},{"name":"ClientRoles","construct":{"name":"new ClientRoles","params":[{"name":"options","optional":true,"type":[[["number"," |"],["BaseCacheOptions","<"],["Role"," |"],["APIRole",">"]]]}]},"props":[{"name":"cache","type":[[["DataCache","<"],["Role"," |"],["APIRole",">"]]],"meta":{"line":10,"file":"RoleDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/RoleDataManager.ts#L10"}}]},{"name":"CommandInteraction","extends":[[["ReplyableInteraction"]]],"construct":{"name":"new CommandInteraction","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIApplicationCommandInteraction",">"]]]},{"name":"httpResponse","optional":true,"type":[[["InteractionResponse"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"_http","type":[[["InteractionResponse"]]],"meta":{"line":126,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L126"}},{"name":"acknowledged","description":"The interaction is acknowledged","type":[[["boolean"]]],"meta":{"line":134,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L134"}},{"name":"applicationId","description":"Id of the application this interaction is for","type":[[["string"]]],"meta":{"line":52,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L52"}},{"name":"channel","description":"The channel it was sent from","type":[[["null"," |"],["Channel"," |"],["Object"]]],"meta":{"line":1104,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1104"}},{"name":"channelId","description":"The channel id it was sent from","deprecated":"use `channel.id` instead","type":[[["string"]]],"meta":{"line":1069,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1069"}},{"name":"commandName","description":"The name of the invoked command","type":[[["string"]]],"meta":{"line":1092,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1092"}},{"name":"data","description":"The command data payload","type":[[["ChatInputApplicationCommandInteractionData"," |"],["UserApplicationCommandInteractionData"," |"],["MessageApplicationCommandInteractionData"]]],"meta":{"line":1077,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1077"}},{"name":"guild","description":"The guild object it was sent from","type":[[["null"," |"],["Guild"]]],"meta":{"line":1073,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1073"}},{"name":"guildId","description":"The guild id it was sent from","type":[[["string"]]],"meta":{"line":1060,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1060"}},{"name":"guildLocale","description":"The guild's preferred locale, if invoked in a guild","type":[[["string"]]],"meta":{"line":1064,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1064"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"isHTTP","description":"This interaction is received for webserver","type":[[["boolean"]]],"meta":{"line":130,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L130"}},{"name":"locale","description":"The selected language of the invoking user","type":[[["string"]]],"meta":{"line":1096,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1096"}},{"name":"member","description":"Member of the invoked command","default":"null","type":[[["null"," |"],["Member"," |"],["APIGuildMember"]]],"meta":{"line":1084,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1084"}},{"name":"message","description":"For components, the message they were attached to","type":[[["null"," |"],["Message"]]],"meta":{"line":1100,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1100"}},{"name":"rawData","type":[[["APIApplicationCommandInteraction"]]],"meta":{"line":1109,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1109"}},{"name":"token","description":"Continuation token for responding to the interaction","type":[[["string"]]],"meta":{"line":60,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L60"}},{"name":"type","description":"Type of interaction","type":[[["InteractionType"]]],"meta":{"line":56,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L56"}},{"name":"user","description":"User of the invoked command","default":"null","type":[[["null"," |"],["User"," |"],["APIUser"]]],"meta":{"line":1088,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1088"}},{"name":"version","description":"Read-only property, always 1","type":[[["number"]]],"meta":{"line":64,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L64"}}],"methods":[{"name":"createFollowUP","description":"Create a followup message for the original reply of this interaction","params":[{"name":"content","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":266,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L266"}},{"name":"createModal","description":"Create a modal","params":[{"name":"data","optional":false,"type":[[["APIModalInteractionResponseCallbackData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":1172,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1172"}},{"name":"defer","description":"Respond to this interaction with defer","params":[{"name":"flags","optional":true,"type":[[["InteractionFlags"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":148,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L148"}},{"name":"deleteFollowUP","description":"Delete a followup message","params":[{"name":"messageId","description":"The id of the followup to be deleted","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":286,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L286"}},{"name":"deleteOriginalReply","description":"Delete the original reply of this interaction","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":203,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L203"}},{"name":"deleteReply","description":"Delete a interaction reply","params":[{"name":"messageId","description":"id of the reply to be deleted","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":184,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L184"}},{"name":"editFollowUP","description":"Edit a followup message","params":[{"name":"messageId","description":"The id of the followup to be edited","optional":false,"type":[[["string"]]]},{"name":"content","description":"The new content of followup","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":300,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L300"}},{"name":"editOriginalReply","description":"Edit the original reply of this interaction","params":[{"name":"content","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":257,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L257"}},{"name":"editReply","description":"Edit a interaction reply","params":[{"name":"messageId","optional":false,"type":[[["string"]]]},{"name":"content","optional":false,"type":[[["string"," |"],["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":243,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L243"}},{"name":"getFollowUP","description":"Get a followup message","params":[{"name":"messageId","description":"The id of the followup","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":329,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L329"}},{"name":"getOriginalReply","description":"Get the original reply of this interaction","returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":348,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L348"}},{"name":"isAutoComplete","returns":[[[["this"," "],["is"," "],["AutocompleteInteraction"]]]],"meta":{"line":103,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L103"}},{"name":"isCommand","returns":[[[["this"," "],["is"," "],["CommandInteraction"]]]],"meta":{"line":95,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L95"}},{"name":"isComponent","returns":[[[["this"," "],["is"," "],["ComponentInteraction"]]]],"meta":{"line":99,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L99"}},{"name":"isModalSubmit","returns":[[[["this"," "],["is"," "],["ModalSubmitInteraction"]]]],"meta":{"line":107,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L107"}},{"name":"reply","description":"Respond to this interaction","params":[{"name":"content","description":"The content of response","optional":false,"type":[[["string"," |"],["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":211,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L211"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\nacknowledged",": "],["boolean",","],["\napplicationId",": "],["string",","],["\nchannel",": "],["null"," |"],["Channel"," |"],["Object",","],["\nchannelId",": "],["string",","],["\ncommandName",": "],["string",","],["\ncreatedAt",": "],["number",","],["\ndata",": "],["ChatInputApplicationCommandInteractionData"," |"],["UserApplicationCommandInteractionData"," |"],["MessageApplicationCommandInteractionData",","],["\nguild",": "],["undefined"," |"],["null"," |"],["Guild",","],["\nguildId",": "],["undefined"," |"],["string",","],["\nguildLocale",": "],["undefined"," |"],["string",","],["\nid",": "],["string",","],["\nlocale",": "],["string",","],["\nmember",": "],["null"," |"],["Member"," |"],["APIGuildMember",","],["\nmessage",": "],["null"," |"],["Message",","],["\nrawData",": "],["APIApplicationCommandInteraction",","],["\ntoken",": "],["string",","],["\ntype",": "],["InteractionType",","],["\nuser",": "],["null"," |"],["User"," |"],["APIUser",","],["\nversion",": "],["number\n","}>>"]]]],"meta":{"line":1196,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1196"}},{"name":"from","scope":"static","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIInteraction",">"]]]},{"name":"res","optional":true,"type":[[["InteractionResponse"]]]}],"returns":[[[["Interaction"]]]],"meta":{"line":75,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L75"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"CommandInteractionOptions","construct":{"name":"new CommandInteractionOptions","params":[{"name":"options","optional":false,"type":[[["Array","<"],["APIApplicationCommandInteractionDataOption",">"]]]},{"name":"resolved","optional":false,"type":[[["APIInteractionDataResolved"]]]},{"name":"_client","optional":false,"type":[[["AnyClient"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]}]},"props":[{"name":"#options","access":"private","type":[[["Array","<"],["APIApplicationCommandInteractionDataBasicOption",">"]]],"meta":{"line":794,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L794"}},{"name":"#resolved","access":"private","type":[[["APIInteractionDataResolved"]]],"meta":{"line":797,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L797"}},{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":801,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L801"}},{"name":"guild","type":[[["Guild"]]],"meta":{"line":802,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L802"}},{"name":"subCommand","type":[[["string"]]],"meta":{"line":795,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L795"}},{"name":"subCommandGroup","type":[[["string"]]],"meta":{"line":796,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L796"}}],"methods":[{"name":"attachment","description":"Get a attachment option value","params":[{"name":"name","description":"Option name","optional":false,"type":[[["string"]]]}],"returns":[[[["null"," |"],["APIAttachment"]]]],"meta":{"line":931,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L931"}},{"name":"boolean","description":"Get a boolean option value","params":[{"name":"name","description":"Option name","optional":false,"type":[[["string"]]]}],"returns":[[[["null"," |"],["boolean"]]]],"meta":{"line":921,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L921"}},{"name":"get","description":"Get a option","params":[{"name":"name","description":"The name of option","optional":false,"type":[[["string"]]]}],"returns":[[[["undefined"," |"],["APIApplicationCommandInteractionDataStringOption"," |"],["APIApplicationCommandInteractionDataIntegerOption"," |"],["APIApplicationCommandInteractionDataBooleanOption"," |"],["APIApplicationCommandInteractionDataNumberOption"," |{"],["\nname",": "],["string",","],["\ntype",": "],["Attachment",","],["\nvalue",": "],["null"," |"],["APIAttachment\n","} |{"],["\nname",": "],["string",","],["\ntype",": "],["User",","],["\nvalue",": "],["any\n","} |{"],["\nname",": "],["string",","],["\ntype",": "],["Channel",","],["\nvalue",": "],["null"," |"],["Channel"," |"],["APIInteractionDataResolvedChannel\n","} |{"],["\nname",": "],["string",","],["\ntype",": "],["Role",","],["\nvalue",": "],["any\n","} |{"],["\nname",": "],["string",","],["\ntype",": "],["Mentionable",","],["\nvalue",": "],["any\n","}"]]]],"meta":{"line":826,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L826"}},{"name":"integer","description":"Get a integer option value","params":[{"name":"name","description":"Option name","optional":false,"type":[[["string"]]]}],"returns":[[[["null"," |"],["number"]]]],"meta":{"line":911,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L911"}},{"name":"mentionable","description":"Get a mentionable (user, member, role, channel) option value","params":[{"name":"name","description":"Option name","optional":false,"type":[[["string"]]]}],"returns":[[[["any"]]]],"meta":{"line":961,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L961"}},{"name":"number","description":"Get a number option value","params":[{"name":"name","description":"Option name","optional":false,"type":[[["string"]]]}],"returns":[[[["null"," |"],["number"]]]],"meta":{"line":901,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L901"}},{"name":"role","description":"Get a role option value","params":[{"name":"name","description":"Option name","optional":false,"type":[[["string"]]]}],"returns":[[[["any"]]]],"meta":{"line":951,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L951"}},{"name":"string","description":"Get a string option value","params":[{"name":"name","description":"Option name","optional":false,"type":[[["string"]]]}],"returns":[[[["null"," |"],["string"]]]],"meta":{"line":891,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L891"}},{"name":"toArray","returns":[[[["Array","<"],["APIApplicationCommandInteractionDataBasicOption",">"]]]],"meta":{"line":968,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L968"}},{"name":"user","description":"Get a user option value","params":[{"name":"name","description":"Option name","optional":false,"type":[[["string"]]]}],"returns":[[[["any"]]]],"meta":{"line":941,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L941"}}]},{"name":"ComponentInteraction","extends":[[["ReplyableInteraction"]]],"construct":{"name":"new ComponentInteraction","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIMessageComponentInteraction",">"]]]},{"name":"httpResponse","optional":true,"type":[[["InteractionResponse"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"_http","type":[[["InteractionResponse"]]],"meta":{"line":126,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L126"}},{"name":"acknowledged","description":"The interaction is acknowledged","type":[[["boolean"]]],"meta":{"line":134,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L134"}},{"name":"applicationId","description":"Id of the application this interaction is for","type":[[["string"]]],"meta":{"line":52,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L52"}},{"name":"channel","description":"The channel it was sent from","type":[[["Channel"," |"],["Object"]]],"meta":{"line":558,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L558"}},{"name":"channelId","description":"The channel id it was sent from","deprecated":"use `channel.id` instead","type":[[["string"]]],"meta":{"line":542,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L542"}},{"name":"componentType","description":"The type of the component","type":[[["ComponentType"]]],"meta":{"line":533,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L533"}},{"name":"customId","description":"The custom_id of the component","type":[[["string"]]],"meta":{"line":537,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L537"}},{"name":"data","description":"The component data payload","type":[[["null"," |"],["SelectMenuInteractionData"]]],"meta":{"line":562,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L562"}},{"name":"guild","description":"The guild it was sent from","type":[[["null"," |"],["Guild"]]],"meta":{"line":570,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L570"}},{"name":"guildId","description":"The guild id it was sent from","type":[[["string"]]],"meta":{"line":566,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L566"}},{"name":"guildLocale","description":"The guild's preferred locale, if invoked in a guild","type":[[["null"," |"],["string"]]],"meta":{"line":550,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L550"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"isHTTP","description":"This interaction is received for webserver","type":[[["boolean"]]],"meta":{"line":130,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L130"}},{"name":"locale","description":"The selected language of the invoking user","type":[[["string"]]],"meta":{"line":546,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L546"}},{"name":"member","type":[[["undefined"," |"],["null"," |"],["Member"]]],"meta":{"line":571,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L571"}},{"name":"message","description":"For components, the message they were attached to","type":[[["Message"]]],"meta":{"line":554,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L554"}},{"name":"rawData","type":[[["APIMessageComponentInteraction"]]],"meta":{"line":572,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L572"}},{"name":"token","description":"Continuation token for responding to the interaction","type":[[["string"]]],"meta":{"line":60,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L60"}},{"name":"type","description":"Type of interaction","type":[[["InteractionType"]]],"meta":{"line":56,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L56"}},{"name":"user","type":[[["undefined"," |"],["null"," |"],["User"," |"],["APIUser"]]],"meta":{"line":573,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L573"}},{"name":"version","description":"Read-only property, always 1","type":[[["number"]]],"meta":{"line":64,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L64"}}],"methods":[{"name":"createFollowUP","description":"Create a followup message for the original reply of this interaction","params":[{"name":"content","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":266,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L266"}},{"name":"defer","description":"Respond to this interaction with defer","params":[{"name":"flags","optional":true,"type":[[["InteractionFlags"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":148,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L148"}},{"name":"deferUpdate","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":624,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L624"}},{"name":"deleteFollowUP","description":"Delete a followup message","params":[{"name":"messageId","description":"The id of the followup to be deleted","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":286,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L286"}},{"name":"deleteOriginalReply","description":"Delete the original reply of this interaction","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":203,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L203"}},{"name":"deleteReply","description":"Delete a interaction reply","params":[{"name":"messageId","description":"id of the reply to be deleted","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":184,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L184"}},{"name":"editFollowUP","description":"Edit a followup message","params":[{"name":"messageId","description":"The id of the followup to be edited","optional":false,"type":[[["string"]]]},{"name":"content","description":"The new content of followup","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":300,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L300"}},{"name":"editOriginalReply","description":"Edit the original reply of this interaction","params":[{"name":"content","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":257,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L257"}},{"name":"editParent","params":[{"name":"content","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":644,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L644"}},{"name":"editReply","description":"Edit a interaction reply","params":[{"name":"messageId","optional":false,"type":[[["string"]]]},{"name":"content","optional":false,"type":[[["string"," |"],["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":243,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L243"}},{"name":"getFollowUP","description":"Get a followup message","params":[{"name":"messageId","description":"The id of the followup","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":329,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L329"}},{"name":"getOriginalReply","description":"Get the original reply of this interaction","returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":348,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L348"}},{"name":"isAutoComplete","returns":[[[["this"," "],["is"," "],["AutocompleteInteraction"]]]],"meta":{"line":103,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L103"}},{"name":"isCommand","returns":[[[["this"," "],["is"," "],["CommandInteraction"]]]],"meta":{"line":95,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L95"}},{"name":"isComponent","returns":[[[["this"," "],["is"," "],["ComponentInteraction"]]]],"meta":{"line":99,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L99"}},{"name":"isModalSubmit","returns":[[[["this"," "],["is"," "],["ModalSubmitInteraction"]]]],"meta":{"line":107,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L107"}},{"name":"reply","description":"Respond to this interaction","params":[{"name":"content","description":"The content of response","optional":false,"type":[[["string"," |"],["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":211,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L211"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\nacknowledged",": "],["boolean",","],["\napplicationId",": "],["string",","],["\nchannel",": "],["Channel"," |"],["Object",","],["\nchannelId",": "],["string",","],["\ncomponentType",": "],["ComponentType",","],["\ncreatedAt",": "],["number",","],["\ncustomId",": "],["string",","],["\nguildLocale",": "],["null"," |"],["string",","],["\nid",": "],["string",","],["\nlocale",": "],["string",","],["\nmessage",": "],["Message",","],["\nrawData",": "],["APIMessageComponentInteraction",","],["\ntoken",": "],["string",","],["\ntype",": "],["InteractionType",","],["\nversion",": "],["number\n","}>>"]]]],"meta":{"line":663,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L663"}},{"name":"from","scope":"static","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIInteraction",">"]]]},{"name":"res","optional":true,"type":[[["InteractionResponse"]]]}],"returns":[[[["Interaction"]]]],"meta":{"line":75,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L75"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"DMChannel","extends":[[["TextBasedChannel"]]],"construct":{"name":"new DMChannel","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIDMChannel",">"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"flags","description":"The flags of the channel","type":[[["null"," |"],["ChannelFlags"]]],"meta":{"line":75,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L75"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"lastMessageId","description":"The id of the last message sent in this channel (may not point to an existing or valid message)","type":[[["null"," |"],["string"]]],"meta":{"line":243,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L243"}},{"name":"lastPinTimestamp","description":"When the last pinned message was pinned.","type":[[["null"," |"],["number"]]],"meta":{"line":247,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L247"}},{"name":"messages","description":"Channel messages","type":[[["MessageDataManager"]]],"meta":{"line":251,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L251"}},{"name":"name","description":"The name of the channel (2-100 characters)","type":[[["null"," |"],["string"]]],"meta":{"line":71,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L71"}},{"name":"rawData","type":[[["APIChannel"]]],"meta":{"line":77,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L77"}},{"name":"type","description":"The type of the channel","type":[[["ChannelType"]]],"meta":{"line":67,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L67"}},{"name":"user","description":"The user of the dm","type":[[["User"," |"],["APIUser"]]],"meta":{"line":690,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L690"}},{"name":"userId","description":"The user id of the dm","type":[[["string"]]],"meta":{"line":694,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L694"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APIChannel"]]]}],"returns":[[[["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel"]]]],"meta":{"line":132,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L132"}},{"name":"bulkDeleteMessages","params":[{"name":"messages","optional":false,"type":[[["number"," |"],["Array","<"],["string","> |"],["Array","<"],["Message",">"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":287,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L287"}},{"name":"createMessage","params":[{"name":"content","optional":false,"type":[[["string"," |"],["MessagePostData"]]]}],"returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":268,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L268"}},{"name":"deleteMessage","params":[{"name":"id","optional":false,"type":[[["string"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":283,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L283"}},{"name":"edit","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPatchAPIChannelJSONBody",">"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":86,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L86"}},{"name":"fetchInformation","description":"Update information of this channel\n\nUtil if this is forged","returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":195,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L195"}},{"name":"isDM","returns":[[[["this"," "],["is"," "],["DMChannel"]]]],"meta":{"line":151,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L151"}},{"name":"isGuildChannel","returns":[[[["this"," "],["is"," "],["GuildChannel"]]]],"meta":{"line":163,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L163"}},{"name":"isGuildText","returns":[[[["this"," "],["is"," "],["GuildTextChannel"]]]],"meta":{"line":159,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L159"}},{"name":"isStage","returns":[[[["this"," "],["is"," "],["StageChannel"]]]],"meta":{"line":177,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L177"}},{"name":"isText","returns":[[[["this"," "],["is"," "],["TextBasedChannel"]]]],"meta":{"line":155,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L155"}},{"name":"isThread","returns":[[[["this"," "],["is"," "],["ThreadChannel"]]]],"meta":{"line":173,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L173"}},{"name":"isVoice","returns":[[[["this"," "],["is"," "],["VoiceChannel"]]]],"meta":{"line":181,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L181"}},{"name":"sendTyping","returns":[[[["Promise","<"],["unknown",">"]]]],"meta":{"line":304,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L304"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\ncreatedAt",": "],["number",","],["\nflags",": "],["null"," |"],["ChannelFlags",","],["\nid",": "],["string",","],["\nlastMessageId",": "],["undefined"," |"],["null"," |"],["string",","],["\nlastPinTimestamp",": "],["undefined"," |"],["null"," |"],["number",","],["\nmessages",": "],["MessageDataManager",","],["\nname",": "],["null"," |"],["string",","],["\nrawData",": "],["APIChannel",","],["\ntype",": "],["ChannelType",","],["\nuser",": "],["User"," |"],["APIUser",","],["\nuserId",": "],["string\n","}>>"]]]],"meta":{"line":702,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L702"}},{"name":"toString","returns":[[[["unknown"]]]],"meta":{"line":117,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L117"}},{"name":"from","scope":"static","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIChannel",">"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]}],"returns":[[[["Channel"]]]],"meta":{"line":200,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L200"}},{"name":"isBased","scope":"static","params":[{"name":"channel","optional":false,"type":[[["Channel"]]]}],"returns":[[[["channel"," "],["is"," "],["TextBasedChannel"]]]],"meta":{"line":322,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L322"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"DataCache","extends":[[["Cache","<"],["V",">"]]],"construct":{"name":"new DataCache","params":[{"name":"entries","optional":true,"type":[[["CacheEntries","<"],["string",", "],["V",">"]]]}]},"props":[{"name":"#resolver","access":"private","type":[[["DataResolver","<"],["V",">"]]],"meta":{"line":11,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L11"}},{"name":"#sweeper","access":"private","type":[[["null"," |{"],["\nfilter",": "],["undefined"," |("],["value",": "],["V",") => "],["boolean",","],["\nkeep",": "],["undefined"," |("],["value",": "],["V",") => "],["boolean",","],["\nlifetime",": "],["undefined"," |"],["number\n","}"]]],"meta":{"line":9,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L9"}},{"name":"[toStringTag]","readonly":true,"type":[[["string"]]],"meta":{"line":135,"file":"lib.es2015.symbol.wellknown.d.ts"}},{"name":"limit","type":[[["number"]]],"meta":{"line":8,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L8"}},{"name":"size","readonly":true,"type":[[["number"]]],"meta":{"line":48,"file":"lib.es2015.collection.d.ts"}},{"name":"[species]","scope":"static","readonly":true,"type":[[["MapConstructor"]]],"meta":{"line":317,"file":"lib.es2015.symbol.wellknown.d.ts"}}],"methods":[{"name":"[iterator]","description":"Returns an iterable of entries in the map.","returns":[[[["IterableIterator","<["],["string",", "],["V","]>"]]]],"meta":{"line":121,"file":"lib.es2015.iterable.d.ts"}},{"name":"_add","params":[{"name":"item","optional":false,"type":[[["V"]]]},{"name":"replace","optional":true,"default":"true","type":[[["boolean"]]]},{"name":"id","optional":true,"type":[[["string"]]]}],"returns":[[[["any"]]]],"meta":{"line":24,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L24"}},{"name":"_setResolver","params":[{"name":"resolver","optional":false,"type":[[["DataResolver","<"],["V",">"]]]}],"returns":[[[["void"]]]],"meta":{"line":12,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L12"}},{"name":"at","params":[{"name":"index","optional":false,"type":[[["number"]]]}],"returns":[[[["undefined"," |"],["V"]]]],"meta":{"line":173,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L173"}},{"name":"clear","returns":[[[["void"]]]],"meta":{"line":23,"file":"lib.es2015.collection.d.ts"}},{"name":"delete","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[{"types":[[["boolean"]]],"description":"true if an element in the Map existed and has been removed, or false if the element does not exist."}],"returnsDescription":"true if an element in the Map existed and has been removed, or false if the element does not exist.","meta":{"line":27,"file":"lib.es2015.collection.d.ts"}},{"name":"entries","description":"Returns an iterable of key, value pairs for every entry in the map.","returns":[[[["IterableIterator","<["],["string",", "],["V","]>"]]]],"meta":{"line":126,"file":"lib.es2015.iterable.d.ts"}},{"name":"every","params":[{"name":"fn","optional":false,"type":[[["("],["value",": "],["V",", "],["key",": "],["string",", "],["cache",": "],["Cache","<"],["V",">) => "],["boolean"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":116,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L116"}},{"name":"filter","params":[{"name":"fn","optional":false,"type":[[["("],["value",": "],["V",", "],["key",": "],["string",", "],["cache",": "],["Cache","<"],["V",">) => "],["boolean"]]]}],"returns":[[[["Cache","<"],["V",">"]]]],"meta":{"line":92,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L92"}},{"name":"find","params":[{"name":"fn","optional":false,"type":[[["("],["value",": "],["V",", "],["key",": "],["string",", "],["cache",": "],["Cache","<"],["V",">) => "],["boolean"]]]}],"returns":[[[["undefined"," |["],["string",", "],["V","]"]]]],"meta":{"line":104,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L104"}},{"name":"first","returns":[[[["V"]]]],"meta":{"line":140,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L140"}},{"name":"forEach","params":[{"name":"fn","optional":false,"type":[[["("],["value",": "],["V",", "],["key",": "],["string",", "],["cache",": "],["Cache","<"],["V",">) => "],["void"]]]}],"returns":[[[["void"]]]],"meta":{"line":86,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L86"}},{"name":"get","description":"Returns a specified element from the Map object. If the value that is associated to the provided key is an object, then you will get a reference to that object and any change made to that object will effectively modify it inside the Map.","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[{"types":[[["undefined"," |"],["V"]]],"description":"Returns the element associated with the specified key. If no element is associated with the specified key, undefined is returned."}],"returnsDescription":"Returns the element associated with the specified key. If no element is associated with the specified key, undefined is returned.","meta":{"line":16,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L16"}},{"name":"has","params":[{"name":"key","optional":false,"type":[[["string"]]]}],"returns":[{"types":[[["boolean"]]],"description":"boolean indicating whether an element with the specified key exists or not."}],"returnsDescription":"boolean indicating whether an element with the specified key exists or not.","meta":{"line":40,"file":"lib.es2015.collection.d.ts"}},{"name":"indexOf","params":[{"name":"value","optional":false,"type":[[["V"]]]}],"returns":[[[["number"]]]],"meta":{"line":185,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L185"}},{"name":"keyOf","params":[{"name":"value","optional":false,"type":[[["V"]]]}],"returns":[[[["string"]]]],"meta":{"line":197,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L197"}},{"name":"keys","description":"Returns an iterable of keys in the map","returns":[[[["IterableIterator","<"],["string",">"]]]],"meta":{"line":131,"file":"lib.es2015.iterable.d.ts"}},{"name":"last","returns":[[[["V"]]]],"meta":{"line":159,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L159"}},{"name":"map","params":[{"name":"fn","optional":false,"type":[[["("],["value",": "],["V",", "],["key",": "],["string",", "],["cache",": "],["Cache","<"],["V",">) => {"],["\nkey",": "],["string",","],["\nvalue",": "],["MV\n","}"]]]}],"returns":[[[["Cache","<"],["MV",">"]]]],"meta":{"line":124,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L124"}},{"name":"partition","params":[{"name":"fn","optional":false,"type":[[["("],["value",": "],["V",", "],["key",": "],["string",", "],["cache",": "],["Cache","<"],["V",">) => "],["boolean"]]]}],"returns":[[[["["],["Cache","<"],["V",">, "],["Cache","<"],["V",">]"]]]],"meta":{"line":216,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L216"}},{"name":"reduce","params":[{"name":"fn","optional":false,"type":[[["("],["previous",": ["],["string",", "],["V","], "],["current",": ["],["string",", "],["V","]) => ["],["string",", "],["V","]"]]]},{"name":"initialValue","optional":false,"type":[[["["],["string",", "],["V","]"]]]}],"returns":[[[["["],["string",", "],["V","]"]]]],"meta":{"line":190,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L190"}},{"name":"reverse","returns":[[[["Cache","<"],["V",">"]]]],"meta":{"line":181,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L181"}},{"name":"set","params":[{"name":"key","optional":false,"type":[[["string"]]]},{"name":"value","optional":false,"type":[[["V"]]]}],"returns":[[[["DataCache","<"],["V",">"]]]],"meta":{"line":67,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L67"}},{"name":"some","params":[{"name":"fn","optional":false,"type":[[["("],["value",": "],["V",", "],["key",": "],["string",", "],["cache",": "],["Cache","<"],["V",">) => "],["boolean"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":120,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L120"}},{"name":"sweep","params":[{"name":"fn","optional":false,"type":[[["("],["value",": "],["V",", "],["key",": "],["string",", "],["cache",": "],["Cache","<"],["V",">) => "],["boolean"]]]}],"returns":[[[["number"]]]],"meta":{"line":204,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L204"}},{"name":"values","description":"Returns an iterable of values in the map","returns":[[[["IterableIterator","<"],["V",">"]]]],"meta":{"line":136,"file":"lib.es2015.iterable.d.ts"}}]},{"name":"DataManager","construct":{"name":"new DataManager","params":[{"name":"entries","optional":true,"type":[[["CacheEntries","<"],["string",", "],["V",">"]]]},{"name":"resolver","optional":true,"type":[[["DataResolver","<"],["V",">"]]]}]},"props":[{"name":"cache","type":[[["DataCache","<"],["V",">"]]],"meta":{"line":53,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L53"}}],"methods":[{"name":"add","params":[{"name":"item","optional":false,"type":[[["V"]]]},{"name":"replace","optional":true,"default":"true","type":[[["boolean"]]]},{"name":"id","optional":true,"type":[[["string"]]]}],"returns":[[[["any"]]]],"meta":{"line":120,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L120"}}]},{"name":"DiscordAPIError","extends":[[["Error"]]],"construct":{"name":"new DiscordAPIError","params":[{"name":"router","optional":false,"type":[[["string"]]]},{"name":"method","optional":false,"type":[[["string"]]]},{"name":"code","optional":false,"type":[[["number"]]]},{"name":"status","optional":false,"type":[[["number"]]]},{"name":"errors","optional":false,"type":[[["Record","<"],["string",", "],["unknown",">"]]]}]},"props":[{"name":"cause","type":[[["unknown"]]],"meta":{"line":26,"file":"lib.es2022.error.d.ts"}},{"name":"code","type":[[["number"]]],"meta":{"line":11,"file":"index.d.ts"}},{"name":"message","type":[[["string"]]],"meta":{"line":1054,"file":"lib.es5.d.ts"}},{"name":"method","type":[[["string"]]],"meta":{"line":10,"file":"index.d.ts"}},{"name":"name","type":[[["string"]]],"meta":{"line":1053,"file":"lib.es5.d.ts"}},{"name":"router","type":[[["string"]]],"meta":{"line":9,"file":"index.d.ts"}},{"name":"stack","type":[[["string"]]],"meta":{"line":1055,"file":"lib.es5.d.ts"}},{"name":"status","type":[[["number"]]],"meta":{"line":12,"file":"index.d.ts"}},{"name":"prepareStackTrace","scope":"static","type":[[["("],["err",": "],["Error",", "],["stackTraces",": "],["Array","<"],["CallSite",">) => "],["any"]]],"meta":{"line":27,"file":"globals.d.ts"}},{"name":"stackTraceLimit","scope":"static","type":[[["number"]]],"meta":{"line":29,"file":"globals.d.ts"}}],"methods":[{"name":"captureStackTrace","description":"Create .stack property on a target object","scope":"static","params":[{"name":"targetObject","optional":false,"type":[[["object"]]]},{"name":"constructorOpt","optional":true,"type":[[["Function"]]]}],"returns":[[[["void"]]]],"meta":{"line":20,"file":"globals.d.ts"}}]},{"name":"Emoji","construct":{"name":"new Emoji","params":[{"name":"data","optional":false,"type":[[["APIEmoji"]]]}]},"props":[{"name":"animated","description":"Whether this emoji is animated","type":[[["boolean"]]],"meta":{"line":32,"file":"Emoji.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Emoji.ts#L32"}},{"name":"available","description":"Whether this emoji can be used, may be false due to loss of Server Boosts","type":[[["boolean"]]],"meta":{"line":24,"file":"Emoji.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Emoji.ts#L24"}},{"name":"id","description":"Emoji id","type":[[["null"," |"],["string"]]],"meta":{"line":36,"file":"Emoji.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Emoji.ts#L36"}},{"name":"managed","description":"Whether this emoji is managed","type":[[["boolean"]]],"meta":{"line":20,"file":"Emoji.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Emoji.ts#L20"}},{"name":"name","description":"Emoji name (can be null only in reaction emoji objects)","type":[[["null"," |"],["string"]]],"meta":{"line":28,"file":"Emoji.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Emoji.ts#L28"}},{"name":"rawData","type":[[["APIEmoji"]]],"meta":{"line":38,"file":"Emoji.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Emoji.ts#L38"}},{"name":"requireColons","description":"Whether this emoji must be wrapped in colons","type":[[["boolean"]]],"meta":{"line":16,"file":"Emoji.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Emoji.ts#L16"}}],"methods":[{"name":"createdAt","returns":[[[["null"," |"],["number"]]]],"meta":{"line":50,"file":"Emoji.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Emoji.ts#L50"}},{"name":"toString","returns":[[[["null"," |"],["string"]]]],"meta":{"line":74,"file":"Emoji.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Emoji.ts#L74"}},{"name":"from","scope":"static","params":[{"name":"emoji","optional":false,"type":[[["string"]]]}],"returns":[[[["null"," |"],["Emoji"]]]],"meta":{"line":80,"file":"Emoji.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Emoji.ts#L80"}},{"name":"getEncodedURI","scope":"static","params":[{"name":"emoji","optional":false,"type":[[["string"," |"],["APIEmoji"]]]}],"returns":[[[["string"]]]],"meta":{"line":101,"file":"Emoji.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Emoji.ts#L101"}},{"name":"parse","scope":"static","params":[{"name":"emoji","optional":false,"type":[[["string"]]]}],"returns":[[[["null"," |"],["APIEmoji"]]]],"meta":{"line":86,"file":"Emoji.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Emoji.ts#L86"}}]},{"name":"EmojiDataManager","extends":[[["DataManager","<"],["Emoji"," |"],["APIEmoji",">"]]],"construct":{"name":"new EmojiDataManager","params":[{"name":"options","optional":false,"type":[[["number"," |"],["BaseCacheOptions","<"],["unknown",">"]]]},{"name":"manager","optional":false,"type":[[["CacheManager"]]]}]},"props":[{"name":"cache","type":[[["DataCache","<"],["Emoji"," |"],["APIEmoji",">"]]],"meta":{"line":53,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L53"}},{"name":"manager","type":[[["CacheManager"]]],"meta":{"line":12,"file":"EmojiDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/EmojiDataManager.ts#L12"}}],"methods":[{"name":"#resolve","access":"private","params":[{"name":"emoji","optional":false,"type":[[["Emoji"," |"],["APIEmoji"]]]},{"name":"addInCache","optional":true,"default":"false","type":[[["boolean"]]]}],"returns":[[[["Emoji"," |"],["APIEmoji"]]]],"meta":{"line":24,"file":"EmojiDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/EmojiDataManager.ts#L24"}},{"name":"add","params":[{"name":"emoji","optional":false,"type":[[["Emoji"," |"],["APIEmoji"]]]},{"name":"replace","optional":true,"default":"true","type":[[["boolean"]]]}],"returns":[[[["any"]]]],"meta":{"line":38,"file":"EmojiDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/EmojiDataManager.ts#L38"}},{"name":"fetch","params":[{"name":"id","description":"emoji id","optional":false,"type":[[["string"]]]},{"name":"guild","description":"Guild object or Guild Id","optional":false,"type":[[["string"," |"],["Guild"," |"],["APIGuild"]]]}],"returns":[[[["Promise","<"],["any",">"]]]],"meta":{"line":47,"file":"EmojiDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/EmojiDataManager.ts#L47"}},{"name":"get","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["undefined"," |"],["Emoji"," |"],["APIEmoji"]]]],"meta":{"line":20,"file":"EmojiDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/EmojiDataManager.ts#L20"}}]},{"name":"EventSource","construct":{"name":"new EventSource"},"props":[{"name":"events","type":[[["Map","<"],["string",", "],["Event",">"]]],"meta":{"line":58,"file":"EventSource.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/gateway/EventSource.ts#L58"}},{"name":"gatewayShard","type":[[["GatewayShard"]]],"meta":{"line":59,"file":"EventSource.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/gateway/EventSource.ts#L59"}}],"methods":[{"name":"_init","returns":[[[["void"]]]],"meta":{"line":64,"file":"EventSource.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/gateway/EventSource.ts#L64"}},{"name":"add","params":[{"name":"event","optional":false,"type":[[["("],["gatewayShard",": "],["GatewayShard",") => "],["Event"]]]}],"returns":[[[["void"]]]],"meta":{"line":138,"file":"EventSource.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/gateway/EventSource.ts#L138"}},{"name":"get","params":[{"name":"name","optional":false,"type":[[["string"]]]}],"returns":[[[["any"]]]],"meta":{"line":147,"file":"EventSource.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/gateway/EventSource.ts#L147"}},{"name":"setGatewayShard","params":[{"name":"shard","optional":false,"type":[[["GatewayShard"]]]}],"returns":[[[["EventSource"]]]],"meta":{"line":152,"file":"EventSource.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/gateway/EventSource.ts#L152"}}]},{"name":"ForumChannel","extends":[[["GuildChannel"]]],"construct":{"name":"new ForumChannel","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIGuildForumChannel",">"]]]},{"name":"guild","optional":false,"type":[[["Guild"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"availableTags","description":"The set of tags that can be used in a forum channel","type":[[["Array","<"],["APIGuildForumTag",">"]]],"meta":{"line":786,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L786"}},{"name":"defaultAutoArchiveDuration","description":"Default duration for newly created threads, in minutes, to automatically archive the thread after recent activity","type":[[["ThreadAutoArchiveDuration"]]],"meta":{"line":766,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L766"}},{"name":"defaultForumLayout","description":"The default layout type used to display posts in a forum channel. Defaults to 0, which indicates a layout view has not been set by a channel admin","type":[[["ForumLayoutType"]]],"meta":{"line":770,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L770"}},{"name":"defaultReactionEmoji","description":"The emoji to show in the add reaction button on a thread in a forum channel","type":[[["KeysToCamelCase","<"],["APIGuildForumDefaultReactionEmoji",">"]]],"meta":{"line":774,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L774"}},{"name":"defaultSortOrder","description":"The default sort order type used to order posts in a forum channel","type":[[["null"," |"],["SortOrderType"]]],"meta":{"line":778,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L778"}},{"name":"defaultThreadRateLimitPerUser","description":"The initial rate_limit_per_user to set on newly created threads. This field is copied to the thread at creation time and does not live update","type":[[["number"]]],"meta":{"line":782,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L782"}},{"name":"flags","description":"The flags of the channel","type":[[["null"," |"],["ChannelFlags"]]],"meta":{"line":75,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L75"}},{"name":"guild","type":[[["Guild"]]],"meta":{"line":335,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L335"}},{"name":"guildId","description":"The id of the guild (may be missing for some channel objects received over gateway guild dispatches)","type":[[["string"]]],"meta":{"line":339,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L339"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"name","description":"The name of the channel (2-100 characters)","type":[[["null"," |"],["string"]]],"meta":{"line":71,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L71"}},{"name":"nsfw","description":"Whether the channel is nsfw","type":[[["boolean"]]],"meta":{"line":357,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L357"}},{"name":"parentId","description":"ID of the parent category for a channel (each parent category can contain up to 50 channels)\nOR\nID of the parent channel for thread","type":[[["string"]]],"meta":{"line":345,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L345"}},{"name":"permissionOverwrites","description":"Explicit permission overwrites for members and roles","type":[[["DataCache","<"],["PermissionOverwrite",">"]]],"meta":{"line":349,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L349"}},{"name":"position","description":"Sorting position of the channel","type":[[["number"]]],"meta":{"line":353,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L353"}},{"name":"rawData","type":[[["APIChannel"]]],"meta":{"line":77,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L77"}},{"name":"threads","description":"The threads in this channel","type":[[["DataCache","<"],["ThreadChannel",">"]]],"meta":{"line":361,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L361"}},{"name":"type","description":"The type of the channel","type":[[["ChannelType"]]],"meta":{"line":67,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L67"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APIGuildForumChannel"]]]}],"returns":[[[["ForumChannel"]]]],"meta":{"line":797,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L797"}},{"name":"edit","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPatchAPIChannelJSONBody",">"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":86,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L86"}},{"name":"editPermissions","params":[{"name":"overwriteId","description":"User or Role id","optional":false,"type":[[["string"]]]},{"name":"options","description":"Options to edit permissions","optional":false,"type":[[["APIOverwrite"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":393,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L393"}},{"name":"fetchInformation","description":"Update information of this channel\n\nUtil if this is forged","returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":195,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L195"}},{"name":"isDM","returns":[[[["this"," "],["is"," "],["DMChannel"]]]],"meta":{"line":151,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L151"}},{"name":"isGuildChannel","returns":[[[["this"," "],["is"," "],["GuildChannel"]]]],"meta":{"line":163,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L163"}},{"name":"isGuildText","returns":[[[["this"," "],["is"," "],["GuildTextChannel"]]]],"meta":{"line":159,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L159"}},{"name":"isStage","returns":[[[["this"," "],["is"," "],["StageChannel"]]]],"meta":{"line":177,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L177"}},{"name":"isText","returns":[[[["this"," "],["is"," "],["TextBasedChannel"]]]],"meta":{"line":155,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L155"}},{"name":"isThread","returns":[[[["this"," "],["is"," "],["ThreadChannel"]]]],"meta":{"line":173,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L173"}},{"name":"isVoice","returns":[[[["this"," "],["is"," "],["VoiceChannel"]]]],"meta":{"line":181,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L181"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\navailableTags",": "],["Array","<"],["APIGuildForumTag",">,"],["\ncreatedAt",": "],["number",","],["\ndefaultAutoArchiveDuration",": "],["undefined"," |"],["ThreadAutoArchiveDuration",","],["\ndefaultForumLayout",": "],["ForumLayoutType",","],["\ndefaultReactionEmoji",": "],["KeysToCamelCase","<"],["APIGuildForumDefaultReactionEmoji",">,"],["\ndefaultSortOrder",": "],["null"," |"],["SortOrderType",","],["\ndefaultThreadRateLimitPerUser",": "],["undefined"," |"],["number",","],["\nflags",": "],["null"," |"],["ChannelFlags",","],["\nguild",": "],["Guild",","],["\nguildId",": "],["string",","],["\nid",": "],["string",","],["\nname",": "],["null"," |"],["string",","],["\nnsfw",": "],["boolean",","],["\nparentId",": "],["string",","],["\npermissionOverwrites",": "],["DataCache","<"],["PermissionOverwrite",">,"],["\nposition",": "],["number",","],["\nrawData",": "],["APIChannel",","],["\nthreads",": "],["DataCache","<"],["ThreadChannel",">,"],["\ntype",": "],["ChannelType\n","}>>"]]]],"meta":{"line":819,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L819"}},{"name":"toString","returns":[[[["unknown"]]]],"meta":{"line":117,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L117"}},{"name":"from","scope":"static","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIChannel",">"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]}],"returns":[[[["Channel"]]]],"meta":{"line":200,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L200"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"GatewayShard","extends":[[["EventEmitter"]]],"construct":{"name":"new GatewayShard","params":[{"name":"client","optional":false,"type":[[["Client"]]]},{"name":"events","optional":false,"type":[[["EventSource"]]]},{"name":"options","optional":true,"type":[[["GatewayShardOptions"]]]}]},"props":[{"name":"#private","access":"private","type":[[["any"]]],"meta":{"line":23,"file":"index.d.ts"}},{"name":"_inflate","type":[[["null"," |"],["Inflate"]]],"meta":{"line":76,"file":"index.d.ts"}},{"name":"client","type":[[["Client"]]],"meta":{"line":24,"file":"index.d.ts"}},{"name":"closeSequenceId","description":"The last close sequence id","type":[[["number"]]],"meta":{"line":100,"file":"index.d.ts"}},{"name":"connected","type":[[["boolean"]]],"meta":{"line":30,"file":"index.d.ts"}},{"name":"connectedAt","description":"Time the shard was connected","type":[[["number"]]],"meta":{"line":120,"file":"index.d.ts"}},{"name":"destroyed","description":"Whether shard has destroyed","type":[[["boolean"]]],"meta":{"line":46,"file":"index.d.ts"}},{"name":"events","description":"Source of gateway events","type":[[["EventSource"]]],"meta":{"line":80,"file":"index.d.ts"}},{"name":"fetchedGateway","description":"The fetched gateway bot info object","type":[[["APIGatewayBotInfo"]]],"meta":{"line":59,"file":"index.d.ts"}},{"name":"heartbeatAck","type":[[["boolean"]]],"meta":{"line":47,"file":"index.d.ts"}},{"name":"heartbeatInterval","type":[[["number"]]],"meta":{"line":41,"file":"index.d.ts"}},{"name":"heartbeatSendInterval","type":[[["Timeout"]]],"meta":{"line":42,"file":"index.d.ts"}},{"name":"helloTimeout","description":"Timeout to receive hello","type":[[["null"," |"],["Timeout"]]],"meta":{"line":104,"file":"index.d.ts"}},{"name":"intents","description":"Intents of this shard to be sent in identify","type":[[["GatewayIntentBits"]]],"meta":{"line":124,"file":"index.d.ts"}},{"name":"lastHeartbeatAck","type":[[["number"]]],"meta":{"line":40,"file":"index.d.ts"}},{"name":"options","description":"The options of shard","readonly":true,"type":[[["Required","<"],["GatewayShardOptions",">"]]],"meta":{"line":39,"file":"index.d.ts"}},{"name":"pendingGuilds","description":"The size of pending guilds","type":[[["number"]]],"meta":{"line":67,"file":"index.d.ts"}},{"name":"pendingGuildsMap","description":"Pending guilds map","type":[[["Map","<"],["string",", "],["APIUnavailableGuild",">"]]],"meta":{"line":71,"file":"index.d.ts"}},{"name":"ping","description":"This gateway shard ping","type":[[["number"]]],"meta":{"line":55,"file":"index.d.ts"}},{"name":"preReady","type":[[["boolean"]]],"meta":{"line":31,"file":"index.d.ts"}},{"name":"presence","type":[[["GatewayPresenceUpdateData"]]],"meta":{"line":125,"file":"index.d.ts"}},{"name":"queue","description":"The array of functions to be executed","type":[[["Array","<"],["CallableFunction",">"]]],"meta":{"line":92,"file":"index.d.ts"}},{"name":"queueProcessing","description":"Queue is processing","type":[[["boolean"]]],"meta":{"line":88,"file":"index.d.ts"}},{"name":"queueRemaining","description":"Remaining itens in queue","type":[[["number"]]],"meta":{"line":112,"file":"index.d.ts"}},{"name":"queueTimer","description":"Queue timeout","type":[[["null"," |"],["Timeout"]]],"meta":{"line":116,"file":"index.d.ts"}},{"name":"queueTotal","description":"Total of itens in queue","type":[[["number"]]],"meta":{"line":108,"file":"index.d.ts"}},{"name":"ready","type":[[["boolean"]]],"meta":{"line":29,"file":"index.d.ts"}},{"name":"resumeURL","description":"This shard resume url","type":[[["string"]]],"meta":{"line":96,"file":"index.d.ts"}},{"name":"sequenceId","description":"The shard sequence id","type":[[["number"]]],"meta":{"line":35,"file":"index.d.ts"}},{"name":"sessionId","description":"The id of shard session","type":[[["string"]]],"meta":{"line":63,"file":"index.d.ts"}},{"name":"shardId","description":"The id of this gateway shard","readonly":true,"type":[[["string"]]],"meta":{"line":51,"file":"index.d.ts"}},{"name":"status","description":"Status of this shard","type":[[["GatewayStatus"]]],"meta":{"line":84,"file":"index.d.ts"}},{"name":"uptime","description":"The time of shard is online","type":[[["number"]]],"meta":{"line":75,"file":"index.d.ts"}},{"name":"ws","description":"The websocket for shard","type":[[["WebSocket"]]],"meta":{"line":28,"file":"index.d.ts"}},{"name":"captureRejectionSymbol","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["captureRejectionSymbol",")"]]],"meta":{"line":405,"file":"events.d.ts"}},{"name":"captureRejections","description":"Sets or gets the default captureRejection value for all emitters.","scope":"static","type":[[["boolean"]]],"meta":{"line":410,"file":"events.d.ts"}},{"name":"defaultMaxListeners","scope":"static","type":[[["number"]]],"meta":{"line":411,"file":"events.d.ts"}},{"name":"errorMonitor","description":"This symbol shall be used to install a listener for only monitoring `'error'`\nevents. Listeners installed using this symbol are called before the regular\n`'error'` listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an\n`'error'` event is emitted, therefore the process will still crash if no\nregular `'error'` listener is installed.","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["errorMonitor",")"]]],"meta":{"line":404,"file":"events.d.ts"}}],"methods":[{"name":"[captureRejectionSymbol]","params":[{"name":"error","optional":false,"type":[[["Error"]]]},{"name":"event","optional":false,"type":[[["string"]]]},{"name":"args","optional":false,"variable":true,"type":[[["Array","<"],["any",">"]]]}],"returns":[[[["void"]]]],"meta":{"line":115,"file":"events.d.ts"}},{"name":"_makeErr","params":[{"name":"message","optional":false,"type":[[["string"]]]},{"name":"code","optional":false,"type":[[["number"]]]}],"returns":[[[["Error"," |"],["TypeError"," |"],["RangeError"," |"],["SyntaxError"]]]],"meta":{"line":128,"file":"index.d.ts"}},{"name":"ackHeartbeat","returns":[[[["void"]]]],"meta":{"line":144,"file":"index.d.ts"}},{"name":"addListener","description":"Alias for `emitter.on(eventName, listener)`.","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["GatewayShard"]]]],"meta":{"line":475,"file":"events.d.ts"}},{"name":"close","description":"Close this gateway","params":[{"name":"code","description":"Close code","optional":false,"type":[[["number"]]]},{"name":"reason","description":"Close reason","optional":true,"type":[[["string"]]]}],"returns":[[[["void"]]]],"meta":{"line":162,"file":"index.d.ts"}},{"name":"connect","description":"Connect shard to discord gateway","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":167,"file":"index.d.ts"}},{"name":"debug","params":[{"name":"message","optional":false,"type":[[["string"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":127,"file":"index.d.ts"}},{"name":"destroy","description":"Destroy this gateway shard","returns":[[[["void"]]]],"meta":{"line":176,"file":"index.d.ts"}},{"name":"emit","params":[{"name":"event","optional":false,"type":[[["T"]]]},{"name":"args","optional":false,"variable":true,"type":[[["GatewayShardEvents","["],["T","]"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":19,"file":"index.d.ts"}},{"name":"eventNames","description":"Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.\n\n```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```","returns":[[[["Array","<"],["string"," |"],["symbol",">"]]]],"meta":{"line":794,"file":"events.d.ts"}},{"name":"getMaxListeners","description":"Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to defaultMaxListeners.","returns":[[[["number"]]]],"meta":{"line":647,"file":"events.d.ts"}},{"name":"identify","description":"Identify this","returns":[[[["void"]]]],"meta":{"line":153,"file":"index.d.ts"}},{"name":"init","returns":[[[["void"]]]],"meta":{"line":163,"file":"index.d.ts"}},{"name":"listenerCount","description":"Returns the number of listeners listening to the event named `eventName`.\n\nIf `listener` is provided, it will return how many times the listener\nis found in the list of the listeners of the event.","params":[{"name":"eventName","description":"The name of the event being listened for","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","description":"The event handler function","optional":true,"type":[[["Function"]]]}],"returns":[[[["number"]]]],"meta":{"line":741,"file":"events.d.ts"}},{"name":"listeners","description":"Returns a copy of the array of listeners for the event named `eventName`.\n\n```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["Array","<"],["Function",">"]]]],"meta":{"line":660,"file":"events.d.ts"}},{"name":"off","description":"Alias for `emitter.removeListener()`.","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["GatewayShard"]]]],"meta":{"line":620,"file":"events.d.ts"}},{"name":"on","params":[{"name":"event","optional":false,"type":[[["T"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["GatewayShardEvents","["],["T","]) => "],["any"]]]}],"returns":[[[["GatewayShard"]]]],"meta":{"line":15,"file":"index.d.ts"}},{"name":"once","params":[{"name":"event","optional":false,"type":[[["T"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["GatewayShardEvents","["],["T","]) => "],["any"]]]}],"returns":[[[["GatewayShard"]]]],"meta":{"line":17,"file":"index.d.ts"}},{"name":"prependListener","description":"Adds the `listener` function to the _beginning_ of the listeners array for the\nevent named `eventName`. No checks are made to see if the `listener` has\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\ntimes.\n\n```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"eventName","description":"The name of the event.","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","description":"The callback function","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["GatewayShard"]]]],"meta":{"line":759,"file":"events.d.ts"}},{"name":"prependOnceListener","description":"Adds a **one-time**`listener` function for the event named `eventName` to the _beginning_ of the listeners array. The next time `eventName` is triggered, this\nlistener is removed, and then invoked.\n\n```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"eventName","description":"The name of the event.","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","description":"The callback function","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["GatewayShard"]]]],"meta":{"line":775,"file":"events.d.ts"}},{"name":"processQueue","description":"Process the queue","returns":[[[["void"]]]],"meta":{"line":139,"file":"index.d.ts"}},{"name":"rawListeners","description":"Returns a copy of the array of listeners for the event named `eventName`,\nincluding any wrappers (such as those created by `.once()`).\n\n```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["Array","<"],["Function",">"]]]],"meta":{"line":690,"file":"events.d.ts"}},{"name":"reconnect","description":"Reconnect shard to discord gateway","returns":[[[["void"]]]],"meta":{"line":172,"file":"index.d.ts"}},{"name":"removeAllListeners","description":"Removes all listeners, or those of the specified `eventName`.\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the `EventEmitter` instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"event","optional":true,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["GatewayShard"]]]],"meta":{"line":631,"file":"events.d.ts"}},{"name":"removeListener","description":"Removes the specified `listener` from the listener array for the event named`eventName`.\n\n```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```\n\n`removeListener()` will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified `eventName`, then `removeListener()` must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any`removeListener()` or `removeAllListeners()` calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from`emit()` in progress. Subsequent events behave as expected.\n\n```js\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe `emitter.listeners()` method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), `removeListener()` will remove the most\nrecently added instance. In the example the `once('ping')`listener is removed:\n\n```js\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["GatewayShard"]]]],"meta":{"line":615,"file":"events.d.ts"}},{"name":"requestGuildMembers","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["Pick","<"],["Partial","<"],["GatewayRequestGuildMembersDataWithQuery",">, "],["limit"," |"],["query","> & "],["Omit","<"],["GatewayRequestGuildMembersDataWithQuery",", "],["limit"," |"],["query","> & "],["Pick","<"],["Partial","<"],["GatewayRequestGuildMembersDataWithUserIds",">, "],["user","_"],["ids","> & "],["Omit","<"],["GatewayRequestGuildMembersDataWithUserIds",", "],["user","_"],["ids",">>"]]]}],"returns":[[[["void"]]]],"meta":{"line":154,"file":"index.d.ts"}},{"name":"resume","description":"Resume this gateway","returns":[[[["void"]]]],"meta":{"line":148,"file":"index.d.ts"}},{"name":"send","description":"Send's payload to gateway","params":[{"name":"data","description":"Data to be sent","optional":false,"type":[[["GatewaySendPayload"]]]},{"name":"important","description":"If this value is true the process will be added at the top of the queue","optional":true,"type":[[["boolean"]]]}],"returns":[[[["void"]]]],"meta":{"line":134,"file":"index.d.ts"}},{"name":"sendHeartbeat","description":"Send heartbeat to discord","returns":[[[["void"]]]],"meta":{"line":143,"file":"index.d.ts"}},{"name":"sendPresence","params":[{"name":"data","optional":false,"type":[[["GatewayPresenceUpdateData"]]]}],"returns":[[[["void"]]]],"meta":{"line":156,"file":"index.d.ts"}},{"name":"setMaxListeners","description":"By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"n","optional":false,"type":[[["number"]]]}],"returns":[[[["GatewayShard"]]]],"meta":{"line":641,"file":"events.d.ts"}},{"name":"updateVoiceState","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["GatewayVoiceStateUpdateData",">"]]]}],"returns":[[[["void"]]]],"meta":{"line":155,"file":"index.d.ts"}},{"name":"addAbortListener","description":"Listens once to the `abort` event on the provided `signal`.\n\nListening to the `abort` event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall `e.stopImmediatePropagation()`. Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using `AbortSignal`s in Node.js APIs by solving these\ntwo issues by listening to the event such that `stopImmediatePropagation` does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```","scope":"static","params":[{"name":"signal","optional":false,"type":[[["AbortSignal"]]]},{"name":"resource","optional":false,"type":[[["("],["event",": "],["Event",") => "],["void"]]]}],"returns":[{"types":[[["Disposable"]]],"description":"Disposable that removes the `abort` listener."}],"returnsDescription":"Disposable that removes the `abort` listener.","meta":{"line":394,"file":"events.d.ts"}},{"name":"getEventListeners","description":"Returns a copy of the array of listeners for the event named `eventName`.\n\nFor `EventEmitter`s this behaves exactly the same as calling `.listeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n```js\nconst { getEventListeners, EventEmitter } = require('events');\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  getEventListeners(ee, 'foo'); // [listener]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  getEventListeners(et, 'foo'); // [listener]\n}\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"," |_"],["DOMEventTarget"]]]},{"name":"name","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["Array","<"],["Function",">"]]]],"meta":{"line":312,"file":"events.d.ts"}},{"name":"getMaxListeners","description":"Returns the currently set max amount of listeners.\n\nFor `EventEmitter`s this behaves exactly the same as calling `.getMaxListeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"," |_"],["DOMEventTarget"]]]}],"returns":[[[["number"]]]],"meta":{"line":341,"file":"events.d.ts"}},{"name":"listenerCount","description":"A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.\n\n```js\nconst { EventEmitter, listenerCount } = require('events');\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```","scope":"static","deprecated":"Since v3.2.0 - Use `listenerCount` instead.","params":[{"name":"emitter","description":"The emitter to query","optional":false,"type":[[["EventEmitter"]]]},{"name":"eventName","description":"The event name","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["number"]]]],"meta":{"line":284,"file":"events.d.ts"}},{"name":"on","description":"```js\nconst { on, EventEmitter } = require('events');\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo')) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n```\n\nReturns an `AsyncIterator` that iterates `eventName` events. It will throw\nif the `EventEmitter` emits `'error'`. It removes all listeners when\nexiting the loop. The `value` returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn `AbortSignal` can be used to cancel waiting on events:\n\n```js\nconst { on, EventEmitter } = require('events');\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"]]]},{"name":"eventName","description":"The name of the event being listened for","optional":false,"type":[[["string"]]]},{"name":"options","optional":true,"type":[[["StaticEventEmitterOptions"]]]}],"returns":[{"types":[[["AsyncIterableIterator","<"],["any",">"]]],"description":"that iterates `eventName` events emitted by the `emitter`"}],"returnsDescription":"that iterates `eventName` events emitted by the `emitter`","meta":{"line":263,"file":"events.d.ts"}},{"name":"once","description":"Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special`'error'` event\nsemantics and does not listen to the `'error'` event.\n\n```js\nconst { once, EventEmitter } = require('events');\n\nasync function run() {\n  const ee = new EventEmitter();\n\n  process.nextTick(() => {\n    ee.emit('myevent', 42);\n  });\n\n  const [value] = await once(ee, 'myevent');\n  console.log(value);\n\n  const err = new Error('kaboom');\n  process.nextTick(() => {\n    ee.emit('error', err);\n  });\n\n  try {\n    await once(ee, 'myevent');\n  } catch (err) {\n    console.log('error happened', err);\n  }\n}\n\nrun();\n```\n\nThe special handling of the `'error'` event is only used when `events.once()`is used to wait for another event. If `events.once()` is used to wait for the\n'`error'` event itself, then it is treated as any other kind of event without\nspecial handling:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.log('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```\n\nAn `AbortSignal` can be used to cancel waiting for the event:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["_"],["NodeEventTarget"]]]},{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"options","optional":true,"type":[[["StaticEventEmitterOptions"]]]}],"returns":[[[["Promise","<"],["Array","<"],["any",">>"]]]],"meta":{"line":199,"file":"events.d.ts"}},{"name":"setMaxListeners","description":"```js\nconst {\n  setMaxListeners,\n  EventEmitter\n} = require('events');\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```","scope":"static","params":[{"name":"n","description":"A non-negative number. The maximum number of listeners per `EventTarget` event.","optional":true,"type":[[["number"]]]},{"name":"eventTargets","optional":false,"variable":true,"type":[[["Array","<"],["EventEmitter"," |_"],["DOMEventTarget",">"]]]}],"returns":[[[["void"]]]],"meta":{"line":359,"file":"events.d.ts"}}]},{"name":"Guild","extends":[[["BaseGuild"]]],"construct":{"name":"new Guild","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIGuild"," |"],["APIGuildWithShard",">"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"afkChannelId","description":"Id of afk channel","type":[[["null"," |"],["string"]]],"meta":{"line":242,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L242"}},{"name":"afkTimeout","description":"Afk timeout in seconds, can be set to: 60, 300, 900, 1800, 3600","type":[[["60"," |"],["300"," |"],["900"," |"],["1800"," |"],["3600"]]],"meta":{"line":246,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L246"}},{"name":"applicationId","description":"Application id of the guild creator if it is bot-created","type":[[["null"," |"],["string"]]],"meta":{"line":278,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L278"}},{"name":"approximateMemberCount","description":"Approximate number of members in this guild, returned from the GET /guilds/<id> endpoint when with_counts is true","type":[[["number"]]],"meta":{"line":318,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L318"}},{"name":"approximatePresenceCount","description":"Approximate number of non-offline members in this guild, returned from the GET /guilds/<id> endpoint when with_counts is true","type":[[["number"]]],"meta":{"line":322,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L322"}},{"name":"banner","description":"Banner hash","type":[[["null"," |"],["string"]]],"meta":{"line":71,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L71"}},{"name":"channels","description":"Cache of channels","type":[[["GuildChannelDataManager"]]],"meta":{"line":222,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L222"}},{"name":"defaultMessageNotifications","description":"Default message notifications level","type":[[["GuildDefaultMessageNotifications"]]],"meta":{"line":258,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L258"}},{"name":"description","description":"The description of a guild","type":[[["null"," |"],["string"]]],"meta":{"line":87,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L87"}},{"name":"discoverySplash","description":"Discovery splash hash; only present for guilds with the \"DISCOVERABLE\" feature","type":[[["null"," |"],["string"]]],"meta":{"line":230,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L230"}},{"name":"emojis","description":"Custom guild emojis","type":[[["GuildEmojiDataManager"]]],"meta":{"line":270,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L270"}},{"name":"explicitContentFilter","description":"Explicit content filter level","type":[[["GuildExplicitContentFilter"]]],"meta":{"line":262,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L262"}},{"name":"features","description":"Enabled guild features","type":[[["Array","<"],["GuildFeature",">"]]],"meta":{"line":79,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L79"}},{"name":"hubType","description":"The type of Student Hub the guild is","type":[[["null"," |"],["GuildHubType"]]],"meta":{"line":338,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L338"}},{"name":"icon","description":"Icon hash","type":[[["null"," |"],["string"]]],"meta":{"line":75,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L75"}},{"name":"iconHash","description":"Icon hash, returned when in the template object","type":[[["null"," |"],["string"]]],"meta":{"line":226,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L226"}},{"name":"id","description":"The guild id","type":[[["string"]]],"meta":{"line":103,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L103"}},{"name":"invites","description":"Guild invites","type":[[["Map","<"],["string",", "],["Invite",">"]]],"meta":{"line":375,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L375"}},{"name":"maxMembers","description":"The maximum number of members for the guild","type":[[["number"]]],"meta":{"line":298,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L298"}},{"name":"maxPresences","description":"The maximum number of presences for the guild (null is always returned, apart from the largest of guilds)","type":[[["null"," |"],["number"]]],"meta":{"line":294,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L294"}},{"name":"maxVideoChannelUsers","description":"The maximum amount of users in a video channel","type":[[["number"]]],"meta":{"line":314,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L314"}},{"name":"members","description":"Members of guild","type":[[["MemberDataManager"]]],"meta":{"line":343,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L343"}},{"name":"mfaLevel","description":"Required MFA level for the guild","type":[[["GuildMFALevel"]]],"meta":{"line":274,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L274"}},{"name":"name","description":"Guild name (2-100 characters, excluding trailing and leading whitespace)","type":[[["string"]]],"meta":{"line":99,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L99"}},{"name":"nsfwLevel","description":"Guild NSFW level","type":[[["GuildNSFWLevel"]]],"meta":{"line":347,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L347"}},{"name":"ownerId","description":"Id of owner","type":[[["string"]]],"meta":{"line":234,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L234"}},{"name":"permissions","description":"Total permissions for the user in the guild (excludes overwrites)","type":[[["Permissions"]]],"meta":{"line":238,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L238"}},{"name":"preferredLocale","description":"The preferred locale of a Community guild; used in server discovery and notices from Discord, and sent in interactions; defaults to \"en-US\"","type":[[["string"]]],"meta":{"line":306,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L306"}},{"name":"premiumProgressBarEnabled","description":"Whether the guild has the boost progress bar enabled","type":[[["boolean"]]],"meta":{"line":334,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L334"}},{"name":"premiumSubscriptionCount","description":"The number of boosts this guild currently has","type":[[["number"]]],"meta":{"line":351,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L351"}},{"name":"premiumTier","description":"Premium tier (Server Boost level)","type":[[["GuildPremiumTier"]]],"meta":{"line":302,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L302"}},{"name":"presences","description":"Guild presences","type":[[["Array","<"],["GatewayPresenceUpdate",">"]]],"meta":{"line":355,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L355"}},{"name":"publicUpdatesChannelId","description":"The id of the channel where admins and moderators of Community guilds receive notices from Discord","type":[[["null"," |"],["string"]]],"meta":{"line":310,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L310"}},{"name":"rawData","type":[[["APIGuild"]]],"meta":{"line":339,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L339"}},{"name":"roles","description":"Roles in the guild","type":[[["RoleDataManager"]]],"meta":{"line":266,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L266"}},{"name":"rulesChannelId","description":"The id of the channel where Community guilds can display rules and/or guidelines","type":[[["null"," |"],["string"]]],"meta":{"line":290,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L290"}},{"name":"scheduledEvents","description":"This guild scheduled events","type":[[["Map","<"],["string",", "],["ScheduledEvent",">"]]],"meta":{"line":371,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L371"}},{"name":"shardId","description":"Guild shard id","type":[[["string"]]],"meta":{"line":359,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L359"}},{"name":"splash","description":"Splash hash","type":[[["null"," |"],["string"]]],"meta":{"line":83,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L83"}},{"name":"stageInstances","description":"Stage Instances in this guild","type":[[["Map","<"],["string",", "],["APIStageInstance",">"]]],"meta":{"line":363,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L363"}},{"name":"stickers","description":"Custom guild stickers","type":[[["GuildStickerDataManager"]]],"meta":{"line":330,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L330"}},{"name":"systemChannelFlags","description":"System channel flags","type":[[["GuildSystemChannelFlags"]]],"meta":{"line":286,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L286"}},{"name":"systemChannelId","description":"The id of the channel where guild notices such as welcome messages and boost events are posted","type":[[["null"," |"],["string"]]],"meta":{"line":282,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L282"}},{"name":"vanityUrlCode","description":"The vanity url code for the guild","type":[[["null"," |"],["string"]]],"meta":{"line":95,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L95"}},{"name":"verificationLevel","description":"Verification level required for the guild","type":[[["null"," |"],["GuildVerificationLevel"]]],"meta":{"line":91,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L91"}},{"name":"voiceStates","description":"Voice states in this guild","type":[[["Map","<"],["string",", "],["VoiceState",">"]]],"meta":{"line":367,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L367"}},{"name":"welcomeScreen","description":"The welcome screen of a Community guild, shown to new members, returned in an Invite's guild object","type":[[["APIGuildWelcomeScreen"]]],"meta":{"line":326,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L326"}},{"name":"widgetChannelId","description":"The channel id that the widget will generate an invite to, or null if set to no invite","type":[[["null"," |"],["string"]]],"meta":{"line":254,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L254"}},{"name":"widgetEnabled","description":"True if the server widget is enabled","type":[[["boolean"]]],"meta":{"line":250,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L250"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APIGuild"]]]}],"returns":[[[["Guild"]]]],"meta":{"line":920,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L920"}},{"name":"addMemberRole","description":"Adds a role to a member","params":[{"name":"userId","description":"Id of the member who will receive the role","optional":false,"type":[[["string"]]]},{"name":"roleId","description":"The role to be added to member","optional":false,"type":[[["string"]]]},{"name":"reason","description":"Reason to add role","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":564,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L564"}},{"name":"bannerURL","params":[{"name":"format","optional":true,"type":[[["GuildBannerFormat"]]]}],"returns":[[[["null"," |"],["string"]]]],"meta":{"line":125,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L125"}},{"name":"bulkOverwriteApplicationCommands","description":"Takes a list of application commands, overwriting the existing command list for this application for the targeted guild","params":[{"name":"commands","description":"The array of commands","optional":false,"type":[[["RESTPutAPIApplicationCommandsJSONBody"]]]}],"returns":[[[["Promise","<"],["Array","<"],["APIApplication",">>"]]]],"meta":{"line":885,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L885"}},{"name":"createApplicationCommand","description":"Create a new guild command","params":[{"name":"options","description":"Options to create command","optional":false,"type":[[["RESTPostAPIApplicationCommandsJSONBody"]]]}],"returns":[[[["Promise","<"],["APIApplicationCommand",">"]]]],"meta":{"line":850,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L850"}},{"name":"createAutoModerationRule","params":[{"name":"options","optional":false,"type":[[["Omit","<"],["KeysToCamelCase","<"],["RESTPostAPIAutoModerationRuleJSONBody",">, "],["triggerMetadata","> & {"],["\ntriggerMetadata",": "],["KeysToCamelCase","<"],["APIAutoModerationRuleTriggerMetadata",">"],["\n","}"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["APIAutoModerationRule",">"]]]],"meta":{"line":684,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L684"}},{"name":"createChannel","description":"Create a channel in this guild","params":[{"name":"options","description":"The options to create channel","optional":false,"type":[[["CreateChannelOptions"]]]},{"name":"reason","description":"Reason to create channel","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["undefined"," |"],["AnyChannel",">"]]]],"meta":{"line":761,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L761"}},{"name":"createMemberBan","description":"Create a guild ban, and optionally delete previous messages sent by the banned user.","params":[{"name":"userId","optional":false,"type":[[["string"]]]},{"name":"options","optional":true,"default":"{}","type":[[["KeysToCamelCase","<"],["RESTPutAPIGuildBanJSONBody",">"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":407,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L407"}},{"name":"createRole","description":"Create a new role for the guild","params":[{"name":"options","description":"The options to create role","optional":false,"type":[[["Omit","<"],["KeysToCamelCase","<"],["RESTPostAPIGuildRoleJSONBody",">, "],["permissions","> & {"],["\npermissions",": "],["bigint"," |"],["Permissions\n","}"]]]},{"name":"reason","description":"The reason to create role","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["any",">"]]]],"meta":{"line":490,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L490"}},{"name":"createScheduledEvent","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPostAPIGuildScheduledEventJSONBody",">"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["APIGuildScheduledEvent",">"]]]],"meta":{"line":663,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L663"}},{"name":"deleteApplicationCommand","description":"Delete a guild command","params":[{"name":"commandId","description":"The id of command to be deleted","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":876,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L876"}},{"name":"deleteAutoModerationRule","params":[{"name":"autoModerationRuleId","optional":false,"type":[[["string"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":715,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L715"}},{"name":"deleteChannel","description":"Delete a channel in this guild","params":[{"name":"id","description":"The id of channel to be deleted","optional":false,"type":[[["string"]]]},{"name":"reason","description":"Reason to delete channel","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":801,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L801"}},{"name":"deleteIntegration","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":659,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L659"}},{"name":"deleteRole","description":"Delete a guild role","params":[{"name":"id","description":"The id of role to be deleted","optional":false,"type":[[["string"]]]},{"name":"reason","description":"Reason to delete role","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":522,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L522"}},{"name":"edit","description":"Edit the guild","params":[{"name":"options","description":"Options to edit guild","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPatchAPIGuildJSONBody",">"]]]},{"name":"reason","description":"Reason to edit","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["Guild",">"]]]],"meta":{"line":911,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L911"}},{"name":"editApplicationCommand","description":"Edit a guild command","params":[{"name":"commandId","description":"The id of command to be edited","optional":false,"type":[[["string"]]]},{"name":"options","description":"Options to edit command","optional":false,"type":[[["RESTPatchAPIApplicationCommandJSONBody"]]]}],"returns":[[[["Promise","<"],["APIApplication",">"]]]],"meta":{"line":860,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L860"}},{"name":"editAutoModerationRule","params":[{"name":"autoModerationRuleId","optional":false,"type":[[["string"]]]},{"name":"options","optional":false,"type":[[["Omit","<"],["KeysToCamelCase","<"],["RESTPatchAPIAutoModerationRuleJSONBody",">, "],["triggerMetadata","> & {"],["\ntriggerMetadata",": "],["KeysToCamelCase","<"],["APIAutoModerationRuleTriggerMetadata",">"],["\n","}"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["APIAutoModerationRule",">"]]]],"meta":{"line":723,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L723"}},{"name":"editMember","description":"Edit the current member","params":[{"name":"userId","optional":false,"type":[[["@me"]]]},{"name":"options","description":"Options to edit member","optional":false,"type":[[["RESTPatchAPICurrentGuildMemberJSONBody"]]]},{"name":"reason","description":"Reason to edit member","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["Member",">"]]]],"meta":{"line":594,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L594"}},{"name":"editRole","description":"Edit a guild role","params":[{"name":"roleId","description":"The id of role to be edited","optional":false,"type":[[["string"]]]},{"name":"options","description":"The options to edit role","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPatchAPIGuildRoleJSONBody",">"]]]},{"name":"reason","description":"Reason to edit role","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["any",">"]]]],"meta":{"line":468,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L468"}},{"name":"getAuditLogs","returns":[[[["Promise","<"],["AuditLog",">"]]]],"meta":{"line":637,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L637"}},{"name":"getBanList","params":[{"name":"options","optional":true,"type":[[["RESTGetAPIGuildBansQuery"]]]}],"returns":[[[["Promise","<"],["Array","<"],["APIBan",">>"]]]],"meta":{"line":397,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L397"}},{"name":"getIntegrations","returns":[[[["Promise","<"],["Array","<"],["Integration",">>"]]]],"meta":{"line":646,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L646"}},{"name":"getInvites","returns":[[[["Promise","<"],["Array","<"],["APIExtendedInvite",">>"]]]],"meta":{"line":642,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L642"}},{"name":"getMemberBan","description":"Returns a ban object for the given user","params":[{"name":"userId","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["APIBan",">"]]]],"meta":{"line":393,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L393"}},{"name":"iconURL","params":[{"name":"format","optional":true,"type":[[["GuildIconFormat"]]]}],"returns":[[[["null"," |"],["string"]]]],"meta":{"line":110,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L110"}},{"name":"permissionsOf","description":"Get permissions of user","params":[{"name":"userId","description":"user id to get permissions","optional":false,"type":[[["string"," |"],["Member"]]]}],"returns":[[[["Permissions"]]]],"meta":{"line":810,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L810"}},{"name":"pruneMembers","description":"Begin a prune operation","params":[{"name":"options","description":"Options to prune members","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPostAPIGuildPruneJSONBody",">"]]]},{"name":"reason","description":"Reason to prune members","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["RESTPostAPIGuildPruneResult",">"]]]],"meta":{"line":532,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L532"}},{"name":"removeMember","description":"Remove a member from a guild","params":[{"name":"userId","description":"The id of the member to be removed","optional":false,"type":[[["string"]]]},{"name":"reason","description":"Reason to remove member","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":553,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L553"}},{"name":"removeMemberBan","description":"Remove the ban for a user","params":[{"name":"userId","description":"User id to remove ban","optional":false,"type":[[["string"]]]},{"name":"reason","description":"Reason to remove ban","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":434,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L434"}},{"name":"removeMemberRole","description":"Removes a role from a member","params":[{"name":"userId","description":"The id of user to remove role","optional":false,"type":[[["string"]]]},{"name":"roleId","description":"The id of role to be removed from member","optional":false,"type":[[["string"]]]},{"name":"reason","description":"The reason to remove role","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":580,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L580"}},{"name":"setRolePosition","description":"Modify the position of a role in the guild","params":[{"name":"roleId","description":"Role id to be modified","optional":false,"type":[[["string"]]]},{"name":"newPosition","description":"The new position of role","optional":false,"type":[[["number"]]]},{"name":"reason","description":"Reason to modify the position","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["any",">"]]]],"meta":{"line":445,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L445"}},{"name":"toJSON","returns":[[[["void"]]]],"meta":{"line":88,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L88"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"GuildChannel","extends":[[["Channel"]]],"construct":{"name":"new GuildChannel","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIGuildChannelResolvable",">"]]]},{"name":"guild","optional":false,"type":[[["Guild"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"flags","description":"The flags of the channel","type":[[["null"," |"],["ChannelFlags"]]],"meta":{"line":75,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L75"}},{"name":"guild","type":[[["Guild"]]],"meta":{"line":335,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L335"}},{"name":"guildId","description":"The id of the guild (may be missing for some channel objects received over gateway guild dispatches)","type":[[["string"]]],"meta":{"line":339,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L339"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"name","description":"The name of the channel (2-100 characters)","type":[[["null"," |"],["string"]]],"meta":{"line":71,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L71"}},{"name":"nsfw","description":"Whether the channel is nsfw","type":[[["boolean"]]],"meta":{"line":357,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L357"}},{"name":"parentId","description":"ID of the parent category for a channel (each parent category can contain up to 50 channels)\nOR\nID of the parent channel for thread","type":[[["string"]]],"meta":{"line":345,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L345"}},{"name":"permissionOverwrites","description":"Explicit permission overwrites for members and roles","type":[[["DataCache","<"],["PermissionOverwrite",">"]]],"meta":{"line":349,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L349"}},{"name":"position","description":"Sorting position of the channel","type":[[["number"]]],"meta":{"line":353,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L353"}},{"name":"rawData","type":[[["APIChannel"]]],"meta":{"line":77,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L77"}},{"name":"threads","description":"The threads in this channel","type":[[["DataCache","<"],["ThreadChannel",">"]]],"meta":{"line":361,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L361"}},{"name":"type","description":"The type of the channel","type":[[["ChannelType"]]],"meta":{"line":67,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L67"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APIGuildChannelResolvable"]]]}],"returns":[[[["GuildChannel"]]]],"meta":{"line":402,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L402"}},{"name":"edit","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPatchAPIChannelJSONBody",">"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":86,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L86"}},{"name":"editPermissions","params":[{"name":"overwriteId","description":"User or Role id","optional":false,"type":[[["string"]]]},{"name":"options","description":"Options to edit permissions","optional":false,"type":[[["APIOverwrite"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":393,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L393"}},{"name":"fetchInformation","description":"Update information of this channel\n\nUtil if this is forged","returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":195,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L195"}},{"name":"isDM","returns":[[[["this"," "],["is"," "],["DMChannel"]]]],"meta":{"line":151,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L151"}},{"name":"isGuildChannel","returns":[[[["this"," "],["is"," "],["GuildChannel"]]]],"meta":{"line":163,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L163"}},{"name":"isGuildText","returns":[[[["this"," "],["is"," "],["GuildTextChannel"]]]],"meta":{"line":159,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L159"}},{"name":"isStage","returns":[[[["this"," "],["is"," "],["StageChannel"]]]],"meta":{"line":177,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L177"}},{"name":"isText","returns":[[[["this"," "],["is"," "],["TextBasedChannel"]]]],"meta":{"line":155,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L155"}},{"name":"isThread","returns":[[[["this"," "],["is"," "],["ThreadChannel"]]]],"meta":{"line":173,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L173"}},{"name":"isVoice","returns":[[[["this"," "],["is"," "],["VoiceChannel"]]]],"meta":{"line":181,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L181"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\ncreatedAt",": "],["number",","],["\nflags",": "],["null"," |"],["ChannelFlags",","],["\nguild",": "],["Guild",","],["\nguildId",": "],["string",","],["\nid",": "],["string",","],["\nname",": "],["null"," |"],["string",","],["\nnsfw",": "],["boolean",","],["\nparentId",": "],["string",","],["\npermissionOverwrites",": "],["DataCache","<"],["PermissionOverwrite",">,"],["\nposition",": "],["number",","],["\nrawData",": "],["APIChannel",","],["\nthreads",": "],["DataCache","<"],["ThreadChannel",">,"],["\ntype",": "],["ChannelType\n","}>>"]]]],"meta":{"line":411,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L411"}},{"name":"toString","returns":[[[["unknown"]]]],"meta":{"line":117,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L117"}},{"name":"from","scope":"static","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIChannel",">"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]}],"returns":[[[["Channel"]]]],"meta":{"line":200,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L200"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"GuildChannelDataManager","extends":[[["ChannelDataManager"]]],"construct":{"name":"new GuildChannelDataManager","params":[{"name":"options","optional":false,"type":[[["number"," |"],["BaseCacheOptions","<"],["unknown",">"]]]},{"name":"manager","optional":false,"type":[[["CacheManager"]]]},{"name":"guild","optional":false,"type":[[["Guild"]]]}]},"props":[{"name":"cache","type":[[["DataCache","<"],["Channel",">"]]],"meta":{"line":53,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L53"}},{"name":"guild","type":[[["Guild"]]],"meta":{"line":114,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L114"}},{"name":"manager","type":[[["CacheManager"]]],"meta":{"line":16,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L16"}}],"methods":[{"name":"_resolve","params":[{"name":"channel","optional":false,"type":[[["Channel"," |"],["APIChannel"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]},{"name":"addInCache","optional":true,"default":"false","type":[[["boolean"]]]}],"returns":[[[["Channel"]]]],"meta":{"line":24,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L24"}},{"name":"add","params":[{"name":"channel","optional":false,"type":[[["Channel"," |"],["APIChannel"]]]},{"name":"replace","optional":true,"default":"true","type":[[["boolean"]]]}],"returns":[[[["any"]]]],"meta":{"line":119,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L119"}},{"name":"fetch","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["any",">"]]]],"meta":{"line":77,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L77"}},{"name":"forge","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["any"]]]],"meta":{"line":67,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L67"}},{"name":"get","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["undefined"," |"],["Channel"]]]],"meta":{"line":63,"file":"ChannelDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/ChannelDataManager.ts#L63"}}]},{"name":"GuildEmojiDataManager","extends":[[["EmojiDataManager"]]],"construct":{"name":"new GuildEmojiDataManager","params":[{"name":"options","optional":false,"type":[[["number"," |"],["BaseCacheOptions","<"],["unknown",">"]]]},{"name":"manager","optional":false,"type":[[["CacheManager"]]]},{"name":"guild","optional":false,"type":[[["Guild"]]]}]},"props":[{"name":"cache","type":[[["DataCache","<"],["Emoji"," |"],["APIEmoji",">"]]],"meta":{"line":53,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L53"}},{"name":"guild","type":[[["Guild"]]],"meta":{"line":61,"file":"EmojiDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/EmojiDataManager.ts#L61"}},{"name":"manager","type":[[["CacheManager"]]],"meta":{"line":60,"file":"EmojiDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/EmojiDataManager.ts#L60"}}],"methods":[{"name":"#resolve","access":"private","params":[{"name":"emoji","optional":false,"type":[[["Emoji"," |"],["APIEmoji"]]]},{"name":"addInCache","optional":true,"default":"false","type":[[["boolean"]]]}],"returns":[[[["Emoji"," |"],["APIEmoji"]]]],"meta":{"line":24,"file":"EmojiDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/EmojiDataManager.ts#L24"}},{"name":"add","params":[{"name":"emoji","optional":false,"type":[[["Emoji"," |"],["APIEmoji"]]]},{"name":"replace","optional":true,"default":"true","type":[[["boolean"]]]}],"returns":[[[["any"]]]],"meta":{"line":38,"file":"EmojiDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/EmojiDataManager.ts#L38"}},{"name":"fetch","params":[{"name":"id","description":"emoji id","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["any",">"]]]],"meta":{"line":66,"file":"EmojiDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/EmojiDataManager.ts#L66"}},{"name":"get","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["undefined"," |"],["Emoji"," |"],["APIEmoji"]]]],"meta":{"line":20,"file":"EmojiDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/EmojiDataManager.ts#L20"}}]},{"name":"GuildStickerDataManager","extends":[[["StickerDataManager"]]],"construct":{"name":"new GuildStickerDataManager","params":[{"name":"options","optional":false,"type":[[["number"," |"],["BaseCacheOptions","<"],["unknown",">"]]]},{"name":"manager","optional":false,"type":[[["CacheManager"]]]},{"name":"guild","optional":false,"type":[[["Guild"]]]}]},"props":[{"name":"cache","type":[[["DataCache","<"],["Sticker"," |"],["APISticker",">"]]],"meta":{"line":53,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L53"}},{"name":"guild","type":[[["Guild"]]],"meta":{"line":72,"file":"StickerDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/StickerDataManager.ts#L72"}},{"name":"manager","type":[[["CacheManager"]]],"meta":{"line":71,"file":"StickerDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/StickerDataManager.ts#L71"}}],"methods":[{"name":"#resolve","access":"private","params":[{"name":"sticker","optional":false,"type":[[["Sticker"," |"],["APISticker"]]]},{"name":"addInCache","optional":true,"default":"false","type":[[["boolean"]]]}],"returns":[[[["Sticker"," |"],["APISticker"]]]],"meta":{"line":29,"file":"StickerDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/StickerDataManager.ts#L29"}},{"name":"_fetch","params":[{"name":"id","description":"sticker id","optional":false,"type":[[["string"]]]},{"name":"guild","description":"Guild object or Guild Id","optional":false,"type":[[["string"," |"],["Guild"," |"],["APIGuild"]]]},{"name":"addInCache","optional":true,"default":"true","type":[[["boolean"]]]}],"returns":[[[["Promise","<"],["any",">"]]]],"meta":{"line":50,"file":"StickerDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/StickerDataManager.ts#L50"}},{"name":"add","params":[{"name":"sticker","optional":false,"type":[[["Sticker"," |"],["APISticker"]]]},{"name":"replace","optional":true,"default":"true","type":[[["boolean"]]]}],"returns":[[[["any"]]]],"meta":{"line":25,"file":"StickerDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/StickerDataManager.ts#L25"}},{"name":"fetch","params":[{"name":"id","optional":false,"type":[[["string"]]]},{"name":"addInCache","optional":true,"default":"true","type":[[["boolean"]]]}],"returns":[[[["Promise","<"],["any",">"]]]],"meta":{"line":77,"file":"StickerDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/StickerDataManager.ts#L77"}},{"name":"get","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["undefined"," |"],["Sticker"," |"],["APISticker"]]]],"meta":{"line":21,"file":"StickerDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/StickerDataManager.ts#L21"}}]},{"name":"GuildTextChannel","extends":[[["GuildChannel","<"],["this","> & "],["TextBasedChannel","<"],["this",">"]]],"construct":{"name":"new GuildTextChannel","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APITextChannel",">"]]]},{"name":"guild","optional":false,"type":[[["Guild"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"flags","description":"The flags of the channel","type":[[["null"," |"],["ChannelFlags"]]],"meta":{"line":75,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L75"}},{"name":"guild","type":[[["Guild"]]],"meta":{"line":335,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L335"}},{"name":"guildId","description":"The id of the guild (may be missing for some channel objects received over gateway guild dispatches)","type":[[["string"]]],"meta":{"line":339,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L339"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"lastMessageId","description":"The id of the last message sent in this channel (may not point to an existing or valid message)","type":[[["null"," |"],["string"]]],"meta":{"line":243,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L243"}},{"name":"lastPinTimestamp","description":"When the last pinned message was pinned.","type":[[["null"," |"],["number"]]],"meta":{"line":247,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L247"}},{"name":"messages","description":"Channel messages","type":[[["MessageDataManager"]]],"meta":{"line":251,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L251"}},{"name":"name","description":"The name of the channel (2-100 characters)","type":[[["null"," |"],["string"]]],"meta":{"line":71,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L71"}},{"name":"nsfw","description":"Whether the channel is nsfw","type":[[["boolean"]]],"meta":{"line":357,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L357"}},{"name":"parentId","description":"ID of the parent category for a channel (each parent category can contain up to 50 channels)\nOR\nID of the parent channel for thread","type":[[["string"]]],"meta":{"line":345,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L345"}},{"name":"permissionOverwrites","description":"Explicit permission overwrites for members and roles","type":[[["DataCache","<"],["PermissionOverwrite",">"]]],"meta":{"line":349,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L349"}},{"name":"position","description":"Sorting position of the channel","type":[[["number"]]],"meta":{"line":353,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L353"}},{"name":"rateLimitPerUser","description":"Amount of seconds a user has to wait before sending another message (0-21600)","type":[[["number"]]],"meta":{"line":439,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L439"}},{"name":"rawData","type":[[["APIChannel"]]],"meta":{"line":77,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L77"}},{"name":"threads","description":"The threads in this channel","type":[[["DataCache","<"],["ThreadChannel",">"]]],"meta":{"line":361,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L361"}},{"name":"topic","description":"The channel topic (0-4096 characters for forum channels, 0-1024 characters for all others)","type":[[["string"]]],"meta":{"line":435,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L435"}},{"name":"type","type":[[["GuildTextChannelType"]]],"meta":{"line":431,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L431"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APITextChannel"]]]}],"returns":[[[["GuildTextChannel"]]]],"meta":{"line":489,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L489"}},{"name":"bulkDeleteMessages","params":[{"name":"messages","optional":false,"type":[[["number"," |"],["Array","<"],["string","> |"],["Array","<"],["Message",">"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":287,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L287"}},{"name":"createMessage","params":[{"name":"content","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":452,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L452"}},{"name":"createWebhook","params":[{"name":"data","optional":false,"type":[[["RESTPostAPIChannelWebhookJSONBody"]]]}],"returns":[[[["Promise","<"],["Webhook",">"]]]],"meta":{"line":470,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L470"}},{"name":"deleteMessage","params":[{"name":"id","optional":false,"type":[[["string"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":283,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L283"}},{"name":"edit","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPatchAPIChannelJSONBody",">"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":86,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L86"}},{"name":"editPermissions","params":[{"name":"overwriteId","description":"User or Role id","optional":false,"type":[[["string"]]]},{"name":"options","description":"Options to edit permissions","optional":false,"type":[[["APIOverwrite"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":393,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L393"}},{"name":"fetchInformation","description":"Update information of this channel\n\nUtil if this is forged","returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":195,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L195"}},{"name":"fetchWebhook","params":[{"name":"webhookId","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["Webhook",">"]]]],"meta":{"line":477,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L477"}},{"name":"fetchWebhooks","returns":[[[["Promise","<"],["Array","<"],["Webhook",">>"]]]],"meta":{"line":483,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L483"}},{"name":"isDM","returns":[[[["this"," "],["is"," "],["DMChannel"]]]],"meta":{"line":151,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L151"}},{"name":"isGuildChannel","returns":[[[["this"," "],["is"," "],["GuildChannel"]]]],"meta":{"line":163,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L163"}},{"name":"isGuildText","returns":[[[["this"," "],["is"," "],["GuildTextChannel"]]]],"meta":{"line":159,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L159"}},{"name":"isStage","returns":[[[["this"," "],["is"," "],["StageChannel"]]]],"meta":{"line":177,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L177"}},{"name":"isText","returns":[[[["this"," "],["is"," "],["TextBasedChannel"]]]],"meta":{"line":155,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L155"}},{"name":"isThread","returns":[[[["this"," "],["is"," "],["ThreadChannel"]]]],"meta":{"line":173,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L173"}},{"name":"isVoice","returns":[[[["this"," "],["is"," "],["VoiceChannel"]]]],"meta":{"line":181,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L181"}},{"name":"sendTyping","returns":[[[["Promise","<"],["unknown",">"]]]],"meta":{"line":304,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L304"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\ncreatedAt",": "],["number",","],["\nflags",": "],["null"," |"],["ChannelFlags",","],["\nguild",": "],["Guild",","],["\nguildId",": "],["string",","],["\nid",": "],["string",","],["\nlastMessageId",": "],["undefined"," |"],["null"," |"],["string",","],["\nlastPinTimestamp",": "],["undefined"," |"],["null"," |"],["number",","],["\nmessages",": "],["MessageDataManager",","],["\nname",": "],["null"," |"],["string",","],["\nnsfw",": "],["boolean",","],["\nparentId",": "],["string",","],["\npermissionOverwrites",": "],["DataCache","<"],["PermissionOverwrite",">,"],["\nposition",": "],["number",","],["\nrateLimitPerUser",": "],["undefined"," |"],["number",","],["\nrawData",": "],["APIChannel",","],["\nthreads",": "],["DataCache","<"],["ThreadChannel",">,"],["\ntopic",": "],["undefined"," |"],["string",","],["\ntype",": "],["GuildTextChannelType\n","}>>"]]]],"meta":{"line":498,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L498"}},{"name":"toString","returns":[[[["unknown"]]]],"meta":{"line":117,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L117"}},{"name":"from","scope":"static","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIChannel",">"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]}],"returns":[[[["Channel"]]]],"meta":{"line":200,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L200"}},{"name":"isBased","scope":"static","params":[{"name":"channel","optional":false,"type":[[["Channel"]]]}],"returns":[[[["channel"," "],["is"," "],["TextBasedChannel"]]]],"meta":{"line":322,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L322"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"Integration","extends":[[["Base"]]],"construct":{"name":"new Integration","params":[{"name":"data","optional":false,"type":[[["APIGuildIntegration"]]]},{"name":"guild","optional":false,"type":[[["Guild"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"account","description":"Integration account information","type":[[["APIIntegrationAccount"]]],"meta":{"line":18,"file":"Integration.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Integration.ts#L18"}},{"name":"application","description":"The bot/OAuth2 application for discord integrations","type":[[["APIGuildIntegrationApplication"]]],"meta":{"line":22,"file":"Integration.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Integration.ts#L22"}},{"name":"enableEmoticons","description":"Whether emoticons should be synced for this integration (twitch only currently)","type":[[["boolean"]]],"meta":{"line":34,"file":"Integration.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Integration.ts#L34"}},{"name":"enabled","description":"Is this integration enabled","type":[[["boolean"]]],"meta":{"line":26,"file":"Integration.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Integration.ts#L26"}},{"name":"expireBehavior","description":"The behavior of expiring subscribers","type":[[["IntegrationExpireBehavior"]]],"meta":{"line":30,"file":"Integration.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Integration.ts#L30"}},{"name":"expireGracePeriod","description":"The grace period (in days) before expiring subscribers","type":[[["number"]]],"meta":{"line":38,"file":"Integration.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Integration.ts#L38"}},{"name":"guild","description":"The integration guild","type":[[["Guild"]]],"meta":{"line":74,"file":"Integration.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Integration.ts#L74"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"name","description":"Integration name","type":[[["string"]]],"meta":{"line":42,"file":"Integration.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Integration.ts#L42"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"revoked","description":"Has this integration been revoked","type":[[["boolean"]]],"meta":{"line":46,"file":"Integration.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Integration.ts#L46"}},{"name":"roleId","description":"ID that this integration uses for \"subscribers\"","type":[[["string"]]],"meta":{"line":50,"file":"Integration.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Integration.ts#L50"}},{"name":"scopes","description":"The scopes the application has been authorized for","type":[[["Array","<"],["OAuth2Scopes",">"]]],"meta":{"line":54,"file":"Integration.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Integration.ts#L54"}},{"name":"subscriberCount","description":"How many subscribers this integration has","type":[[["number"]]],"meta":{"line":58,"file":"Integration.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Integration.ts#L58"}},{"name":"syncedAt","description":"When this integration was last synced","type":[[["null"," |"],["number"]]],"meta":{"line":62,"file":"Integration.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Integration.ts#L62"}},{"name":"type","description":"Integration type","type":[[["APIGuildIntegrationType"]]],"meta":{"line":66,"file":"Integration.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Integration.ts#L66"}},{"name":"user","description":"User for this integration","type":[[["null"," |"],["User"," |"],["APIUser"]]],"meta":{"line":70,"file":"Integration.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Integration.ts#L70"}}],"methods":[{"name":"delete","params":[{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":95,"file":"Integration.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Integration.ts#L95"}},{"name":"toJSON","returns":[[[["void"]]]],"meta":{"line":88,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L88"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"Interaction","extends":[[["Base"]]],"construct":{"name":"new Interaction","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIInteraction",">"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"applicationId","description":"Id of the application this interaction is for","type":[[["string"]]],"meta":{"line":52,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L52"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"token","description":"Continuation token for responding to the interaction","type":[[["string"]]],"meta":{"line":60,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L60"}},{"name":"type","description":"Type of interaction","type":[[["InteractionType"]]],"meta":{"line":56,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L56"}},{"name":"version","description":"Read-only property, always 1","type":[[["number"]]],"meta":{"line":64,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L64"}}],"methods":[{"name":"isAutoComplete","returns":[[[["this"," "],["is"," "],["AutocompleteInteraction"]]]],"meta":{"line":103,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L103"}},{"name":"isCommand","returns":[[[["this"," "],["is"," "],["CommandInteraction"]]]],"meta":{"line":95,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L95"}},{"name":"isComponent","returns":[[[["this"," "],["is"," "],["ComponentInteraction"]]]],"meta":{"line":99,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L99"}},{"name":"isModalSubmit","returns":[[[["this"," "],["is"," "],["ModalSubmitInteraction"]]]],"meta":{"line":107,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L107"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\napplicationId",": "],["string",","],["\ncreatedAt",": "],["number",","],["\nid",": "],["string",","],["\nrawData",": "],["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","},"],["\ntoken",": "],["string",","],["\ntype",": "],["InteractionType",","],["\nversion",": "],["number\n","}>>"]]]],"meta":{"line":111,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L111"}},{"name":"from","scope":"static","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIInteraction",">"]]]},{"name":"res","optional":true,"type":[[["InteractionResponse"]]]}],"returns":[[[["Interaction"]]]],"meta":{"line":75,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L75"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"InteractionClient","extends":[[["BaseClient","<"],["InteractionClientEvents",">"]]],"construct":{"name":"new InteractionClient","params":[{"name":"publicKey","optional":false,"type":[[["string"]]]},{"name":"options","optional":true,"type":[[["InteractionClientOptions"]]]}]},"props":[{"name":"application","description":"Application of this client","type":[[["null"," |"],["ClientApplication"]]],"meta":{"line":52,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L52"}},{"name":"cache","type":[[["CacheManager"]]],"meta":{"line":95,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L95"}},{"name":"channels","description":"Channels cache","type":[[["ChannelDataManager"]]],"meta":{"line":100,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L100"}},{"name":"emojis","description":"Client emojis","type":[[["EmojiDataManager"]]],"meta":{"line":112,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L112"}},{"name":"guilds","description":"Client guilds","type":[[["GuildDataManager"]]],"meta":{"line":104,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L104"}},{"name":"isReady","description":"Client has ready","type":[[["boolean"]]],"meta":{"line":56,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L56"}},{"name":"options","description":"Client options","type":[[["InteractionClientOptions"]]],"meta":{"line":94,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L94"}},{"name":"publicKey","type":[[["string"]]],"meta":{"line":121,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L121"}},{"name":"readyAt","description":"Time that the bot was ready","type":[[["number"]]],"meta":{"line":60,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L60"}},{"name":"rest","description":"Client rest to make requests","type":[[["Rest"]]],"meta":{"line":44,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L44"}},{"name":"roles","description":"Client roles","type":[[["ClientRoles"]]],"meta":{"line":108,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L108"}},{"name":"threads","description":"Client threads","type":[[["DataCache","<"],["ThreadChannel",">"]]],"meta":{"line":116,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L116"}},{"name":"user","type":[[["null"," |"],["User"]]],"meta":{"line":96,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L96"}},{"name":"users","description":"Client users","type":[[["UserDataManager"]]],"meta":{"line":120,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L120"}},{"name":"webserver","type":[[["WebServer"]]],"meta":{"line":93,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L93"}},{"name":"captureRejectionSymbol","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["captureRejectionSymbol",")"]]],"meta":{"line":405,"file":"events.d.ts"}},{"name":"captureRejections","description":"Sets or gets the default captureRejection value for all emitters.","scope":"static","type":[[["boolean"]]],"meta":{"line":410,"file":"events.d.ts"}},{"name":"defaultMaxListeners","scope":"static","type":[[["number"]]],"meta":{"line":411,"file":"events.d.ts"}},{"name":"errorMonitor","description":"This symbol shall be used to install a listener for only monitoring `'error'`\nevents. Listeners installed using this symbol are called before the regular\n`'error'` listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an\n`'error'` event is emitted, therefore the process will still crash if no\nregular `'error'` listener is installed.","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["errorMonitor",")"]]],"meta":{"line":404,"file":"events.d.ts"}}],"methods":[{"name":"[captureRejectionSymbol]","params":[{"name":"error","optional":false,"type":[[["Error"]]]},{"name":"event","optional":false,"type":[[["string"]]]},{"name":"args","optional":false,"variable":true,"type":[[["Array","<"],["any",">"]]]}],"returns":[[[["void"]]]],"meta":{"line":115,"file":"events.d.ts"}},{"name":"addListener","description":"Alias for `emitter.on(eventName, listener)`.","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["InteractionClient"]]]],"meta":{"line":475,"file":"events.d.ts"}},{"name":"connect","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":193,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L193"}},{"name":"emit","params":[{"name":"event","optional":false,"type":[[["T"]]]},{"name":"args","optional":false,"variable":true,"type":[[["InteractionClientEvents","["],["T","]"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":38,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L38"}},{"name":"eventNames","description":"Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.\n\n```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```","returns":[[[["Array","<"],["string"," |"],["symbol",">"]]]],"meta":{"line":794,"file":"events.d.ts"}},{"name":"getMaxListeners","description":"Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to defaultMaxListeners.","returns":[[[["number"]]]],"meta":{"line":647,"file":"events.d.ts"}},{"name":"listen","description":"Decorator to listen event","params":[{"name":"event","description":"the event for target","optional":false,"type":[[["keyof"," "],["InteractionClientEvents"]]]}],"returns":[[[["("],["target",": "],["any",", "],["name",": "],["any",") => "],["void"]]]],"meta":{"line":83,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L83"}},{"name":"listenerCount","description":"Returns the number of listeners listening to the event named `eventName`.\n\nIf `listener` is provided, it will return how many times the listener\nis found in the list of the listeners of the event.","params":[{"name":"eventName","description":"The name of the event being listened for","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","description":"The event handler function","optional":true,"type":[[["Function"]]]}],"returns":[[[["number"]]]],"meta":{"line":741,"file":"events.d.ts"}},{"name":"listeners","description":"Returns a copy of the array of listeners for the event named `eventName`.\n\n```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["Array","<"],["Function",">"]]]],"meta":{"line":660,"file":"events.d.ts"}},{"name":"off","description":"Alias for `emitter.removeListener()`.","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["InteractionClient"]]]],"meta":{"line":620,"file":"events.d.ts"}},{"name":"on","params":[{"name":"event","optional":false,"type":[[["T"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["InteractionClientEvents","["],["T","]) => "],["any"]]]}],"returns":[[[["InteractionClient"]]]],"meta":{"line":34,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L34"}},{"name":"once","params":[{"name":"event","optional":false,"type":[[["T"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["InteractionClientEvents","["],["T","]) => "],["any"]]]}],"returns":[[[["InteractionClient"]]]],"meta":{"line":36,"file":"Client.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/Client.ts#L36"}},{"name":"prependListener","description":"Adds the `listener` function to the _beginning_ of the listeners array for the\nevent named `eventName`. No checks are made to see if the `listener` has\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\ntimes.\n\n```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"eventName","description":"The name of the event.","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","description":"The callback function","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["InteractionClient"]]]],"meta":{"line":759,"file":"events.d.ts"}},{"name":"prependOnceListener","description":"Adds a **one-time**`listener` function for the event named `eventName` to the _beginning_ of the listeners array. The next time `eventName` is triggered, this\nlistener is removed, and then invoked.\n\n```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"eventName","description":"The name of the event.","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","description":"The callback function","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["InteractionClient"]]]],"meta":{"line":775,"file":"events.d.ts"}},{"name":"rawListeners","description":"Returns a copy of the array of listeners for the event named `eventName`,\nincluding any wrappers (such as those created by `.once()`).\n\n```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["Array","<"],["Function",">"]]]],"meta":{"line":690,"file":"events.d.ts"}},{"name":"removeAllListeners","description":"Removes all listeners, or those of the specified `eventName`.\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the `EventEmitter` instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"event","optional":true,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["InteractionClient"]]]],"meta":{"line":631,"file":"events.d.ts"}},{"name":"removeListener","description":"Removes the specified `listener` from the listener array for the event named`eventName`.\n\n```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```\n\n`removeListener()` will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified `eventName`, then `removeListener()` must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any`removeListener()` or `removeAllListeners()` calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from`emit()` in progress. Subsequent events behave as expected.\n\n```js\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe `emitter.listeners()` method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), `removeListener()` will remove the most\nrecently added instance. In the example the `once('ping')`listener is removed:\n\n```js\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["InteractionClient"]]]],"meta":{"line":615,"file":"events.d.ts"}},{"name":"setMaxListeners","description":"By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"n","optional":false,"type":[[["number"]]]}],"returns":[[[["InteractionClient"]]]],"meta":{"line":641,"file":"events.d.ts"}},{"name":"addAbortListener","description":"Listens once to the `abort` event on the provided `signal`.\n\nListening to the `abort` event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall `e.stopImmediatePropagation()`. Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using `AbortSignal`s in Node.js APIs by solving these\ntwo issues by listening to the event such that `stopImmediatePropagation` does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```","scope":"static","params":[{"name":"signal","optional":false,"type":[[["AbortSignal"]]]},{"name":"resource","optional":false,"type":[[["("],["event",": "],["Event",") => "],["void"]]]}],"returns":[{"types":[[["Disposable"]]],"description":"Disposable that removes the `abort` listener."}],"returnsDescription":"Disposable that removes the `abort` listener.","meta":{"line":394,"file":"events.d.ts"}},{"name":"getEventListeners","description":"Returns a copy of the array of listeners for the event named `eventName`.\n\nFor `EventEmitter`s this behaves exactly the same as calling `.listeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n```js\nconst { getEventListeners, EventEmitter } = require('events');\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  getEventListeners(ee, 'foo'); // [listener]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  getEventListeners(et, 'foo'); // [listener]\n}\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"," |_"],["DOMEventTarget"]]]},{"name":"name","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["Array","<"],["Function",">"]]]],"meta":{"line":312,"file":"events.d.ts"}},{"name":"getMaxListeners","description":"Returns the currently set max amount of listeners.\n\nFor `EventEmitter`s this behaves exactly the same as calling `.getMaxListeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"," |_"],["DOMEventTarget"]]]}],"returns":[[[["number"]]]],"meta":{"line":341,"file":"events.d.ts"}},{"name":"listenerCount","description":"A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.\n\n```js\nconst { EventEmitter, listenerCount } = require('events');\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```","scope":"static","deprecated":"Since v3.2.0 - Use `listenerCount` instead.","params":[{"name":"emitter","description":"The emitter to query","optional":false,"type":[[["EventEmitter"]]]},{"name":"eventName","description":"The event name","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["number"]]]],"meta":{"line":284,"file":"events.d.ts"}},{"name":"on","description":"```js\nconst { on, EventEmitter } = require('events');\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo')) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n```\n\nReturns an `AsyncIterator` that iterates `eventName` events. It will throw\nif the `EventEmitter` emits `'error'`. It removes all listeners when\nexiting the loop. The `value` returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn `AbortSignal` can be used to cancel waiting on events:\n\n```js\nconst { on, EventEmitter } = require('events');\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"]]]},{"name":"eventName","description":"The name of the event being listened for","optional":false,"type":[[["string"]]]},{"name":"options","optional":true,"type":[[["StaticEventEmitterOptions"]]]}],"returns":[{"types":[[["AsyncIterableIterator","<"],["any",">"]]],"description":"that iterates `eventName` events emitted by the `emitter`"}],"returnsDescription":"that iterates `eventName` events emitted by the `emitter`","meta":{"line":263,"file":"events.d.ts"}},{"name":"once","description":"Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special`'error'` event\nsemantics and does not listen to the `'error'` event.\n\n```js\nconst { once, EventEmitter } = require('events');\n\nasync function run() {\n  const ee = new EventEmitter();\n\n  process.nextTick(() => {\n    ee.emit('myevent', 42);\n  });\n\n  const [value] = await once(ee, 'myevent');\n  console.log(value);\n\n  const err = new Error('kaboom');\n  process.nextTick(() => {\n    ee.emit('error', err);\n  });\n\n  try {\n    await once(ee, 'myevent');\n  } catch (err) {\n    console.log('error happened', err);\n  }\n}\n\nrun();\n```\n\nThe special handling of the `'error'` event is only used when `events.once()`is used to wait for another event. If `events.once()` is used to wait for the\n'`error'` event itself, then it is treated as any other kind of event without\nspecial handling:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.log('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```\n\nAn `AbortSignal` can be used to cancel waiting for the event:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["_"],["NodeEventTarget"]]]},{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"options","optional":true,"type":[[["StaticEventEmitterOptions"]]]}],"returns":[[[["Promise","<"],["Array","<"],["any",">>"]]]],"meta":{"line":199,"file":"events.d.ts"}},{"name":"setMaxListeners","description":"```js\nconst {\n  setMaxListeners,\n  EventEmitter\n} = require('events');\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```","scope":"static","params":[{"name":"n","description":"A non-negative number. The maximum number of listeners per `EventTarget` event.","optional":true,"type":[[["number"]]]},{"name":"eventTargets","optional":false,"variable":true,"type":[[["Array","<"],["EventEmitter"," |_"],["DOMEventTarget",">"]]]}],"returns":[[[["void"]]]],"meta":{"line":359,"file":"events.d.ts"}}]},{"name":"InviteGuild","extends":[[["BaseGuild"]]],"construct":{"name":"new InviteGuild","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIInviteGuild"," & "],["Pick","<"],["APIGuild",", "],["welcome","_"],["screen",">>"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"banner","description":"Banner hash","type":[[["null"," |"],["string"]]],"meta":{"line":71,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L71"}},{"name":"description","description":"The description of a guild","type":[[["null"," |"],["string"]]],"meta":{"line":87,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L87"}},{"name":"features","description":"Enabled guild features","type":[[["Array","<"],["GuildFeature",">"]]],"meta":{"line":79,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L79"}},{"name":"icon","description":"Icon hash","type":[[["null"," |"],["string"]]],"meta":{"line":75,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L75"}},{"name":"id","description":"The guild id","type":[[["string"]]],"meta":{"line":103,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L103"}},{"name":"name","description":"Guild name (2-100 characters, excluding trailing and leading whitespace)","type":[[["string"]]],"meta":{"line":99,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L99"}},{"name":"nsfwLevel","description":"Guild NSFW level","type":[[["GuildNSFWLevel"]]],"meta":{"line":196,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L196"}},{"name":"premiumSubscriptionCount","description":"The number of boosts this guild currently has","type":[[["null"," |"],["number"]]],"meta":{"line":200,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L200"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"splash","description":"Splash hash","type":[[["null"," |"],["string"]]],"meta":{"line":83,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L83"}},{"name":"vanityUrlCode","description":"The vanity url code for the guild","type":[[["null"," |"],["string"]]],"meta":{"line":95,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L95"}},{"name":"verificationLevel","description":"Verification level required for the guild","type":[[["null"," |"],["GuildVerificationLevel"]]],"meta":{"line":91,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L91"}},{"name":"welcomeScreen","description":"The welcome screen of a Community guild, shown to new members","type":[[["null"," |"],["WelcomeScreen"]]],"meta":{"line":204,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L204"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APIPartialGuild"]]]}],"returns":[[[["InviteGuild"]]]],"meta":{"line":139,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L139"}},{"name":"bannerURL","params":[{"name":"format","optional":true,"type":[[["GuildBannerFormat"]]]}],"returns":[[[["null"," |"],["string"]]]],"meta":{"line":125,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L125"}},{"name":"iconURL","params":[{"name":"format","optional":true,"type":[[["GuildIconFormat"]]]}],"returns":[[[["null"," |"],["string"]]]],"meta":{"line":110,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L110"}},{"name":"toJSON","returns":[[[["void"]]]],"meta":{"line":88,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L88"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"Member","extends":[[["Base"]]],"construct":{"name":"new Member","params":[{"name":"data","optional":false,"type":[[["APIGuildMember"]]]},{"name":"guild","optional":false,"type":[[["Guild"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"avatar","description":"The member's guild avatar hash","type":[[["undefined"," |"],["null"," |"],["string"]]],"meta":{"line":28,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L28"}},{"name":"communicationDisabledUntil","description":"Timestamp of when the time out will be removed; until then, they cannot interact with the guild","type":[[["undefined"," |"],["null"," |"],["string"]]],"meta":{"line":32,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L32"}},{"name":"deaf","description":"Whether the user is deafened in voice channels","type":[[["boolean"]]],"meta":{"line":44,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L44"}},{"name":"guild","type":[[["Guild"]]],"meta":{"line":65,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L65"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"joinedAt","description":"When the user joined the guild","type":[[["number"]]],"meta":{"line":36,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L36"}},{"name":"mute","description":"Whether the user is muted in voice channels","type":[[["boolean"]]],"meta":{"line":64,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L64"}},{"name":"pending","description":"Whether the user has not yet passed the guild's Membership Screening requirements","type":[[["boolean"]]],"meta":{"line":52,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L52"}},{"name":"permissions","description":"Member permissions bitfield","type":[[["Permissions"]]],"meta":{"line":60,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L60"}},{"name":"premiumSince","description":"When the user started boosting the guild","type":[[["null"," |"],["number"]]],"meta":{"line":48,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L48"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"roles","description":"Member roles","type":[[["Array","<"],["string",">"]]],"meta":{"line":56,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L56"}},{"name":"user","description":"The user this guild member represents","type":[[["null"," |"],["User"]]],"meta":{"line":40,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L40"}}],"methods":[{"name":"addRole","description":"Add a role to this member","params":[{"name":"roleId","description":"Id of role to be added","optional":false,"type":[[["string"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":147,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L147"}},{"name":"avatarURL","description":"The member's guild avatar url","params":[{"name":"options","optional":true,"type":[[["DisplayUserAvatarOptions"]]]}],"returns":[[[["null"," |"],["string"]]]],"meta":{"line":107,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L107"}},{"name":"ban","description":"Ban this member from the guild","params":[{"name":"options","optional":true,"type":[[["KeysToCamelCase","<"],["RESTPutAPIGuildBanJSONBody",">"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":167,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L167"}},{"name":"disableCommunicationUntil","description":"Applies timeout to the member for a specified time","params":[{"name":"timeout","optional":false,"type":[[["number"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["Member",">"]]]],"meta":{"line":184,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L184"}},{"name":"displayAvatarURL","description":"The member's display avatar url","params":[{"name":"options","description":"options for display avatar url","optional":true,"type":[[["DisplayUserAvatarOptions"]]]}],"returns":[[[["null"," |"],["string"]]]],"meta":{"line":135,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L135"}},{"name":"edit","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPatchAPIGuildMemberJSONBody",">"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["Member",">"]]]],"meta":{"line":171,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L171"}},{"name":"removeRole","description":"Remove a role to this member","params":[{"name":"roleId","description":"Id of role to be removed","optional":false,"type":[[["string"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":157,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L157"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\navatar",": "],["undefined"," |"],["null"," |"],["string",","],["\navatarURL",": ("],["options",": "],["DisplayUserAvatarOptions",") => "],["null"," |"],["string",","],["\ncommunicationDisabledUntil",": "],["undefined"," |"],["null"," |"],["string",","],["\ncreatedAt",": "],["number",","],["\ndeaf",": "],["boolean",","],["\nguild",": "],["Guild",","],["\nid",": "],["string",","],["\njoinedAt",": "],["number",","],["\nmute",": "],["boolean",","],["\npending",": "],["boolean",","],["\npermissions",": "],["Permissions",","],["\npremiumSince",": "],["null"," |"],["number",","],["\nrawData",": "],["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","},"],["\nroles",": "],["Array","<"],["string",">,"],["\nuser",": "],["null"," |"],["User\n","}>>"]]]],"meta":{"line":193,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L193"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"MemberDataManager","extends":[[["DataManager","<"],["Member",">"]]],"construct":{"name":"new MemberDataManager","params":[{"name":"options","optional":false,"type":[[["number"," |"],["BaseCacheOptions","<"],["unknown",">"]]]},{"name":"manager","optional":false,"type":[[["CacheManager"]]]},{"name":"guild","optional":false,"type":[[["Guild"]]]}]},"props":[{"name":"cache","type":[[["DataCache","<"],["Member",">"]]],"meta":{"line":53,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L53"}},{"name":"guild","type":[[["Guild"]]],"meta":{"line":12,"file":"MemberDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/MemberDataManager.ts#L12"}},{"name":"manager","type":[[["CacheManager"]]],"meta":{"line":11,"file":"MemberDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/MemberDataManager.ts#L11"}}],"methods":[{"name":"add","params":[{"name":"member","optional":false,"type":[[["Member"]]]},{"name":"replace","optional":true,"default":"true","type":[[["boolean"]]]}],"returns":[[[["any"]]]],"meta":{"line":27,"file":"MemberDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/MemberDataManager.ts#L27"}},{"name":"fetch","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["any",">"]]]],"meta":{"line":31,"file":"MemberDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/MemberDataManager.ts#L31"}},{"name":"get","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["undefined"," |"],["Member"]]]],"meta":{"line":23,"file":"MemberDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/MemberDataManager.ts#L23"}}]},{"name":"Message","extends":[[["Base"]]],"construct":{"name":"new Message","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIMessage",">"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"attachments","description":"Any attached files","type":[[["Array","<"],["APIAttachment",">"]]],"meta":{"line":59,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L59"}},{"name":"channel","description":"The channel the message was sent in","type":[[["null"," |"],["TextBasedChannel"]]],"meta":{"line":39,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L39"}},{"name":"channelId","description":"ID of the channel the message was sent in","type":[[["string"]]],"meta":{"line":35,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L35"}},{"name":"content","description":"Contents of the message","type":[[["string"]]],"meta":{"line":47,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L47"}},{"name":"editedTimestamp","description":"When this message was edited (or null if never)","type":[[["null"," |"],["number"]]],"meta":{"line":93,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L93"}},{"name":"embeds","description":"Any embedded content","type":[[["Array","<"],["APIEmbed",">"]]],"meta":{"line":55,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L55"}},{"name":"flags","description":"Message flags combined as a bitfield","type":[[["MessageFlags"]]],"meta":{"line":89,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L89"}},{"name":"guild","description":"Guild was message has sent","type":[[["null"," |"],["Guild"]]],"meta":{"line":101,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L101"}},{"name":"guildId","description":"Id of guild was message has sent","type":[[["string"]]],"meta":{"line":113,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L113"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"isResolved","description":"This message has resolved","type":[[["boolean"]]],"meta":{"line":105,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L105"}},{"name":"member","description":"The member of this message (only received in guild)","type":[[["null"," |"],["Member"]]],"meta":{"line":117,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L117"}},{"name":"mentionEveryone","description":"Whether this message mentions everyone","type":[[["boolean"]]],"meta":{"line":51,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L51"}},{"name":"nonce","description":"A nonce that can be used for optimistic message sending (up to 25 characters)","type":[[["string"," |"],["number"]]],"meta":{"line":71,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L71"}},{"name":"position","description":"A generally increasing integer (there may be gaps or duplicates) that represents the approximate position of the message in a thread\n\nit can be used to estimate the relative position of the message in a thread in company with total_message_sent on parent thread","type":[[["number"]]],"meta":{"line":85,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L85"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"reactions","description":"Reactions in this message","type":[[["DataCache","<"],["Reaction"," |"],["APIReaction",">"]]],"meta":{"line":109,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L109"}},{"name":"referencedMessage","description":"The message associated with the message_reference","type":[[["null"," |"],["Message"]]],"meta":{"line":63,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L63"}},{"name":"stickerItems","description":"Sent if the message contains stickers","type":[[["Array","<"],["APIStickerItem",">"]]],"meta":{"line":97,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L97"}},{"name":"timestamp","description":"When this message was sent","type":[[["number"]]],"meta":{"line":43,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L43"}},{"name":"type","description":"Type of message","type":[[["MessageType"]]],"meta":{"line":79,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L79"}},{"name":"user","description":"The author of this message (only a valid user in the case where the message is generated by a user or bot user)","type":[[["User"," |"],["APIUser"]]],"meta":{"line":75,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L75"}},{"name":"webhookId","description":"If the message is generated by a webhook, this is the webhook's id","type":[[["string"]]],"meta":{"line":67,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L67"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APIMessage"]]]}],"returns":[[[["Message"]]]],"meta":{"line":255,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L255"}},{"name":"createReaction","description":"Create's a reaction in message","params":[{"name":"emoji","description":"Emoji to create te reactions","optional":false,"type":[[["string"," |"],["Emoji"]]]}],"returns":[[[["Promise","<"],["Reaction"," |"],["APIReaction",">"]]]],"meta":{"line":191,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L191"}},{"name":"delete","description":"Delete the message","params":[{"name":"reason","description":"Reason to delete message","optional":true,"type":[[["string"]]]}],"returns":[[[["undefined"," |"],["Promise","<"],["void",">"]]]],"meta":{"line":220,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L220"}},{"name":"edit","description":"Edit the message","params":[{"name":"content","description":"The new content of message","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":233,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L233"}},{"name":"fetchWebhook","description":"Fetch's the webhook of message","returns":[[[["null"," |"],["Promise","<"],["Webhook",">"]]]],"meta":{"line":247,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L247"}},{"name":"reply","description":"Reply this message","params":[{"name":"content","description":"The content  to reply","optional":false,"type":[[["string"," |"],["MessagePostData"]]]}],"returns":[[[["Promise","<"],["undefined"," |"],["Message",">"]]]],"meta":{"line":159,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L159"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\nattachments",": "],["Array","<"],["APIAttachment",">,"],["\nchannel",": "],["null"," |"],["TextBasedChannel",","],["\nchannelId",": "],["string",","],["\ncontent",": "],["string",","],["\ncreatedAt",": "],["number",","],["\neditedTimestamp",": "],["null"," |"],["number",","],["\nembeds",": "],["Array","<"],["APIEmbed",">,"],["\nflags",": "],["MessageFlags",","],["\nguild",": "],["null"," |"],["Guild",","],["\nguildId",": "],["undefined"," |"],["string",","],["\nid",": "],["string",","],["\nisResolved",": "],["boolean",","],["\nmentionEveryone",": "],["boolean",","],["\nnonce",": "],["undefined"," |"],["string"," |"],["number",","],["\nposition",": "],["number",","],["\nrawData",": "],["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","},"],["\nreactions",": "],["DataCache","<"],["Reaction"," |"],["APIReaction",">,"],["\nreferencedMessage",": "],["null"," |"],["Message",","],["\nstickerItems",": "],["undefined"," |"],["Array","<"],["APIStickerItem",">,"],["\ntimestamp",": "],["number",","],["\ntype",": "],["MessageType",","],["\nuser",": "],["User"," |"],["APIUser",","],["\nwebhookId",": "],["undefined"," |"],["string\n","}>>"]]]],"meta":{"line":289,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L289"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"MessageApplicationCommandInteractionData","extends":[[["Base"]]],"construct":{"name":"new MessageApplicationCommandInteractionData","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIMessageApplicationCommandInteractionData",">"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}}],"methods":[{"name":"toJSON","returns":[[[["void"]]]],"meta":{"line":88,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L88"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"MessageDataManager","extends":[[["DataManager","<"],["Message",">"]]],"construct":{"name":"new MessageDataManager","params":[{"name":"options","optional":false,"type":[[["number"," |"],["BaseCacheOptions","<"],["unknown",">"]]]},{"name":"manager","optional":false,"type":[[["CacheManager"]]]},{"name":"channel","optional":false,"type":[[["TextBasedChannel"]]]}]},"props":[{"name":"cache","type":[[["DataCache","<"],["Message",">"]]],"meta":{"line":53,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L53"}},{"name":"channel","type":[[["TextBasedChannel"]]],"meta":{"line":16,"file":"MessageDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/MessageDataManager.ts#L16"}},{"name":"manager","type":[[["CacheManager"]]],"meta":{"line":15,"file":"MessageDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/MessageDataManager.ts#L15"}}],"methods":[{"name":"add","params":[{"name":"item","optional":false,"type":[[["Message"]]]},{"name":"replace","optional":true,"default":"true","type":[[["boolean"]]]},{"name":"id","optional":true,"type":[[["string"]]]}],"returns":[[[["any"]]]],"meta":{"line":120,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L120"}},{"name":"fetch","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":48,"file":"MessageDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/MessageDataManager.ts#L48"}},{"name":"get","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["undefined"," |"],["Message"]]]],"meta":{"line":44,"file":"MessageDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/MessageDataManager.ts#L44"}}]},{"name":"MessageFlags","extends":[[["BitField","<"],["MFlags",", ("],["typeof"," "],["MFlags",")>"]]],"construct":{"name":"new MessageFlags","params":[{"name":"flags","optional":false,"type":[[["MessageFlags"]]]}]},"props":[{"name":"flags","type":[[["("],["typeof"," "],["MessageFlags",")"]]],"meta":{"line":5,"file":"BitField.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/BitField.ts#L5"}},{"name":"raw","type":[[["MessageFlags"]]],"meta":{"line":5,"file":"BitField.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/BitField.ts#L5"}},{"name":"Flags","scope":"static","default":"MFlags","type":[[["("],["typeof"," "],["MessageFlags",")"]]],"meta":{"line":28,"file":"Message.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Message.ts#L28"}}],"methods":[{"name":"has","params":[{"name":"bits","optional":false,"type":[[["MessageFlags"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":6,"file":"BitField.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/BitField.ts#L6"}},{"name":"toArray","returns":[[[["Array","<"],["string",">"]]]],"meta":{"line":10,"file":"BitField.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/BitField.ts#L10"}}]},{"name":"ModalSubmitInteraction","extends":[[["ReplyableInteraction"]]],"construct":{"name":"new ModalSubmitInteraction","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIModalSubmitInteraction",">"]]]},{"name":"httpResponse","optional":true,"type":[[["InteractionResponse"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"_http","type":[[["InteractionResponse"]]],"meta":{"line":126,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L126"}},{"name":"acknowledged","description":"The interaction is acknowledged","type":[[["boolean"]]],"meta":{"line":134,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L134"}},{"name":"applicationId","description":"Id of the application this interaction is for","type":[[["string"]]],"meta":{"line":52,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L52"}},{"name":"channel","description":"The channel id it was sent from","type":[[["null"," |"],["Channel"," |"],["Object"]]],"meta":{"line":705,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L705"}},{"name":"channelId","description":"The channel id it was sent from","deprecated":"use `channel.id` instead","type":[[["string"]]],"meta":{"line":701,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L701"}},{"name":"components","description":"A list of child components","type":[[["Array","<"],["ModalSubmitActionRowComponent",">"]]],"meta":{"line":716,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L716"}},{"name":"customId","description":"A developer-defined identifier for the component, max 100 characters","type":[[["string"]]],"meta":{"line":712,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L712"}},{"name":"guildLocale","description":"The guild's preferred locale, if invoked in a guild","type":[[["null"," |"],["string"]]],"meta":{"line":692,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L692"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"isHTTP","description":"This interaction is received for webserver","type":[[["boolean"]]],"meta":{"line":130,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L130"}},{"name":"locale","description":"The selected language of the invoking user","type":[[["string"]]],"meta":{"line":688,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L688"}},{"name":"message","description":"For components, the message they were attached to","type":[[["null"," |"],["Message"]]],"meta":{"line":696,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L696"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"token","description":"Continuation token for responding to the interaction","type":[[["string"]]],"meta":{"line":60,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L60"}},{"name":"type","description":"Type of interaction","type":[[["InteractionType"]]],"meta":{"line":56,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L56"}},{"name":"version","description":"Read-only property, always 1","type":[[["number"]]],"meta":{"line":64,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L64"}}],"methods":[{"name":"createFollowUP","description":"Create a followup message for the original reply of this interaction","params":[{"name":"content","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":266,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L266"}},{"name":"defer","description":"Respond to this interaction with defer","params":[{"name":"flags","optional":true,"type":[[["InteractionFlags"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":148,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L148"}},{"name":"deferUpdate","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":737,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L737"}},{"name":"deleteFollowUP","description":"Delete a followup message","params":[{"name":"messageId","description":"The id of the followup to be deleted","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":286,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L286"}},{"name":"deleteOriginalReply","description":"Delete the original reply of this interaction","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":203,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L203"}},{"name":"deleteReply","description":"Delete a interaction reply","params":[{"name":"messageId","description":"id of the reply to be deleted","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":184,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L184"}},{"name":"editFollowUP","description":"Edit a followup message","params":[{"name":"messageId","description":"The id of the followup to be edited","optional":false,"type":[[["string"]]]},{"name":"content","description":"The new content of followup","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":300,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L300"}},{"name":"editOriginalReply","description":"Edit the original reply of this interaction","params":[{"name":"content","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":257,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L257"}},{"name":"editParent","params":[{"name":"data","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":757,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L757"}},{"name":"editReply","description":"Edit a interaction reply","params":[{"name":"messageId","optional":false,"type":[[["string"]]]},{"name":"content","optional":false,"type":[[["string"," |"],["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":243,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L243"}},{"name":"getFollowUP","description":"Get a followup message","params":[{"name":"messageId","description":"The id of the followup","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":329,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L329"}},{"name":"getOriginalReply","description":"Get the original reply of this interaction","returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":348,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L348"}},{"name":"isAutoComplete","returns":[[[["this"," "],["is"," "],["AutocompleteInteraction"]]]],"meta":{"line":103,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L103"}},{"name":"isCommand","returns":[[[["this"," "],["is"," "],["CommandInteraction"]]]],"meta":{"line":95,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L95"}},{"name":"isComponent","returns":[[[["this"," "],["is"," "],["ComponentInteraction"]]]],"meta":{"line":99,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L99"}},{"name":"isModalSubmit","returns":[[[["this"," "],["is"," "],["ModalSubmitInteraction"]]]],"meta":{"line":107,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L107"}},{"name":"reply","description":"Respond to this interaction","params":[{"name":"content","description":"The content of response","optional":false,"type":[[["string"," |"],["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":211,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L211"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\nacknowledged",": "],["boolean",","],["\napplicationId",": "],["string",","],["\nchannel",": "],["null"," |"],["Channel"," |"],["Object",","],["\nchannelId",": "],["undefined"," |"],["string",","],["\ncreatedAt",": "],["number",","],["\nguildLocale",": "],["null"," |"],["string",","],["\nid",": "],["string",","],["\nlocale",": "],["string",","],["\nmessage",": "],["null"," |"],["Message",","],["\nrawData",": "],["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","},"],["\ntoken",": "],["string",","],["\ntype",": "],["InteractionType",","],["\nversion",": "],["number\n","}>>"]]]],"meta":{"line":774,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L774"}},{"name":"from","scope":"static","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIInteraction",">"]]]},{"name":"res","optional":true,"type":[[["InteractionResponse"]]]}],"returns":[[[["Interaction"]]]],"meta":{"line":75,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L75"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"PermissionOverwrite","extends":[[["Base"]]],"construct":{"name":"new PermissionOverwrite","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIOverwrite",">"]]]},{"name":"channel","optional":false,"type":[[["GuildChannel"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"channel","type":[[["GuildChannel"]]],"meta":{"line":31,"file":"Permission.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Permission.ts#L31"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"permissions","readonly":true,"type":[[["Readonly","<"],["Permissions",">"]]],"meta":{"line":27,"file":"Permission.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Permission.ts#L27"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"type","type":[[["OverwriteType"]]],"meta":{"line":28,"file":"Permission.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Permission.ts#L28"}}],"methods":[{"name":"toJSON","returns":[[[["void"]]]],"meta":{"line":88,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L88"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"Permissions","extends":[[["BitField","<"],["bigint",", ("],["typeof"," "],["PermissionFlagsBits",")>"]]],"construct":{"name":"new Permissions","params":[{"name":"allow","optional":false,"type":[[["bigint"]]]},{"name":"deny","optional":true,"type":[[["bigint"]]]}]},"props":[{"name":"allow","type":[[["bigint"]]],"meta":{"line":12,"file":"Permission.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Permission.ts#L12"}},{"name":"deny","type":[[["bigint"]]],"meta":{"line":12,"file":"Permission.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Permission.ts#L12"}},{"name":"flags","type":[[["{"],["\nAddReactions",": "],["bigint",","],["\nAdministrator",": "],["bigint",","],["\nAttachFiles",": "],["bigint",","],["\nBanMembers",": "],["bigint",","],["\nChangeNickname",": "],["bigint",","],["\nConnect",": "],["bigint",","],["\nCreateEvents",": "],["bigint",","],["\nCreateGuildExpressions",": "],["bigint",","],["\nCreateInstantInvite",": "],["bigint",","],["\nCreatePrivateThreads",": "],["bigint",","],["\nCreatePublicThreads",": "],["bigint",","],["\nDeafenMembers",": "],["bigint",","],["\nEmbedLinks",": "],["bigint",","],["\nKickMembers",": "],["bigint",","],["\nManageChannels",": "],["bigint",","],["\nManageEmojisAndStickers",": "],["bigint",","],["\nManageEvents",": "],["bigint",","],["\nManageGuild",": "],["bigint",","],["\nManageGuildExpressions",": "],["bigint",","],["\nManageMessages",": "],["bigint",","],["\nManageNicknames",": "],["bigint",","],["\nManageRoles",": "],["bigint",","],["\nManageThreads",": "],["bigint",","],["\nManageWebhooks",": "],["bigint",","],["\nMentionEveryone",": "],["bigint",","],["\nModerateMembers",": "],["bigint",","],["\nMoveMembers",": "],["bigint",","],["\nMuteMembers",": "],["bigint",","],["\nPrioritySpeaker",": "],["bigint",","],["\nReadMessageHistory",": "],["bigint",","],["\nRequestToSpeak",": "],["bigint",","],["\nSendMessages",": "],["bigint",","],["\nSendMessagesInThreads",": "],["bigint",","],["\nSendTTSMessages",": "],["bigint",","],["\nSendVoiceMessages",": "],["bigint",","],["\nSpeak",": "],["bigint",","],["\nStream",": "],["bigint",","],["\nUseApplicationCommands",": "],["bigint",","],["\nUseEmbeddedActivities",": "],["bigint",","],["\nUseExternalEmojis",": "],["bigint",","],["\nUseExternalSounds",": "],["bigint",","],["\nUseExternalStickers",": "],["bigint",","],["\nUseSoundboard",": "],["bigint",","],["\nUseVAD",": "],["bigint",","],["\nViewAuditLog",": "],["bigint",","],["\nViewChannel",": "],["bigint",","],["\nViewCreatorMonetizationAnalytics",": "],["bigint",","],["\nViewGuildInsights",": "],["bigint\n","}"]]],"meta":{"line":5,"file":"BitField.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/BitField.ts#L5"}},{"name":"raw","type":[[["bigint"]]],"meta":{"line":5,"file":"BitField.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/BitField.ts#L5"}},{"name":"All","scope":"static","type":[[["bigint"]]],"meta":{"line":20,"file":"Permission.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Permission.ts#L20"}},{"name":"Default","scope":"static","type":[[["bigint"]]],"meta":{"line":19,"file":"Permission.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Permission.ts#L19"}},{"name":"Flags","scope":"static","default":"PermissionFlagsBits","type":[[["{"],["\nAddReactions",": "],["bigint",","],["\nAdministrator",": "],["bigint",","],["\nAttachFiles",": "],["bigint",","],["\nBanMembers",": "],["bigint",","],["\nChangeNickname",": "],["bigint",","],["\nConnect",": "],["bigint",","],["\nCreateEvents",": "],["bigint",","],["\nCreateGuildExpressions",": "],["bigint",","],["\nCreateInstantInvite",": "],["bigint",","],["\nCreatePrivateThreads",": "],["bigint",","],["\nCreatePublicThreads",": "],["bigint",","],["\nDeafenMembers",": "],["bigint",","],["\nEmbedLinks",": "],["bigint",","],["\nKickMembers",": "],["bigint",","],["\nManageChannels",": "],["bigint",","],["\nManageEmojisAndStickers",": "],["bigint",","],["\nManageEvents",": "],["bigint",","],["\nManageGuild",": "],["bigint",","],["\nManageGuildExpressions",": "],["bigint",","],["\nManageMessages",": "],["bigint",","],["\nManageNicknames",": "],["bigint",","],["\nManageRoles",": "],["bigint",","],["\nManageThreads",": "],["bigint",","],["\nManageWebhooks",": "],["bigint",","],["\nMentionEveryone",": "],["bigint",","],["\nModerateMembers",": "],["bigint",","],["\nMoveMembers",": "],["bigint",","],["\nMuteMembers",": "],["bigint",","],["\nPrioritySpeaker",": "],["bigint",","],["\nReadMessageHistory",": "],["bigint",","],["\nRequestToSpeak",": "],["bigint",","],["\nSendMessages",": "],["bigint",","],["\nSendMessagesInThreads",": "],["bigint",","],["\nSendTTSMessages",": "],["bigint",","],["\nSendVoiceMessages",": "],["bigint",","],["\nSpeak",": "],["bigint",","],["\nStream",": "],["bigint",","],["\nUseApplicationCommands",": "],["bigint",","],["\nUseEmbeddedActivities",": "],["bigint",","],["\nUseExternalEmojis",": "],["bigint",","],["\nUseExternalSounds",": "],["bigint",","],["\nUseExternalStickers",": "],["bigint",","],["\nUseSoundboard",": "],["bigint",","],["\nUseVAD",": "],["bigint",","],["\nViewAuditLog",": "],["bigint",","],["\nViewChannel",": "],["bigint",","],["\nViewCreatorMonetizationAnalytics",": "],["bigint",","],["\nViewGuildInsights",": "],["bigint\n","}"]]],"meta":{"line":18,"file":"Permission.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Permission.ts#L18"}}],"methods":[{"name":"has","params":[{"name":"bits","optional":false,"type":[[["bigint"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":6,"file":"BitField.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/BitField.ts#L6"}},{"name":"toArray","returns":[[[["Array","<"],["string",">"]]]],"meta":{"line":10,"file":"BitField.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/BitField.ts#L10"}}]},{"name":"PluginManager","construct":{"name":"new PluginManager","params":[{"name":"client","optional":false,"type":[[["Client"]]]}]},"props":[{"name":"client","type":[[["Client"]]],"meta":{"line":52,"file":"PluginManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/PluginManager.ts#L52"}},{"name":"plugins","type":[[["Map","<"],["string",", "],["PluginObject",">"]]],"meta":{"line":50,"file":"PluginManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/PluginManager.ts#L50"}},{"name":"resources","type":[[["Array","<"],["ResourceObject",">"]]],"meta":{"line":49,"file":"PluginManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/PluginManager.ts#L49"}}],"methods":[{"name":"addProperty","params":[{"name":"key","optional":false,"type":[[["string"]]]},{"name":"value","optional":false,"type":[[["T"]]]}],"returns":[[[["T"]]]],"meta":{"line":72,"file":"PluginManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/PluginManager.ts#L72"}},{"name":"emit","params":[{"name":"event","optional":false,"type":[[["string"]]]},{"name":"args","optional":false,"variable":true,"type":[[["Array","<"],["any",">"]]]}],"returns":[[[["void"]]]],"meta":{"line":76,"file":"PluginManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/PluginManager.ts#L76"}},{"name":"extends","description":"Extends a resource","params":[{"name":"resourceName","description":"resource to be extended","optional":false,"type":[[["string"]]]},{"name":"replacer","description":"replacer to extend resource","optional":false,"type":[[["("],["x",": "],["T",") => "],["any"]]]}],"returns":[[[["void"]]]],"meta":{"line":97,"file":"PluginManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/PluginManager.ts#L97"}},{"name":"extendsMultiple","params":[{"name":"resources","description":"resources names to be extended's","optional":false,"type":[[["Array","<"],["string",">"]]]},{"name":"replacer","description":"replacer to extends resources","optional":false,"type":[[["("],["x",": "],["T",") => "],["any"]]]}],"returns":[[[["void"]]]],"meta":{"line":134,"file":"PluginManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/PluginManager.ts#L134"}},{"name":"getResourceInPack","params":[{"name":"resourceName","optional":false,"type":[[["string"]]]}],"returns":[[[["T"]]]],"meta":{"line":84,"file":"PluginManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/PluginManager.ts#L84"}},{"name":"getResourcePack","params":[{"name":"resourceName","optional":false,"type":[[["string"]]]}],"returns":[[[["ResourceObject"]]]],"meta":{"line":80,"file":"PluginManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/PluginManager.ts#L80"}},{"name":"load","params":[{"name":"pluginFn","optional":false,"type":[[["PluginFn"]]]}],"returns":[[[["void"]]]],"meta":{"line":157,"file":"PluginManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/PluginManager.ts#L157"}},{"name":"override","params":[{"name":"path","description":"Path of file to be override","optional":false,"type":[[["string"]]]},{"name":"replacer","description":"replacer function to replace file","optional":false,"type":[[["("],["x",": "],["T",") => "],["any"]]]}],"returns":[[[["void"]]]],"meta":{"line":145,"file":"PluginManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/PluginManager.ts#L145"}}]},{"name":"Reaction","construct":{"name":"new Reaction","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIReaction",">"]]]}]},"props":[{"name":"client","type":[[["AnyClient"]]],"meta":{"line":130,"file":"Emoji.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Emoji.ts#L130"}},{"name":"count","description":"Times this emoji has been used to react","type":[[["number"]]],"meta":{"line":125,"file":"Emoji.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Emoji.ts#L125"}},{"name":"emoji","description":"Emoji information","type":[[["Emoji"]]],"meta":{"line":121,"file":"Emoji.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Emoji.ts#L121"}},{"name":"me","description":"Whether the current user reacted using this emoji","type":[[["boolean"]]],"meta":{"line":117,"file":"Emoji.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Emoji.ts#L117"}},{"name":"users","description":"Users reacted","type":[[["UserDataManager"]]],"meta":{"line":129,"file":"Emoji.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Emoji.ts#L129"}}]},{"name":"ReplyableInteraction","extends":[[["Interaction"]]],"construct":{"name":"new ReplyableInteraction","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIInteraction",">"]]]},{"name":"httpResponse","optional":true,"type":[[["InteractionResponse"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"_http","type":[[["InteractionResponse"]]],"meta":{"line":126,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L126"}},{"name":"acknowledged","description":"The interaction is acknowledged","type":[[["boolean"]]],"meta":{"line":134,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L134"}},{"name":"applicationId","description":"Id of the application this interaction is for","type":[[["string"]]],"meta":{"line":52,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L52"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"isHTTP","description":"This interaction is received for webserver","type":[[["boolean"]]],"meta":{"line":130,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L130"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"token","description":"Continuation token for responding to the interaction","type":[[["string"]]],"meta":{"line":60,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L60"}},{"name":"type","description":"Type of interaction","type":[[["InteractionType"]]],"meta":{"line":56,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L56"}},{"name":"version","description":"Read-only property, always 1","type":[[["number"]]],"meta":{"line":64,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L64"}}],"methods":[{"name":"createFollowUP","description":"Create a followup message for the original reply of this interaction","params":[{"name":"content","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":266,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L266"}},{"name":"defer","description":"Respond to this interaction with defer","params":[{"name":"flags","optional":true,"type":[[["InteractionFlags"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":148,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L148"}},{"name":"deleteFollowUP","description":"Delete a followup message","params":[{"name":"messageId","description":"The id of the followup to be deleted","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":286,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L286"}},{"name":"deleteOriginalReply","description":"Delete the original reply of this interaction","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":203,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L203"}},{"name":"deleteReply","description":"Delete a interaction reply","params":[{"name":"messageId","description":"id of the reply to be deleted","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":184,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L184"}},{"name":"editFollowUP","description":"Edit a followup message","params":[{"name":"messageId","description":"The id of the followup to be edited","optional":false,"type":[[["string"]]]},{"name":"content","description":"The new content of followup","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":300,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L300"}},{"name":"editOriginalReply","description":"Edit the original reply of this interaction","params":[{"name":"content","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":257,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L257"}},{"name":"editReply","description":"Edit a interaction reply","params":[{"name":"messageId","optional":false,"type":[[["string"]]]},{"name":"content","optional":false,"type":[[["string"," |"],["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":243,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L243"}},{"name":"getFollowUP","description":"Get a followup message","params":[{"name":"messageId","description":"The id of the followup","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":329,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L329"}},{"name":"getOriginalReply","description":"Get the original reply of this interaction","returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":348,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L348"}},{"name":"isAutoComplete","returns":[[[["this"," "],["is"," "],["AutocompleteInteraction"]]]],"meta":{"line":103,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L103"}},{"name":"isCommand","returns":[[[["this"," "],["is"," "],["CommandInteraction"]]]],"meta":{"line":95,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L95"}},{"name":"isComponent","returns":[[[["this"," "],["is"," "],["ComponentInteraction"]]]],"meta":{"line":99,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L99"}},{"name":"isModalSubmit","returns":[[[["this"," "],["is"," "],["ModalSubmitInteraction"]]]],"meta":{"line":107,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L107"}},{"name":"reply","description":"Respond to this interaction","params":[{"name":"content","description":"The content of response","optional":false,"type":[[["string"," |"],["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":211,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L211"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\nacknowledged",": "],["boolean",","],["\napplicationId",": "],["string",","],["\ncreatedAt",": "],["number",","],["\nid",": "],["string",","],["\nrawData",": "],["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","},"],["\ntoken",": "],["string",","],["\ntype",": "],["InteractionType",","],["\nversion",": "],["number\n","}>>"]]]],"meta":{"line":372,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L372"}},{"name":"from","scope":"static","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIInteraction",">"]]]},{"name":"res","optional":true,"type":[[["InteractionResponse"]]]}],"returns":[[[["Interaction"]]]],"meta":{"line":75,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L75"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"RequestError","extends":[[["Error"]]],"construct":{"name":"new RequestError","params":[{"name":"router","optional":false,"type":[[["string"]]]},{"name":"method","optional":false,"type":[[["string"]]]},{"name":"message","optional":false,"type":[[["string"]]]},{"name":"name","optional":false,"type":[[["string"]]]},{"name":"code","optional":false,"type":[[["number"]]]}]},"props":[{"name":"cause","type":[[["unknown"]]],"meta":{"line":26,"file":"lib.es2022.error.d.ts"}},{"name":"code","type":[[["number"]]],"meta":{"line":20,"file":"index.d.ts"}},{"name":"message","type":[[["string"]]],"meta":{"line":18,"file":"index.d.ts"}},{"name":"method","type":[[["string"]]],"meta":{"line":17,"file":"index.d.ts"}},{"name":"name","type":[[["string"]]],"meta":{"line":19,"file":"index.d.ts"}},{"name":"router","type":[[["string"]]],"meta":{"line":16,"file":"index.d.ts"}},{"name":"stack","type":[[["string"]]],"meta":{"line":1055,"file":"lib.es5.d.ts"}},{"name":"prepareStackTrace","scope":"static","type":[[["("],["err",": "],["Error",", "],["stackTraces",": "],["Array","<"],["CallSite",">) => "],["any"]]],"meta":{"line":27,"file":"globals.d.ts"}},{"name":"stackTraceLimit","scope":"static","type":[[["number"]]],"meta":{"line":29,"file":"globals.d.ts"}}],"methods":[{"name":"captureStackTrace","description":"Create .stack property on a target object","scope":"static","params":[{"name":"targetObject","optional":false,"type":[[["object"]]]},{"name":"constructorOpt","optional":true,"type":[[["Function"]]]}],"returns":[[[["void"]]]],"meta":{"line":20,"file":"globals.d.ts"}}]},{"name":"Role","extends":[[["Base"]]],"construct":{"name":"new Role","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIRole",">"]]]},{"name":"guild","optional":false,"type":[[["Guild"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"color","description":"Integer representation of hexadecimal color code","type":[[["number"]]],"meta":{"line":21,"file":"Role.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Role.ts#L21"}},{"name":"guild","type":[[["Guild"]]],"meta":{"line":55,"file":"Role.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Role.ts#L55"}},{"name":"hoist","description":"If this role is pinned in the user listing","type":[[["boolean"]]],"meta":{"line":25,"file":"Role.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Role.ts#L25"}},{"name":"icon","description":"Role icon hash","type":[[["null"," |"],["string"]]],"meta":{"line":29,"file":"Role.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Role.ts#L29"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"managed","description":"Whether this role is managed by an integration","type":[[["boolean"]]],"meta":{"line":45,"file":"Role.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Role.ts#L45"}},{"name":"mentionable","description":"Whether this role is mentionable","type":[[["boolean"]]],"meta":{"line":49,"file":"Role.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Role.ts#L49"}},{"name":"name","description":"Role name","type":[[["string"]]],"meta":{"line":17,"file":"Role.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Role.ts#L17"}},{"name":"permissions","description":"Permission bit set","type":[[["Permissions"]]],"meta":{"line":41,"file":"Role.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Role.ts#L41"}},{"name":"position","description":"Position of this role","type":[[["number"]]],"meta":{"line":37,"file":"Role.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Role.ts#L37"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"tags","description":"The tags this role has","type":[[["APIRoleTags"]]],"meta":{"line":53,"file":"Role.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Role.ts#L53"}},{"name":"unicodeEmoji","description":"Role unicode emoji","type":[[["null"," |"],["string"]]],"meta":{"line":33,"file":"Role.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Role.ts#L33"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APIRole"]]]}],"returns":[[[["Role"]]]],"meta":{"line":61,"file":"Role.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Role.ts#L61"}},{"name":"edit","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPatchAPIGuildRoleJSONBody",">"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["any",">"]]]],"meta":{"line":80,"file":"Role.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Role.ts#L80"}},{"name":"setPosition","params":[{"name":"newPosition","optional":false,"type":[[["number"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["any",">"]]]],"meta":{"line":76,"file":"Role.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Role.ts#L76"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\ncolor",": "],["number",","],["\ncreatedAt",": "],["number",","],["\nguild",": "],["Guild",","],["\nhoist",": "],["boolean",","],["\nicon",": "],["undefined"," |"],["null"," |"],["string",","],["\nid",": "],["string",","],["\nmanaged",": "],["boolean",","],["\nmentionable",": "],["boolean",","],["\nname",": "],["string",","],["\npermissions",": "],["Permissions",","],["\nposition",": "],["number",","],["\nrawData",": "],["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","},"],["\ntags",": "],["undefined"," |"],["APIRoleTags",","],["\nunicodeEmoji",": "],["undefined"," |"],["null"," |"],["string\n","}>>"]]]],"meta":{"line":95,"file":"Role.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Role.ts#L95"}},{"name":"toString","returns":[[[["unknown"]]]],"meta":{"line":91,"file":"Role.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Role.ts#L91"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"RoleDataManager","extends":[[["DataManager","<"],["Role"," |"],["APIRole",">"]]],"construct":{"name":"new RoleDataManager","params":[{"name":"options","optional":false,"type":[[["number"," |"],["BaseCacheOptions","<"],["unknown",">"]]]},{"name":"manager","optional":false,"type":[[["CacheManager"]]]},{"name":"guild","optional":false,"type":[[["Guild"]]]}]},"props":[{"name":"cache","type":[[["DataCache","<"],["Role"," |"],["APIRole",">"]]],"meta":{"line":53,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L53"}},{"name":"guild","type":[[["Guild"]]],"meta":{"line":20,"file":"RoleDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/RoleDataManager.ts#L20"}},{"name":"manager","type":[[["CacheManager"]]],"meta":{"line":19,"file":"RoleDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/RoleDataManager.ts#L19"}}],"methods":[{"name":"_resolve","params":[{"name":"role","optional":false,"type":[[["Role"," |"],["APIRole"]]]},{"name":"addInCache","optional":true,"default":"false","type":[[["boolean"]]]}],"returns":[[[["Role"," |"],["APIRole"]]]],"meta":{"line":46,"file":"RoleDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/RoleDataManager.ts#L46"}},{"name":"add","params":[{"name":"role","optional":false,"type":[[["Role"," |"],["APIRole"]]]},{"name":"replace","optional":true,"default":"true","type":[[["boolean"]]]}],"returns":[[[["any"]]]],"meta":{"line":32,"file":"RoleDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/RoleDataManager.ts#L32"}},{"name":"fetch","params":[{"name":"id","description":"role id","optional":false,"type":[[["string"]]]},{"name":"guild","description":"Guild object or Guild Id","optional":false,"type":[[["string"," |"],["Guild"," |"],["APIGuild"]]]}],"returns":[[[["Promise","<"],["any",">"]]]],"meta":{"line":66,"file":"RoleDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/RoleDataManager.ts#L66"}},{"name":"forge","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["any"]]]],"meta":{"line":36,"file":"RoleDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/RoleDataManager.ts#L36"}},{"name":"get","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["undefined"," |"],["Role"," |"],["APIRole"]]]],"meta":{"line":28,"file":"RoleDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/RoleDataManager.ts#L28"}}]},{"name":"ScheduledEvent","extends":[[["Base"]]],"construct":{"name":"new ScheduledEvent","params":[{"name":"data","optional":false,"type":[[["APIGuildScheduledEvent"]]]},{"name":"guild","optional":false,"type":[[["BaseGuild"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"channelId","description":"The channel id in which the scheduled event will be hosted, or null if entity type is EXTERNAL The channel id in which the scheduled event will be hosted, or null if entity type is EXTERNAL The channel id in which the scheduled event will be hosted, or null if entity type is EXTERNAL","type":[[["null"," |"],["string"]]],"meta":{"line":1002,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L1002"}},{"name":"creator","description":"The user that created the scheduled event","type":[[["null"," |"],["User"," |"],["APIUser"]]],"meta":{"line":1006,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L1006"}},{"name":"creatorId","description":"The id of the user that created the scheduled event","type":[[["null"," |"],["string"]]],"meta":{"line":1010,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L1010"}},{"name":"description","description":"The description of the scheduled event","type":[[["null"," |"],["string"]]],"meta":{"line":1014,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L1014"}},{"name":"entityId","description":"The id of the hosting entity associated with the scheduled event","type":[[["null"," |"],["string"]]],"meta":{"line":1018,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L1018"}},{"name":"entityMetadata","description":"The entity metadata for the scheduled event The entity metadata for the scheduled event The entity metadata for the scheduled event","type":[[["null"," |"],["APIGuildScheduledEventEntityMetadata"]]],"meta":{"line":1026,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L1026"}},{"name":"entityType","description":"The type of hosting entity associated with the scheduled event","type":[[["GuildScheduledEventEntityType"]]],"meta":{"line":1022,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L1022"}},{"name":"guild","description":"The guild of scheduled event","type":[[["BaseGuild"]]],"meta":{"line":1042,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L1042"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"privacyLevel","description":"The privacy level of the scheduled event","type":[[["GuildOnly"]]],"meta":{"line":1030,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L1030"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"status","description":"The status of the scheduled event","type":[[["GuildScheduledEventStatus"]]],"meta":{"line":1038,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L1038"}},{"name":"userCount","description":"The number of users subscribed to the scheduled event","type":[[["null"," |"],["number"]]],"meta":{"line":1034,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L1034"}}],"methods":[{"name":"toJSON","returns":[[[["void"]]]],"meta":{"line":88,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L88"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"SelectMenuInteractionData","construct":{"name":"new SelectMenuInteractionData","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIMessageSelectMenuInteractionData",">"]]]},{"name":"guild","optional":true,"type":[[["null"," |"],["Guild"]]]}]},"props":[{"name":"componentType","description":"The type of the component","type":[[["ComponentType"]]],"meta":{"line":497,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L497"}},{"name":"customId","description":"The custom_id of the component","type":[[["string"]]],"meta":{"line":501,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L501"}},{"name":"resolved","description":"Resolved data of the select menu","type":[[["null"," |"],["APIInteractionDataResolved"]]],"meta":{"line":505,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L505"}},{"name":"values","description":"Values of the select menu","type":[[["SelectMenuInteractionValues"]]],"meta":{"line":509,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L509"}}]},{"name":"SelectMenuInteractionValues","construct":{"name":"new SelectMenuInteractionValues","params":[{"name":"resolved","optional":false,"type":[[["null"," |"],["APIInteractionDataResolved"]]]},{"name":"values","optional":false,"type":[[["Array","<"],["string",">"]]]},{"name":"_client","optional":false,"type":[[["AnyClient"]]]},{"name":"guild","optional":true,"type":[[["null"," |"],["Guild"]]]}]},"props":[{"name":"#resolved","access":"private","type":[[["null"," |"],["APIInteractionDataResolved"]]],"meta":{"line":387,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L387"}},{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":392,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L392"}},{"name":"_rawValues","type":[[["Array","<"],["string",">"]]],"meta":{"line":388,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L388"}},{"name":"guild","type":[[["null"," |"],["Guild"]]],"meta":{"line":393,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L393"}}],"methods":[{"name":"_get","params":[{"name":"fn","optional":false,"type":[[["("],["s",": "],["string",") => "],["undefined"," |"],["T"]]]}],"returns":[[[["Array","<"],["T",">"]]]],"meta":{"line":399,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L399"}},{"name":"channels","description":"Get the selected channels","returns":[[[["Array","<"],["Channel",">"]]]],"meta":{"line":415,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L415"}},{"name":"members","description":"Get the selected members","returns":[[[["Array","<"],["Member",">"]]]],"meta":{"line":437,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L437"}},{"name":"mentionables","description":"Get the selected mentionables (roles, channels, users, members)","returns":[[[["Array","<"],["User"," |"],["APIUser"," |"],["Channel"," |"],["Member"," |"],["Role"," |"],["APIRole",">"]]]],"meta":{"line":459,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L459"}},{"name":"roles","description":"Get the selected roles","returns":[[[["Array","<"],["Role"," |"],["APIRole",">"]]]],"meta":{"line":448,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L448"}},{"name":"strings","description":"Get the selected strings","returns":[[[["Array","<"],["string",">"]]]],"meta":{"line":488,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L488"}},{"name":"users","description":"Get the selected users","returns":[[[["Array","<"],["User"," |"],["APIUser",">"]]]],"meta":{"line":426,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L426"}}]},{"name":"StageChannel","extends":[[["BaseVoiceChannel","<"],["this","> & "],["TextBasedChannel","<"],["this",">"]]],"construct":{"name":"new StageChannel","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIGuildStageVoiceChannel",">"]]]},{"name":"guild","optional":false,"type":[[["Guild"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"bitrate","description":"The bitrate (in bits) of the voice channel","type":[[["number"]]],"meta":{"line":853,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L853"}},{"name":"flags","description":"The flags of the channel","type":[[["null"," |"],["ChannelFlags"]]],"meta":{"line":75,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L75"}},{"name":"guild","type":[[["Guild"]]],"meta":{"line":335,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L335"}},{"name":"guildId","description":"The id of the guild (may be missing for some channel objects received over gateway guild dispatches)","type":[[["string"]]],"meta":{"line":339,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L339"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"lastMessageId","description":"The id of the last message sent in this channel (may not point to an existing or valid message)","type":[[["null"," |"],["string"]]],"meta":{"line":243,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L243"}},{"name":"lastPinTimestamp","description":"When the last pinned message was pinned.","type":[[["null"," |"],["number"]]],"meta":{"line":247,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L247"}},{"name":"members","description":"Members in this voice channel","type":[[["MemberDataManager"]]],"meta":{"line":861,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L861"}},{"name":"messages","description":"Channel messages","type":[[["MessageDataManager"]]],"meta":{"line":251,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L251"}},{"name":"name","description":"The name of the channel (2-100 characters)","type":[[["null"," |"],["string"]]],"meta":{"line":71,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L71"}},{"name":"nsfw","description":"Whether the channel is nsfw","type":[[["boolean"]]],"meta":{"line":357,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L357"}},{"name":"parentId","description":"ID of the parent category for a channel (each parent category can contain up to 50 channels)\nOR\nID of the parent channel for thread","type":[[["string"]]],"meta":{"line":345,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L345"}},{"name":"permissionOverwrites","description":"Explicit permission overwrites for members and roles","type":[[["DataCache","<"],["PermissionOverwrite",">"]]],"meta":{"line":349,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L349"}},{"name":"position","description":"Sorting position of the channel","type":[[["number"]]],"meta":{"line":353,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L353"}},{"name":"rawData","type":[[["APIChannel"]]],"meta":{"line":77,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L77"}},{"name":"rtcRegion","description":"Voice region id for the voice or stage channel","type":[[["string"]]],"meta":{"line":849,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L849"}},{"name":"threads","description":"The threads in this channel","type":[[["DataCache","<"],["ThreadChannel",">"]]],"meta":{"line":361,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L361"}},{"name":"type","description":"The type of the channel","type":[[["ChannelType"]]],"meta":{"line":67,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L67"}},{"name":"userLimit","description":"The user limit of the voice channel","type":[[["number"]]],"meta":{"line":857,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L857"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APIVoiceChannelBase","<"],["GuildVoice"," |"],["GuildStageVoice",">"]]]}],"returns":[[[["StageChannel"]]]],"meta":{"line":877,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L877"}},{"name":"bulkDeleteMessages","params":[{"name":"messages","optional":false,"type":[[["number"," |"],["Array","<"],["string","> |"],["Array","<"],["Message",">"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":287,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L287"}},{"name":"createMessage","params":[{"name":"content","optional":false,"type":[[["string"," |"],["MessagePostData"]]]}],"returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":268,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L268"}},{"name":"createStageInstance","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPostAPIStageInstanceJSONBody",">"]]]}],"returns":[[[["Promise","<"],["APIStageInstance",">"]]]],"meta":{"line":987,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L987"}},{"name":"deleteMessage","params":[{"name":"id","optional":false,"type":[[["string"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":283,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L283"}},{"name":"edit","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPatchAPIChannelJSONBody",">"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":86,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L86"}},{"name":"editPermissions","params":[{"name":"overwriteId","description":"User or Role id","optional":false,"type":[[["string"]]]},{"name":"options","description":"Options to edit permissions","optional":false,"type":[[["APIOverwrite"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":393,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L393"}},{"name":"fetchInformation","description":"Update information of this channel\n\nUtil if this is forged","returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":195,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L195"}},{"name":"isDM","returns":[[[["this"," "],["is"," "],["DMChannel"]]]],"meta":{"line":151,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L151"}},{"name":"isGuildChannel","returns":[[[["this"," "],["is"," "],["GuildChannel"]]]],"meta":{"line":163,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L163"}},{"name":"isGuildText","returns":[[[["this"," "],["is"," "],["GuildTextChannel"]]]],"meta":{"line":159,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L159"}},{"name":"isStage","returns":[[[["this"," "],["is"," "],["StageChannel"]]]],"meta":{"line":177,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L177"}},{"name":"isText","returns":[[[["this"," "],["is"," "],["TextBasedChannel"]]]],"meta":{"line":155,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L155"}},{"name":"isThread","returns":[[[["this"," "],["is"," "],["ThreadChannel"]]]],"meta":{"line":173,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L173"}},{"name":"isVoice","returns":[[[["this"," "],["is"," "],["VoiceChannel"]]]],"meta":{"line":181,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L181"}},{"name":"sendTyping","returns":[[[["Promise","<"],["unknown",">"]]]],"meta":{"line":304,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L304"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\nbitrate",": "],["number",","],["\ncreatedAt",": "],["number",","],["\nflags",": "],["null"," |"],["ChannelFlags",","],["\nguild",": "],["Guild",","],["\nguildId",": "],["string",","],["\nid",": "],["string",","],["\nmembers",": "],["MemberDataManager",","],["\nname",": "],["null"," |"],["string",","],["\nnsfw",": "],["boolean",","],["\nparentId",": "],["string",","],["\npermissionOverwrites",": "],["DataCache","<"],["PermissionOverwrite",">,"],["\nposition",": "],["number",","],["\nrawData",": "],["APIChannel",","],["\nrtcRegion",": "],["string",","],["\nthreads",": "],["DataCache","<"],["ThreadChannel",">,"],["\ntype",": "],["ChannelType",","],["\nuserLimit",": "],["number\n","}>>"]]]],"meta":{"line":890,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L890"}},{"name":"toString","returns":[[[["unknown"]]]],"meta":{"line":117,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L117"}},{"name":"from","scope":"static","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIChannel",">"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]}],"returns":[[[["Channel"]]]],"meta":{"line":200,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L200"}},{"name":"isBased","scope":"static","params":[{"name":"channel","optional":false,"type":[[["Channel"]]]}],"returns":[[[["channel"," "],["is"," "],["TextBasedChannel"]]]],"meta":{"line":322,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L322"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"Sticker","extends":[[["Base"]]],"construct":{"name":"new Sticker","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APISticker",">"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"available","description":"Whether this guild sticker can be used, may be false due to loss of Server Boosts","type":[[["boolean"]]],"meta":{"line":38,"file":"Sticker.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Sticker.ts#L38"}},{"name":"description","description":"Description of the sticker","type":[[["null"," |"],["string"]]],"meta":{"line":22,"file":"Sticker.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Sticker.ts#L22"}},{"name":"formatType","description":"Type of sticker format","type":[[["StickerFormatType"]]],"meta":{"line":34,"file":"Sticker.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Sticker.ts#L34"}},{"name":"guildId","description":"Id of the guild that owns this sticker","type":[[["string"]]],"meta":{"line":42,"file":"Sticker.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Sticker.ts#L42"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"name","description":"Name of the sticker","type":[[["string"]]],"meta":{"line":18,"file":"Sticker.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Sticker.ts#L18"}},{"name":"packId","description":"For standard stickers, id of the pack the sticker is from","type":[[["string"]]],"meta":{"line":14,"file":"Sticker.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Sticker.ts#L14"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"sortValue","description":"The standard sticker's sort order within its pack","type":[[["number"]]],"meta":{"line":50,"file":"Sticker.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Sticker.ts#L50"}},{"name":"tags","description":"Autocomplete/suggestion tags for the sticker (max 200 characters)","type":[[["string"]]],"meta":{"line":26,"file":"Sticker.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Sticker.ts#L26"}},{"name":"type","description":"Type of sticker","type":[[["StickerType"]]],"meta":{"line":30,"file":"Sticker.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Sticker.ts#L30"}},{"name":"user","description":"The user that uploaded the guild sticker","type":[[["null"," |"],["User"]]],"meta":{"line":46,"file":"Sticker.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Sticker.ts#L46"}}],"methods":[{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\navailable",": "],["undefined"," |"],["boolean",","],["\ncreatedAt",": "],["number",","],["\ndescription",": "],["null"," |"],["string",","],["\nformatType",": "],["StickerFormatType",","],["\nguildId",": "],["undefined"," |"],["string",","],["\nid",": "],["string",","],["\nname",": "],["string",","],["\npackId",": "],["undefined"," |"],["string",","],["\nrawData",": "],["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","},"],["\nsortValue",": "],["undefined"," |"],["number",","],["\ntags",": "],["string",","],["\ntype",": "],["StickerType",","],["\nuser",": "],["undefined"," |"],["null"," |"],["User\n","}>>"]]]],"meta":{"line":66,"file":"Sticker.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Sticker.ts#L66"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"StickerDataManager","extends":[[["DataManager","<"],["Sticker"," |"],["APISticker",">"]]],"construct":{"name":"new StickerDataManager","params":[{"name":"options","optional":false,"type":[[["number"," |"],["BaseCacheOptions","<"],["unknown",">"]]]},{"name":"manager","optional":false,"type":[[["CacheManager"]]]}]},"props":[{"name":"cache","type":[[["DataCache","<"],["Sticker"," |"],["APISticker",">"]]],"meta":{"line":53,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L53"}},{"name":"manager","type":[[["CacheManager"]]],"meta":{"line":13,"file":"StickerDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/StickerDataManager.ts#L13"}}],"methods":[{"name":"#resolve","access":"private","params":[{"name":"sticker","optional":false,"type":[[["Sticker"," |"],["APISticker"]]]},{"name":"addInCache","optional":true,"default":"false","type":[[["boolean"]]]}],"returns":[[[["Sticker"," |"],["APISticker"]]]],"meta":{"line":29,"file":"StickerDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/StickerDataManager.ts#L29"}},{"name":"_fetch","params":[{"name":"id","description":"sticker id","optional":false,"type":[[["string"]]]},{"name":"guild","description":"Guild object or Guild Id","optional":false,"type":[[["string"," |"],["Guild"," |"],["APIGuild"]]]},{"name":"addInCache","optional":true,"default":"true","type":[[["boolean"]]]}],"returns":[[[["Promise","<"],["any",">"]]]],"meta":{"line":50,"file":"StickerDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/StickerDataManager.ts#L50"}},{"name":"add","params":[{"name":"sticker","optional":false,"type":[[["Sticker"," |"],["APISticker"]]]},{"name":"replace","optional":true,"default":"true","type":[[["boolean"]]]}],"returns":[[[["any"]]]],"meta":{"line":25,"file":"StickerDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/StickerDataManager.ts#L25"}},{"name":"get","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["undefined"," |"],["Sticker"," |"],["APISticker"]]]],"meta":{"line":21,"file":"StickerDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/StickerDataManager.ts#L21"}}]},{"name":"Team","construct":{"name":"new Team","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APITeam",">"]]]}]},"props":[{"name":"icon","description":"A hash of the image of the team's icon","type":[[["null"," |"],["string"]]],"meta":{"line":41,"file":"Team.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Team.ts#L41"}},{"name":"id","type":[[["string"]]],"meta":{"line":42,"file":"Team.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Team.ts#L42"}},{"name":"members","description":"The members of the team","type":[[["Array","<"],["TeamMember",">"]]],"meta":{"line":46,"file":"Team.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Team.ts#L46"}},{"name":"name","description":"The name of the team","type":[[["string"]]],"meta":{"line":50,"file":"Team.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Team.ts#L50"}},{"name":"ownerUserId","description":"The user id of the current team owner","type":[[["string"]]],"meta":{"line":54,"file":"Team.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Team.ts#L54"}}]},{"name":"TeamMember","construct":{"name":"new TeamMember","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APITeamMember",">"]]]}]},"props":[{"name":"membershipState","description":"The user's membership state on the team","type":[[["TeamMemberMembershipState"]]],"meta":{"line":15,"file":"Team.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Team.ts#L15"}},{"name":"permissions","description":"Will always be [\"*\"]","type":[[["[*]"]]],"meta":{"line":19,"file":"Team.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Team.ts#L19"}},{"name":"teamId","description":"The id of the parent team of which they are a member","type":[[["string"]]],"meta":{"line":23,"file":"Team.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Team.ts#L23"}},{"name":"user","description":"The user of team","type":[[["User"," |"],["APIUser"]]],"meta":{"line":27,"file":"Team.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Team.ts#L27"}}]},{"name":"TextBasedChannel","extends":[[["Channel"]]],"construct":{"name":"new TextBasedChannel","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APITextBasedChannel","<"],["ChannelType",">>"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"flags","description":"The flags of the channel","type":[[["null"," |"],["ChannelFlags"]]],"meta":{"line":75,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L75"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"lastMessageId","description":"The id of the last message sent in this channel (may not point to an existing or valid message)","type":[[["null"," |"],["string"]]],"meta":{"line":243,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L243"}},{"name":"lastPinTimestamp","description":"When the last pinned message was pinned.","type":[[["null"," |"],["number"]]],"meta":{"line":247,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L247"}},{"name":"messages","description":"Channel messages","type":[[["MessageDataManager"]]],"meta":{"line":251,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L251"}},{"name":"name","description":"The name of the channel (2-100 characters)","type":[[["null"," |"],["string"]]],"meta":{"line":71,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L71"}},{"name":"rawData","type":[[["APIChannel"]]],"meta":{"line":77,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L77"}},{"name":"type","description":"The type of the channel","type":[[["ChannelType"]]],"meta":{"line":67,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L67"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APIChannel"]]]}],"returns":[[[["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel"]]]],"meta":{"line":132,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L132"}},{"name":"bulkDeleteMessages","params":[{"name":"messages","optional":false,"type":[[["number"," |"],["Array","<"],["string","> |"],["Array","<"],["Message",">"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":287,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L287"}},{"name":"createMessage","params":[{"name":"content","optional":false,"type":[[["string"," |"],["MessagePostData"]]]}],"returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":268,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L268"}},{"name":"deleteMessage","params":[{"name":"id","optional":false,"type":[[["string"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":283,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L283"}},{"name":"edit","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPatchAPIChannelJSONBody",">"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":86,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L86"}},{"name":"fetchInformation","description":"Update information of this channel\n\nUtil if this is forged","returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":195,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L195"}},{"name":"isDM","returns":[[[["this"," "],["is"," "],["DMChannel"]]]],"meta":{"line":151,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L151"}},{"name":"isGuildChannel","returns":[[[["this"," "],["is"," "],["GuildChannel"]]]],"meta":{"line":163,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L163"}},{"name":"isGuildText","returns":[[[["this"," "],["is"," "],["GuildTextChannel"]]]],"meta":{"line":159,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L159"}},{"name":"isStage","returns":[[[["this"," "],["is"," "],["StageChannel"]]]],"meta":{"line":177,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L177"}},{"name":"isText","returns":[[[["this"," "],["is"," "],["TextBasedChannel"]]]],"meta":{"line":155,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L155"}},{"name":"isThread","returns":[[[["this"," "],["is"," "],["ThreadChannel"]]]],"meta":{"line":173,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L173"}},{"name":"isVoice","returns":[[[["this"," "],["is"," "],["VoiceChannel"]]]],"meta":{"line":181,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L181"}},{"name":"sendTyping","returns":[[[["Promise","<"],["unknown",">"]]]],"meta":{"line":304,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L304"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\ncreatedAt",": "],["number",","],["\nflags",": "],["null"," |"],["ChannelFlags",","],["\nid",": "],["string",","],["\nlastMessageId",": "],["undefined"," |"],["null"," |"],["string",","],["\nlastPinTimestamp",": "],["undefined"," |"],["null"," |"],["number",","],["\nmessages",": "],["MessageDataManager",","],["\nname",": "],["null"," |"],["string",","],["\nrawData",": "],["APIChannel",","],["\ntype",": "],["ChannelType\n","}>>"]]]],"meta":{"line":308,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L308"}},{"name":"toString","returns":[[[["unknown"]]]],"meta":{"line":117,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L117"}},{"name":"from","scope":"static","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIChannel",">"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]}],"returns":[[[["Channel"]]]],"meta":{"line":200,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L200"}},{"name":"isBased","scope":"static","params":[{"name":"channel","optional":false,"type":[[["Channel"]]]}],"returns":[[[["channel"," "],["is"," "],["TextBasedChannel"]]]],"meta":{"line":322,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L322"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"ThreadChannel","extends":[[["TextBasedChannel"]]],"construct":{"name":"new ThreadChannel","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIThreadChannel",">"]]]},{"name":"guild","optional":false,"type":[[["Guild"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"appliedTags","description":"The Ids of the set of tags that have been applied to a thread in a forum channel","type":[[["Array","<"],["string",">"]]],"meta":{"line":548,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L548"}},{"name":"archiveTimestamp","description":"Timestamp when the thread's archive status was last changed, used for calculating recent activity","type":[[["number"]]],"meta":{"line":569,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L569"}},{"name":"archived","description":"Whether the thread is archived","type":[[["boolean"]]],"meta":{"line":565,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L565"}},{"name":"autoArchiveDuration","description":"Duration in minutes to automatically archive the thread after recent activity, can be set to: 60, 1440, 4320, 10080","type":[[["ThreadAutoArchiveDuration"]]],"meta":{"line":573,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L573"}},{"name":"channel","description":"The channel associated with this thread","type":[[["null"," |"],["GuildTextChannel"]]],"meta":{"line":553,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L553"}},{"name":"createTimestamp","description":"Timestamp when the thread was created; only populated for threads created after 2022-01-09","type":[[["null"," |"],["number"]]],"meta":{"line":577,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L577"}},{"name":"flags","description":"The flags of the channel","type":[[["null"," |"],["ChannelFlags"]]],"meta":{"line":75,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L75"}},{"name":"guild","description":"The thread guild","type":[[["Guild"]]],"meta":{"line":561,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L561"}},{"name":"guildId","description":"The id of the guild","type":[[["string"]]],"meta":{"line":557,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L557"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"invitable","description":"Whether non-moderators can add other non-moderators to the thread; only available on private threads","type":[[["boolean"]]],"meta":{"line":581,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L581"}},{"name":"lastMessageId","description":"The id of the last message sent in this channel (may not point to an existing or valid message)","type":[[["null"," |"],["string"]]],"meta":{"line":243,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L243"}},{"name":"lastPinTimestamp","description":"When the last pinned message was pinned.","type":[[["null"," |"],["number"]]],"meta":{"line":247,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L247"}},{"name":"locked","description":"Whether the thread is locked","type":[[["boolean"]]],"meta":{"line":585,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L585"}},{"name":"member","description":"The client users member for the thread","type":[[["null"," |"],["ThreadMember"]]],"meta":{"line":526,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L526"}},{"name":"memberCount","description":"The approximate member count of the thread, does not count above 50 even if there are more members","type":[[["number"]]],"meta":{"line":536,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L536"}},{"name":"members","description":"Members in this thread","type":[[["DataCache","<"],["ThreadMember",">"]]],"meta":{"line":589,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L589"}},{"name":"messageCount","description":"Number of messages (not including the initial message or deleted messages) in a thread\n\nIf the thread was created before July 1, 2022, it stops counting at 50 messages","type":[[["number"]]],"meta":{"line":532,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L532"}},{"name":"messages","description":"Channel messages","type":[[["MessageDataManager"]]],"meta":{"line":251,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L251"}},{"name":"name","description":"The name of the channel (2-100 characters)","type":[[["null"," |"],["string"]]],"meta":{"line":71,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L71"}},{"name":"ownerId","description":"Id of the thread creato","type":[[["string"]]],"meta":{"line":540,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L540"}},{"name":"rawData","type":[[["APIChannel"]]],"meta":{"line":77,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L77"}},{"name":"totalMessageSent","description":"Number of messages ever sent in a thread","type":[[["number"]]],"meta":{"line":544,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L544"}},{"name":"type","description":"The type of the channel","type":[[["ChannelType"]]],"meta":{"line":67,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L67"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APIThreadChannel"]]]}],"returns":[[[["ThreadChannel"]]]],"meta":{"line":629,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L629"}},{"name":"addMember","params":[{"name":"userId","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":608,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L608"}},{"name":"bulkDeleteMessages","params":[{"name":"messages","optional":false,"type":[[["number"," |"],["Array","<"],["string","> |"],["Array","<"],["Message",">"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":287,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L287"}},{"name":"createMessage","params":[{"name":"content","optional":false,"type":[[["string"," |"],["MessagePostData"]]]}],"returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":268,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L268"}},{"name":"deleteMessage","params":[{"name":"id","optional":false,"type":[[["string"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":283,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L283"}},{"name":"edit","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPatchAPIChannelJSONBody",">"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":86,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L86"}},{"name":"fetchInformation","description":"Update information of this channel\n\nUtil if this is forged","returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":195,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L195"}},{"name":"getMember","params":[{"name":"userId","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["ThreadMember",">"]]]],"meta":{"line":616,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L616"}},{"name":"isDM","returns":[[[["this"," "],["is"," "],["DMChannel"]]]],"meta":{"line":151,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L151"}},{"name":"isGuildChannel","returns":[[[["this"," "],["is"," "],["GuildChannel"]]]],"meta":{"line":163,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L163"}},{"name":"isGuildText","returns":[[[["this"," "],["is"," "],["GuildTextChannel"]]]],"meta":{"line":159,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L159"}},{"name":"isStage","returns":[[[["this"," "],["is"," "],["StageChannel"]]]],"meta":{"line":177,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L177"}},{"name":"isText","returns":[[[["this"," "],["is"," "],["TextBasedChannel"]]]],"meta":{"line":155,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L155"}},{"name":"isThread","returns":[[[["this"," "],["is"," "],["ThreadChannel"]]]],"meta":{"line":173,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L173"}},{"name":"isVoice","returns":[[[["this"," "],["is"," "],["VoiceChannel"]]]],"meta":{"line":181,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L181"}},{"name":"leave","description":"Removes the current user from a thread","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":625,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L625"}},{"name":"removeMember","params":[{"name":"userId","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":612,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L612"}},{"name":"sendTyping","returns":[[[["Promise","<"],["unknown",">"]]]],"meta":{"line":304,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L304"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\nappliedTags",": "],["Array","<"],["string",">,"],["\narchiveTimestamp",": "],["number",","],["\narchived",": "],["boolean",","],["\nautoArchiveDuration",": "],["ThreadAutoArchiveDuration",","],["\nchannel",": "],["null"," |"],["GuildTextChannel",","],["\ncreateTimestamp",": "],["null"," |"],["number",","],["\ncreatedAt",": "],["number",","],["\nflags",": "],["null"," |"],["ChannelFlags",","],["\nguild",": "],["Guild",","],["\nguildId",": "],["string",","],["\nid",": "],["string",","],["\ninvitable",": "],["boolean",","],["\nleave",": (..."],["args",": "],["unknown","[]) => "],["Promise","<"],["void",">,"],["\nlocked",": "],["boolean",","],["\nmember",": "],["undefined"," |"],["null"," |"],["ThreadMember",","],["\nmemberCount",": "],["undefined"," |"],["number",","],["\nmembers",": "],["DataCache","<"],["ThreadMember",">,"],["\nmessages",": "],["MessageDataManager",","],["\nname",": "],["null"," |"],["string",","],["\nownerId",": "],["undefined"," |"],["string",","],["\nrawData",": "],["APIChannel",","],["\ntotalMessageSent",": "],["undefined"," |"],["number",","],["\ntype",": "],["ChannelType\n","}>>"]]]],"meta":{"line":656,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L656"}},{"name":"toString","returns":[[[["unknown"]]]],"meta":{"line":117,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L117"}},{"name":"from","scope":"static","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIChannel",">"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]}],"returns":[[[["Channel"]]]],"meta":{"line":200,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L200"}},{"name":"isBased","scope":"static","params":[{"name":"channel","optional":false,"type":[[["Channel"]]]}],"returns":[[[["channel"," "],["is"," "],["TextBasedChannel"]]]],"meta":{"line":322,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L322"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"ThreadMember","extends":[[["Base"]]],"construct":{"name":"new ThreadMember","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIThreadMember",">"]]]},{"name":"thread","optional":false,"type":[[["ThreadChannel"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"flags","description":"Member flags combined as a bitfield","type":[[["BitField","<"],["ThreadMemberFlags",", ("],["typeof"," "],["ThreadMemberFlags",")>"]]],"meta":{"line":226,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L226"}},{"name":"guild","description":"Thread guild","type":[[["Guild"]]],"meta":{"line":218,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L218"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"joinTimestamp","description":"An timestamp for when the member last joined","type":[[["number"]]],"meta":{"line":222,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L222"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"thread","description":"The thread of member is in","type":[[["ThreadChannel"]]],"meta":{"line":230,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L230"}},{"name":"threadId","description":"The id of the thread","type":[[["string"]]],"meta":{"line":234,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L234"}}],"methods":[{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\ncreatedAt",": "],["number",","],["\nflags",": "],["BitField","<"],["ThreadMemberFlags",", ("],["typeof"," "],["ThreadMemberFlags",")>,"],["\nguild",": "],["Guild",","],["\nguildMember",": "],["undefined"," |"],["Member",","],["\nid",": "],["string",","],["\njoinTimestamp",": "],["number",","],["\nrawData",": "],["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","},"],["\nthread",": "],["ThreadChannel",","],["\nthreadId",": "],["string",","],["\nuser",": "],["undefined"," |"],["User"," |"],["APIUser\n","}>>"]]]],"meta":{"line":259,"file":"Member.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Member.ts#L259"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"User","extends":[[["Base"]]],"construct":{"name":"new User","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIUser",">"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"accentColor","description":"The user's banner color encoded as an integer representation of hexadecimal color code","type":[[["null"," |"],["number"]]],"meta":{"line":58,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L58"}},{"name":"avatar","description":"The user's avatar hash","type":[[["null"," |"],["string"]]],"meta":{"line":38,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L38"}},{"name":"avatarDecoration","description":"The user's avatar decoration hash","type":[[["undefined"," |"],["null"," |"],["string"]]],"meta":{"line":86,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L86"}},{"name":"banner","description":"The user's banner hash","type":[[["null"," |"],["string"]]],"meta":{"line":54,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L54"}},{"name":"bot","description":"Whether the user belongs to an OAuth2 application","type":[[["boolean"]]],"meta":{"line":42,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L42"}},{"name":"discriminator","description":"The user's 4-digit discord-tag","type":[[["string"]]],"meta":{"line":34,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L34"}},{"name":"flags","description":"The flags on a user's account","type":[[["null"," |"],["UserFlags"]]],"meta":{"line":70,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L70"}},{"name":"globalName","description":"The user's display name, if it is set. For bots, this is the application name","type":[[["null"," |"],["string"]]],"meta":{"line":82,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L82"}},{"name":"id","description":"The user's id","type":[[["string"]]],"meta":{"line":26,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L26"}},{"name":"locale","description":"The user's chosen language option","type":[[["id"," |"],["en","-"],["US"," |"],["en","-"],["GB"," |"],["bg"," |"],["zh","-"],["CN"," |"],["zh","-"],["TW"," |"],["hr"," |"],["cs"," |"],["da"," |"],["nl"," |"],["fi"," |"],["fr"," |"],["de"," |"],["el"," |"],["hi"," |"],["hu"," |"],["it"," |"],["ja"," |"],["ko"," |"],["lt"," |"],["no"," |"],["pl"," |"],["pt","-"],["BR"," |"],["ro"," |"],["ru"," |"],["es","-"],["ES"," |"],["sv","-"],["SE"," |"],["th"," |"],["tr"," |"],["uk"," |"],["vi"]]],"meta":{"line":62,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L62"}},{"name":"mfaEnabled","description":"Whether the user has two factor enabled on their account","type":[[["boolean"]]],"meta":{"line":50,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L50"}},{"name":"premiumType","description":"The type of Nitro subscription on a user's account","type":[[["UserPremiumType"]]],"meta":{"line":74,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L74"}},{"name":"publicFlags","description":"The public flags on a user's account","type":[[["null"," |"],["UserFlags"]]],"meta":{"line":78,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L78"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"system","description":"Whether the user is an Official Discord System user (part of the urgent message system)","type":[[["boolean"]]],"meta":{"line":46,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L46"}},{"name":"username","description":"The user's username, not unique across the platform","type":[[["string"]]],"meta":{"line":30,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L30"}},{"name":"verified","description":"Whether the email on this account has been verified","type":[[["boolean"]]],"meta":{"line":66,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L66"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APIUser"]]]}],"returns":[[[["User"]]]],"meta":{"line":94,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L94"}},{"name":"avatarDecorationURL","description":"The user's avatar decoration url","params":[{"name":"options","description":"options for avatar decoration url","optional":true,"type":[[["ImageSize"]]]}],"returns":[[[["null"," |"],["string"]]]],"meta":{"line":129,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L129"}},{"name":"avatarURL","description":"The user's avatar url","params":[{"name":"options","description":"options for avatar url","optional":true,"type":[[["DisplayUserAvatarOptions"]]]}],"returns":[[[["null"," |"],["string"]]]],"meta":{"line":163,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L163"}},{"name":"createDM","description":"Create a new DM channel for this user","returns":[[[["Promise","<"],["DMChannel"," |"],["APIDMChannel",">"]]]],"meta":{"line":231,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L231"}},{"name":"deleteDM","description":"Delete this user dm if existing one","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":240,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L240"}},{"name":"displayAvatarURL","description":"The user's display avatar url","params":[{"name":"options","description":"options for display avatar url","optional":true,"type":[[["DisplayUserAvatarOptions"]]]}],"returns":[[[["string"]]]],"meta":{"line":190,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L190"}},{"name":"displayName","description":"The user's display name","returns":[[[["string"]]]],"meta":{"line":198,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L198"}},{"name":"fetchInformation","description":"Update information of this user\n\nUtil if this is forged","returns":[[[["Promise","<"],["User",">"]]]],"meta":{"line":257,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L257"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\naccentColor",": "],["null"," |"],["number",","],["\navatar",": "],["null"," |"],["string",","],["\navatarURL",": ("],["options",": "],["DisplayUserAvatarOptions",") => "],["null"," |"],["string",","],["\nbanner",": "],["undefined"," |"],["null"," |"],["string",","],["\nbot",": "],["undefined"," |"],["boolean",","],["\ncreatedAt",": "],["number",","],["\ndefaultAvatarURL",": "],["string",","],["\ndiscriminator",": "],["string",","],["\ndm",": "],["null"," |"],["DMChannel",","],["\nflags",": "],["null"," |"],["UserFlags",","],["\nid",": "],["string",","],["\nlocale",": "],["undefined"," |"],["id"," |"],["en","-"],["US"," |"],["en","-"],["GB"," |"],["bg"," |"],["zh","-"],["CN"," |"],["zh","-"],["TW"," |"],["hr"," |"],["cs"," |"],["da"," |"],["nl"," |"],["fi"," |"],["fr"," |"],["de"," |"],["el"," |"],["hi"," |"],["hu"," |"],["it"," |"],["ja"," |"],["ko"," |"],["lt"," |"],["no"," |"],["pl"," |"],["pt","-"],["BR"," |"],["ro"," |"],["ru"," |"],["es","-"],["ES"," |"],["sv","-"],["SE"," |"],["th"," |"],["tr"," |"],["uk"," |"],["vi",","],["\nmfaEnabled",": "],["undefined"," |"],["boolean",","],["\npremiumType",": "],["undefined"," |"],["UserPremiumType",","],["\npublicFlags",": "],["null"," |"],["UserFlags",","],["\nrawData",": "],["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","},"],["\nsystem",": "],["undefined"," |"],["boolean",","],["\ntag",": "],["string",","],["\nusername",": "],["string\n","}>>"]]]],"meta":{"line":266,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L266"}},{"name":"toString","returns":[[[["unknown"]]]],"meta":{"line":262,"file":"User.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/User.ts#L262"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"UserApplicationCommandInteractionData","extends":[[["Base"]]],"construct":{"name":"new UserApplicationCommandInteractionData","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIUserApplicationCommandInteractionData",">"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"name","description":"The name of the invoked command","type":[[["string"]]],"meta":{"line":1029,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1029"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"target","description":"User target","type":[[["User"," |"],["APIUser"]]],"meta":{"line":1025,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1025"}},{"name":"targetId","description":"Id of the user targeted","type":[[["string"]]],"meta":{"line":1033,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1033"}},{"name":"targetMember","description":"Guild member target","type":[[["Member"," |"],["APIInteractionDataResolvedGuildMember"]]],"meta":{"line":1037,"file":"Interaction.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Interaction.ts#L1037"}}],"methods":[{"name":"toJSON","returns":[[[["void"]]]],"meta":{"line":88,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L88"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"UserDataManager","extends":[[["DataManager","<"],["APIUser"," |"],["User",">"]]],"construct":{"name":"new UserDataManager","params":[{"name":"options","optional":false,"type":[[["number"," |"],["BaseCacheOptions","<"],["User"," |"],["APIUser",">"]]]},{"name":"manager","optional":false,"type":[[["CacheManager"]]]}]},"props":[{"name":"cache","type":[[["DataCache","<"],["User"," |"],["APIUser",">"]]],"meta":{"line":53,"file":"DataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/DataManager.ts#L53"}},{"name":"manager","type":[[["CacheManager"]]],"meta":{"line":11,"file":"UserDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/UserDataManager.ts#L11"}}],"methods":[{"name":"#resolve","access":"private","params":[{"name":"user","optional":false,"type":[[["User"," |"],["APIUser"]]]},{"name":"addInCache","optional":true,"default":"false","type":[[["boolean"]]]}],"returns":[[[["User"," |"],["APIUser"]]]],"meta":{"line":39,"file":"UserDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/UserDataManager.ts#L39"}},{"name":"add","params":[{"name":"user","optional":false,"type":[[["User"," |"],["APIUser"]]]},{"name":"replace","optional":true,"default":"true","type":[[["boolean"]]]}],"returns":[[[["any"]]]],"meta":{"line":31,"file":"UserDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/UserDataManager.ts#L31"}},{"name":"fetch","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["any",">"]]]],"meta":{"line":54,"file":"UserDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/UserDataManager.ts#L54"}},{"name":"forge","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["any"]]]],"meta":{"line":21,"file":"UserDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/UserDataManager.ts#L21"}},{"name":"get","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[[["undefined"," |"],["User"," |"],["APIUser"]]]],"meta":{"line":16,"file":"UserDataManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/manager/UserDataManager.ts#L16"}}]},{"name":"VoiceChannel","extends":[[["BaseVoiceChannel","<"],["this","> & "],["TextBasedChannel","<"],["this",">"]]],"construct":{"name":"new VoiceChannel","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIGuildVoiceChannel",">"]]]},{"name":"guild","optional":false,"type":[[["Guild"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"bitrate","description":"The bitrate (in bits) of the voice channel","type":[[["number"]]],"meta":{"line":853,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L853"}},{"name":"flags","description":"The flags of the channel","type":[[["null"," |"],["ChannelFlags"]]],"meta":{"line":75,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L75"}},{"name":"guild","type":[[["Guild"]]],"meta":{"line":335,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L335"}},{"name":"guildId","description":"The id of the guild (may be missing for some channel objects received over gateway guild dispatches)","type":[[["string"]]],"meta":{"line":339,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L339"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"lastMessageId","description":"The id of the last message sent in this channel (may not point to an existing or valid message)","type":[[["null"," |"],["string"]]],"meta":{"line":243,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L243"}},{"name":"lastPinTimestamp","description":"When the last pinned message was pinned.","type":[[["null"," |"],["number"]]],"meta":{"line":247,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L247"}},{"name":"members","description":"Members in this voice channel","type":[[["MemberDataManager"]]],"meta":{"line":861,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L861"}},{"name":"messages","description":"Channel messages","type":[[["MessageDataManager"]]],"meta":{"line":251,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L251"}},{"name":"name","description":"The name of the channel (2-100 characters)","type":[[["null"," |"],["string"]]],"meta":{"line":71,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L71"}},{"name":"nsfw","description":"Whether the channel is nsfw","type":[[["boolean"]]],"meta":{"line":357,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L357"}},{"name":"parentId","description":"ID of the parent category for a channel (each parent category can contain up to 50 channels)\nOR\nID of the parent channel for thread","type":[[["string"]]],"meta":{"line":345,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L345"}},{"name":"permissionOverwrites","description":"Explicit permission overwrites for members and roles","type":[[["DataCache","<"],["PermissionOverwrite",">"]]],"meta":{"line":349,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L349"}},{"name":"position","description":"Sorting position of the channel","type":[[["number"]]],"meta":{"line":353,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L353"}},{"name":"rawData","type":[[["APIChannel"]]],"meta":{"line":77,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L77"}},{"name":"rtcRegion","description":"Voice region id for the voice or stage channel","type":[[["string"]]],"meta":{"line":849,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L849"}},{"name":"threads","description":"The threads in this channel","type":[[["DataCache","<"],["ThreadChannel",">"]]],"meta":{"line":361,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L361"}},{"name":"type","description":"The type of the channel","type":[[["ChannelType"]]],"meta":{"line":67,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L67"}},{"name":"userLimit","description":"The user limit of the voice channel","type":[[["number"]]],"meta":{"line":857,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L857"}},{"name":"videoQualityMode","description":"The camera video quality mode of the voice channel","type":[[["null"," |"],["VideoQualityMode"]]],"meta":{"line":917,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L917"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APIVoiceChannelBase","<"],["GuildVoice"," |"],["GuildStageVoice",">"]]]}],"returns":[[[["VoiceChannel"]]]],"meta":{"line":877,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L877"}},{"name":"bulkDeleteMessages","params":[{"name":"messages","optional":false,"type":[[["number"," |"],["Array","<"],["string","> |"],["Array","<"],["Message",">"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":287,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L287"}},{"name":"createMessage","params":[{"name":"content","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["Message",">"]]]],"meta":{"line":931,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L931"}},{"name":"deleteMessage","params":[{"name":"id","optional":false,"type":[[["string"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":283,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L283"}},{"name":"edit","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPatchAPIChannelJSONBody",">"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":86,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L86"}},{"name":"editPermissions","params":[{"name":"overwriteId","description":"User or Role id","optional":false,"type":[[["string"]]]},{"name":"options","description":"Options to edit permissions","optional":false,"type":[[["APIOverwrite"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":393,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L393"}},{"name":"fetchInformation","description":"Update information of this channel\n\nUtil if this is forged","returns":[[[["Promise","<"],["DMChannel"," |"],["Channel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["ForumChannel"," |"],["ThreadChannel"," |"],["StageChannel"," |"],["VoiceChannel",">"]]]],"meta":{"line":195,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L195"}},{"name":"isDM","returns":[[[["this"," "],["is"," "],["DMChannel"]]]],"meta":{"line":151,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L151"}},{"name":"isGuildChannel","returns":[[[["this"," "],["is"," "],["GuildChannel"]]]],"meta":{"line":163,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L163"}},{"name":"isGuildText","returns":[[[["this"," "],["is"," "],["GuildTextChannel"]]]],"meta":{"line":159,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L159"}},{"name":"isStage","returns":[[[["this"," "],["is"," "],["StageChannel"]]]],"meta":{"line":177,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L177"}},{"name":"isText","returns":[[[["this"," "],["is"," "],["TextBasedChannel"]]]],"meta":{"line":155,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L155"}},{"name":"isThread","returns":[[[["this"," "],["is"," "],["ThreadChannel"]]]],"meta":{"line":173,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L173"}},{"name":"isVoice","returns":[[[["this"," "],["is"," "],["VoiceChannel"]]]],"meta":{"line":181,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L181"}},{"name":"sendTyping","returns":[[[["Promise","<"],["unknown",">"]]]],"meta":{"line":304,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L304"}},{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\nbitrate",": "],["number",","],["\ncreatedAt",": "],["number",","],["\nflags",": "],["null"," |"],["ChannelFlags",","],["\nguild",": "],["Guild",","],["\nguildId",": "],["string",","],["\nid",": "],["string",","],["\nmembers",": "],["MemberDataManager",","],["\nmessages",": "],["MessageDataManager",","],["\nname",": "],["null"," |"],["string",","],["\nnsfw",": "],["boolean",","],["\nparentId",": "],["string",","],["\npermissionOverwrites",": "],["DataCache","<"],["PermissionOverwrite",">,"],["\nposition",": "],["number",","],["\nrawData",": "],["APIChannel",","],["\nrtcRegion",": "],["string",","],["\nthreads",": "],["DataCache","<"],["ThreadChannel",">,"],["\ntype",": "],["ChannelType",","],["\nuserLimit",": "],["number",","],["\nvideoQualityMode",": "],["null"," |"],["VideoQualityMode\n","}>>"]]]],"meta":{"line":949,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L949"}},{"name":"toString","returns":[[[["unknown"]]]],"meta":{"line":117,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L117"}},{"name":"from","scope":"static","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIChannel",">"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]}],"returns":[[[["Channel"]]]],"meta":{"line":200,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L200"}},{"name":"isBased","scope":"static","params":[{"name":"channel","optional":false,"type":[[["Channel"]]]}],"returns":[[[["channel"," "],["is"," "],["TextBasedChannel"]]]],"meta":{"line":322,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L322"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"VoiceState","extends":[[["Base"]]],"construct":{"name":"new VoiceState","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["GatewayVoiceState",">"]]]},{"name":"guild","optional":false,"type":[[["Guild"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"channelId","description":"The channel id this user is connected to","type":[[["null"," |"],["string"]]],"meta":{"line":22,"file":"VoiceState.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/VoiceState.ts#L22"}},{"name":"deaf","description":"Whether this user is deafened by the server","type":[[["boolean"]]],"meta":{"line":26,"file":"VoiceState.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/VoiceState.ts#L26"}},{"name":"guild","description":"The guild of voice state is for","type":[[["Guild"]]],"meta":{"line":14,"file":"VoiceState.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/VoiceState.ts#L14"}},{"name":"guildId","description":"The guild id this voice state is for","type":[[["string"]]],"meta":{"line":62,"file":"VoiceState.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/VoiceState.ts#L62"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"member","description":"The guild member this voice state is for","type":[[["null"," |"],["Member"]]],"meta":{"line":30,"file":"VoiceState.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/VoiceState.ts#L30"}},{"name":"mute","description":"Whether this user is muted by the server","type":[[["boolean"]]],"meta":{"line":34,"file":"VoiceState.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/VoiceState.ts#L34"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"requestToSpeakTimestamp","description":"The time at which the user requested to speak","type":[[["null"," |"],["number"]]],"meta":{"line":38,"file":"VoiceState.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/VoiceState.ts#L38"}},{"name":"selfDeaf","description":"Whether this user is locally deafened","type":[[["boolean"]]],"meta":{"line":42,"file":"VoiceState.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/VoiceState.ts#L42"}},{"name":"selfMute","description":"Whether this user is locally muted","type":[[["boolean"]]],"meta":{"line":46,"file":"VoiceState.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/VoiceState.ts#L46"}},{"name":"selfStream","description":"Whether this user is streaming using \"Go Live\"","type":[[["boolean"]]],"meta":{"line":50,"file":"VoiceState.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/VoiceState.ts#L50"}},{"name":"selfVideo","description":"Whether this user's camera is enabled","type":[[["boolean"]]],"meta":{"line":54,"file":"VoiceState.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/VoiceState.ts#L54"}},{"name":"sessionId","description":"The session id for this voice state","type":[[["string"]]],"meta":{"line":58,"file":"VoiceState.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/VoiceState.ts#L58"}},{"name":"suppress","description":"Whether this user is muted by the current user","type":[[["boolean"]]],"meta":{"line":66,"file":"VoiceState.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/VoiceState.ts#L66"}},{"name":"userId","description":"The user id this voice state is for","type":[[["string"]]],"meta":{"line":18,"file":"VoiceState.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/VoiceState.ts#L18"}}],"methods":[{"name":"disconnect","description":"Disconnects the member from the voice channel","params":[{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["undefined"," |"],["Promise","<"],["Member",">"]]]],"meta":{"line":96,"file":"VoiceState.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/VoiceState.ts#L96"}},{"name":"edit","params":[{"name":"options","optional":false,"type":[[["KeysToCamelCase","<"],["RESTPatchAPIGuildVoiceStateCurrentMemberJSONBody",">"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":110,"file":"VoiceState.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/VoiceState.ts#L110"}},{"name":"moveMemberTo","description":"Move the member to another voice channel","params":[{"name":"channelId","optional":false,"type":[[["null"," |"],["string"]]]},{"name":"reason","optional":true,"type":[[["string"]]]}],"returns":[[[["undefined"," |"],["Promise","<"],["Member",">"]]]],"meta":{"line":106,"file":"VoiceState.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/VoiceState.ts#L106"}},{"name":"toJSON","returns":[[[["void"]]]],"meta":{"line":88,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L88"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"WebServer","extends":[[["EventEmitter"]]],"construct":{"name":"new WebServer","params":[{"name":"options","optional":false,"type":[[["WebServerOptions"]]]}]},"props":[{"name":"hostname","type":[[["string"]]],"meta":{"line":50,"file":"index.d.ts"}},{"name":"port","type":[[["number"]]],"meta":{"line":49,"file":"index.d.ts"}},{"name":"publicKey","type":[[["string"]]],"meta":{"line":51,"file":"index.d.ts"}},{"name":"rest","type":[[["Rest"]]],"meta":{"line":48,"file":"index.d.ts"}},{"name":"route","type":[[["string"]]],"meta":{"line":52,"file":"index.d.ts"}},{"name":"captureRejectionSymbol","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["captureRejectionSymbol",")"]]],"meta":{"line":405,"file":"events.d.ts"}},{"name":"captureRejections","description":"Sets or gets the default captureRejection value for all emitters.","scope":"static","type":[[["boolean"]]],"meta":{"line":410,"file":"events.d.ts"}},{"name":"defaultMaxListeners","scope":"static","type":[[["number"]]],"meta":{"line":411,"file":"events.d.ts"}},{"name":"errorMonitor","description":"This symbol shall be used to install a listener for only monitoring `'error'`\nevents. Listeners installed using this symbol are called before the regular\n`'error'` listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an\n`'error'` event is emitted, therefore the process will still crash if no\nregular `'error'` listener is installed.","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["errorMonitor",")"]]],"meta":{"line":404,"file":"events.d.ts"}}],"methods":[{"name":"[captureRejectionSymbol]","params":[{"name":"error","optional":false,"type":[[["Error"]]]},{"name":"event","optional":false,"type":[[["string"]]]},{"name":"args","optional":false,"variable":true,"type":[[["Array","<"],["any",">"]]]}],"returns":[[[["void"]]]],"meta":{"line":115,"file":"events.d.ts"}},{"name":"addListener","description":"Alias for `emitter.on(eventName, listener)`.","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["WebServer"]]]],"meta":{"line":475,"file":"events.d.ts"}},{"name":"emit","params":[{"name":"event","optional":false,"type":[[["T"]]]},{"name":"args","optional":false,"variable":true,"type":[[["WebServerEvents","["],["T","]"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":45,"file":"index.d.ts"}},{"name":"eventNames","description":"Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.\n\n```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```","returns":[[[["Array","<"],["string"," |"],["symbol",">"]]]],"meta":{"line":794,"file":"events.d.ts"}},{"name":"getMaxListeners","description":"Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to defaultMaxListeners.","returns":[[[["number"]]]],"meta":{"line":647,"file":"events.d.ts"}},{"name":"listen","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":54,"file":"index.d.ts"}},{"name":"listenerCount","description":"Returns the number of listeners listening to the event named `eventName`.\n\nIf `listener` is provided, it will return how many times the listener\nis found in the list of the listeners of the event.","params":[{"name":"eventName","description":"The name of the event being listened for","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","description":"The event handler function","optional":true,"type":[[["Function"]]]}],"returns":[[[["number"]]]],"meta":{"line":741,"file":"events.d.ts"}},{"name":"listeners","description":"Returns a copy of the array of listeners for the event named `eventName`.\n\n```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["Array","<"],["Function",">"]]]],"meta":{"line":660,"file":"events.d.ts"}},{"name":"off","description":"Alias for `emitter.removeListener()`.","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["WebServer"]]]],"meta":{"line":620,"file":"events.d.ts"}},{"name":"on","params":[{"name":"event","optional":false,"type":[[["T"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["WebServerEvents","["],["T","]) => "],["any"]]]}],"returns":[[[["WebServer"]]]],"meta":{"line":43,"file":"index.d.ts"}},{"name":"once","params":[{"name":"event","optional":false,"type":[[["T"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["WebServerEvents","["],["T","]) => "],["any"]]]}],"returns":[[[["WebServer"]]]],"meta":{"line":44,"file":"index.d.ts"}},{"name":"prependListener","description":"Adds the `listener` function to the _beginning_ of the listeners array for the\nevent named `eventName`. No checks are made to see if the `listener` has\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\ntimes.\n\n```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"eventName","description":"The name of the event.","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","description":"The callback function","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["WebServer"]]]],"meta":{"line":759,"file":"events.d.ts"}},{"name":"prependOnceListener","description":"Adds a **one-time**`listener` function for the event named `eventName` to the _beginning_ of the listeners array. The next time `eventName` is triggered, this\nlistener is removed, and then invoked.\n\n```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"eventName","description":"The name of the event.","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","description":"The callback function","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["WebServer"]]]],"meta":{"line":775,"file":"events.d.ts"}},{"name":"rawListeners","description":"Returns a copy of the array of listeners for the event named `eventName`,\nincluding any wrappers (such as those created by `.once()`).\n\n```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["Array","<"],["Function",">"]]]],"meta":{"line":690,"file":"events.d.ts"}},{"name":"removeAllListeners","description":"Removes all listeners, or those of the specified `eventName`.\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the `EventEmitter` instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"event","optional":true,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["WebServer"]]]],"meta":{"line":631,"file":"events.d.ts"}},{"name":"removeListener","description":"Removes the specified `listener` from the listener array for the event named`eventName`.\n\n```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```\n\n`removeListener()` will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified `eventName`, then `removeListener()` must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any`removeListener()` or `removeAllListeners()` calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from`emit()` in progress. Subsequent events behave as expected.\n\n```js\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe `emitter.listeners()` method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), `removeListener()` will remove the most\nrecently added instance. In the example the `once('ping')`listener is removed:\n\n```js\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[[["WebServer"]]]],"meta":{"line":615,"file":"events.d.ts"}},{"name":"setMaxListeners","description":"By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.","params":[{"name":"n","optional":false,"type":[[["number"]]]}],"returns":[[[["WebServer"]]]],"meta":{"line":641,"file":"events.d.ts"}},{"name":"addAbortListener","description":"Listens once to the `abort` event on the provided `signal`.\n\nListening to the `abort` event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall `e.stopImmediatePropagation()`. Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using `AbortSignal`s in Node.js APIs by solving these\ntwo issues by listening to the event such that `stopImmediatePropagation` does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```","scope":"static","params":[{"name":"signal","optional":false,"type":[[["AbortSignal"]]]},{"name":"resource","optional":false,"type":[[["("],["event",": "],["Event",") => "],["void"]]]}],"returns":[{"types":[[["Disposable"]]],"description":"Disposable that removes the `abort` listener."}],"returnsDescription":"Disposable that removes the `abort` listener.","meta":{"line":394,"file":"events.d.ts"}},{"name":"getEventListeners","description":"Returns a copy of the array of listeners for the event named `eventName`.\n\nFor `EventEmitter`s this behaves exactly the same as calling `.listeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n```js\nconst { getEventListeners, EventEmitter } = require('events');\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  getEventListeners(ee, 'foo'); // [listener]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  getEventListeners(et, 'foo'); // [listener]\n}\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"," |_"],["DOMEventTarget"]]]},{"name":"name","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["Array","<"],["Function",">"]]]],"meta":{"line":312,"file":"events.d.ts"}},{"name":"getMaxListeners","description":"Returns the currently set max amount of listeners.\n\nFor `EventEmitter`s this behaves exactly the same as calling `.getMaxListeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"," |_"],["DOMEventTarget"]]]}],"returns":[[[["number"]]]],"meta":{"line":341,"file":"events.d.ts"}},{"name":"listenerCount","description":"A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.\n\n```js\nconst { EventEmitter, listenerCount } = require('events');\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```","scope":"static","deprecated":"Since v3.2.0 - Use `listenerCount` instead.","params":[{"name":"emitter","description":"The emitter to query","optional":false,"type":[[["EventEmitter"]]]},{"name":"eventName","description":"The event name","optional":false,"type":[[["string"," |"],["symbol"]]]}],"returns":[[[["number"]]]],"meta":{"line":284,"file":"events.d.ts"}},{"name":"on","description":"```js\nconst { on, EventEmitter } = require('events');\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo')) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n```\n\nReturns an `AsyncIterator` that iterates `eventName` events. It will throw\nif the `EventEmitter` emits `'error'`. It removes all listeners when\nexiting the loop. The `value` returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn `AbortSignal` can be used to cancel waiting on events:\n\n```js\nconst { on, EventEmitter } = require('events');\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"]]]},{"name":"eventName","description":"The name of the event being listened for","optional":false,"type":[[["string"]]]},{"name":"options","optional":true,"type":[[["StaticEventEmitterOptions"]]]}],"returns":[{"types":[[["AsyncIterableIterator","<"],["any",">"]]],"description":"that iterates `eventName` events emitted by the `emitter`"}],"returnsDescription":"that iterates `eventName` events emitted by the `emitter`","meta":{"line":263,"file":"events.d.ts"}},{"name":"once","description":"Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special`'error'` event\nsemantics and does not listen to the `'error'` event.\n\n```js\nconst { once, EventEmitter } = require('events');\n\nasync function run() {\n  const ee = new EventEmitter();\n\n  process.nextTick(() => {\n    ee.emit('myevent', 42);\n  });\n\n  const [value] = await once(ee, 'myevent');\n  console.log(value);\n\n  const err = new Error('kaboom');\n  process.nextTick(() => {\n    ee.emit('error', err);\n  });\n\n  try {\n    await once(ee, 'myevent');\n  } catch (err) {\n    console.log('error happened', err);\n  }\n}\n\nrun();\n```\n\nThe special handling of the `'error'` event is only used when `events.once()`is used to wait for another event. If `events.once()` is used to wait for the\n'`error'` event itself, then it is treated as any other kind of event without\nspecial handling:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.log('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```\n\nAn `AbortSignal` can be used to cancel waiting for the event:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```","scope":"static","params":[{"name":"emitter","optional":false,"type":[[["_"],["NodeEventTarget"]]]},{"name":"eventName","optional":false,"type":[[["string"," |"],["symbol"]]]},{"name":"options","optional":true,"type":[[["StaticEventEmitterOptions"]]]}],"returns":[[[["Promise","<"],["Array","<"],["any",">>"]]]],"meta":{"line":199,"file":"events.d.ts"}},{"name":"setMaxListeners","description":"```js\nconst {\n  setMaxListeners,\n  EventEmitter\n} = require('events');\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```","scope":"static","params":[{"name":"n","description":"A non-negative number. The maximum number of listeners per `EventTarget` event.","optional":true,"type":[[["number"]]]},{"name":"eventTargets","optional":false,"variable":true,"type":[[["Array","<"],["EventEmitter"," |_"],["DOMEventTarget",">"]]]}],"returns":[[[["void"]]]],"meta":{"line":359,"file":"events.d.ts"}}]},{"name":"WebSocket","construct":{"name":"new WebSocket","params":[{"name":"client","optional":false,"type":[[["Client"]]]}]},"props":[{"name":"#buckets","access":"private","type":[[["Record","<"],["number",", "],["number",">"]]],"meta":{"line":17,"file":"WebSocket.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/WebSocket.ts#L17"}},{"name":"#connectTimeout","access":"private","type":[[["null"," |"],["Timeout"]]],"meta":{"line":20,"file":"WebSocket.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/WebSocket.ts#L20"}},{"name":"#queue","access":"private","type":[[["Array","<"],["GatewayShard",">"]]],"meta":{"line":16,"file":"WebSocket.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/WebSocket.ts#L16"}},{"name":"client","type":[[["Client"]]],"meta":{"line":21,"file":"WebSocket.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/WebSocket.ts#L21"}},{"name":"maxConcurrency","type":[[["number"]]],"meta":{"line":19,"file":"WebSocket.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/WebSocket.ts#L19"}},{"name":"shards","type":[[["Cache","<"],["GatewayShard",">"]]],"meta":{"line":15,"file":"WebSocket.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/WebSocket.ts#L15"}},{"name":"totalShards","type":[[["number"]]],"meta":{"line":18,"file":"WebSocket.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/WebSocket.ts#L18"}}],"methods":[{"name":"allReady","returns":[[[["boolean"]]]],"meta":{"line":215,"file":"WebSocket.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/WebSocket.ts#L215"}},{"name":"broadcast","params":[{"name":"payload","optional":false,"type":[[["GatewaySendPayload"]]]}],"returns":[[[["void"]]]],"meta":{"line":190,"file":"WebSocket.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/WebSocket.ts#L190"}},{"name":"connect","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":113,"file":"WebSocket.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/WebSocket.ts#L113"}},{"name":"disconnect","returns":[[[["void"]]]],"meta":{"line":183,"file":"WebSocket.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/WebSocket.ts#L183"}},{"name":"fireClientReady","description":"Emits \"ready\" event to client if all shards has ready","returns":[[[["void"]]]],"meta":{"line":224,"file":"WebSocket.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/WebSocket.ts#L224"}},{"name":"handleShard","params":[{"name":"gatewayShard","optional":false,"type":[[["GatewayShard"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":70,"file":"WebSocket.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/WebSocket.ts#L70"}},{"name":"handleShards","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":36,"file":"WebSocket.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/WebSocket.ts#L36"}},{"name":"setShardStatus","params":[{"name":"shardId","optional":false,"type":[[["string"]]]},{"name":"data","optional":false,"type":[[["GatewayPresenceUpdateData"]]]}],"returns":[[[["void"]]]],"meta":{"line":202,"file":"WebSocket.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/WebSocket.ts#L202"}},{"name":"setStatus","params":[{"name":"data","optional":false,"type":[[["GatewayPresenceUpdateData"]]]}],"returns":[[[["void"]]]],"meta":{"line":196,"file":"WebSocket.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/client/WebSocket.ts#L196"}}]},{"name":"Webhook","extends":[[["Base"]]],"construct":{"name":"new Webhook","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIWebhook",">"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"applicationId","description":"The bot/OAuth2 application that created this webhook","type":[[["null"," |"],["string"]]],"meta":{"line":47,"file":"Webhook.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Webhook.ts#L47"}},{"name":"avatar","description":"The default user avatar hash of the webhook","type":[[["null"," |"],["string"]]],"meta":{"line":39,"file":"Webhook.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Webhook.ts#L39"}},{"name":"channelId","description":"The channel id this webhook is for, if any","type":[[["string"]]],"meta":{"line":27,"file":"Webhook.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Webhook.ts#L27"}},{"name":"guildId","description":"The guild id this webhook is for, if any","type":[[["string"]]],"meta":{"line":23,"file":"Webhook.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Webhook.ts#L23"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"name","description":"The default name of the webhook","type":[[["null"," |"],["string"]]],"meta":{"line":35,"file":"Webhook.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Webhook.ts#L35"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}},{"name":"rest","description":"Rest to make requests","type":[[["Rest"]]],"meta":{"line":63,"file":"Webhook.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Webhook.ts#L63"}},{"name":"sourceChannel","description":"The channel that this webhook is following (returned for Channel Follower Webhooks)","type":[[["APIPartialChannel"," |"],["GuildChannel"]]],"meta":{"line":55,"file":"Webhook.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Webhook.ts#L55"}},{"name":"sourceGuild","description":"The guild of the channel that this webhook is following (returned for Channel Follower Webhooks)","type":[[["Guild"," |"],["APIPartialGuild"]]],"meta":{"line":51,"file":"Webhook.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Webhook.ts#L51"}},{"name":"token","description":"The secure token of the webhook (returned for Incoming Webhooks)","type":[[["string"]]],"meta":{"line":43,"file":"Webhook.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Webhook.ts#L43"}},{"name":"type","description":"The type of the webhook","type":[[["WebhookType"]]],"meta":{"line":19,"file":"Webhook.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Webhook.ts#L19"}},{"name":"url","description":"The url used for executing the webhook (returned by the webhooks OAuth2 flow)","type":[[["string"]]],"meta":{"line":59,"file":"Webhook.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Webhook.ts#L59"}},{"name":"user","description":"The user this webhook was created by (not returned when getting a webhook with its token)","type":[[["null"," |"],["User"]]],"meta":{"line":31,"file":"Webhook.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Webhook.ts#L31"}}],"methods":[{"name":"_update","params":[{"name":"data","optional":false,"type":[[["APIWebhook"]]]}],"returns":[[[["Webhook"]]]],"meta":{"line":99,"file":"Webhook.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Webhook.ts#L99"}},{"name":"delete","returns":[[[["Promise","<"],["unknown",">"]]]],"meta":{"line":83,"file":"Webhook.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Webhook.ts#L83"}},{"name":"edit","params":[{"name":"data","optional":false,"type":[[["RESTPatchAPIWebhookJSONBody"]]]}],"returns":[[[["Promise","<"],["void"," |"],["Webhook",">"]]]],"meta":{"line":88,"file":"Webhook.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Webhook.ts#L88"}},{"name":"sendMessage","params":[{"name":"data","optional":false,"type":[[["MessagePostData"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":78,"file":"Webhook.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Webhook.ts#L78"}},{"name":"toJSON","returns":[[[["void"]]]],"meta":{"line":88,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L88"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"WelcomeChannel","extends":[[["Base"]]],"construct":{"name":"new WelcomeChannel","params":[{"name":"data","optional":false,"type":[[["DataWithClient","<"],["APIGuildWelcomeScreenChannel",">"]]]}]},"props":[{"name":"_client","type":[[["AnyClient"]]],"meta":{"line":68,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L68"}},{"name":"channelId","description":"The channel id that is suggested","type":[[["string"]]],"meta":{"line":1006,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L1006"}},{"name":"description","description":"The description shown for the channel","type":[[["string"]]],"meta":{"line":1010,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L1010"}},{"name":"emojiId","description":"The emoji id of the emoji that is shown on the left of the channel","type":[[["null"," |"],["string"]]],"meta":{"line":1014,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L1014"}},{"name":"emojiName","description":"The emoji name of the emoji that is shown on the left of the channel","type":[[["null"," |"],["string"]]],"meta":{"line":1018,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L1018"}},{"name":"id","description":"Object id","type":[[["string"]]],"meta":{"line":72,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L72"}},{"name":"rawData","type":[[["Record","<"],["string",", "],["any","> & {"],["\nid",": "],["string\n","}"]]],"meta":{"line":73,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L73"}}],"methods":[{"name":"toJSON","returns":[[[["OmitNever","<"],["json","<{"],["\nchannel",": "],["undefined"," |"],["Channel",","],["\nchannelId",": "],["string",","],["\ndescription",": "],["string",","],["\nemoji",": "],["Emoji"," |"],["APIEmoji",","],["\nemojiId",": "],["null"," |"],["string",","],["\nemojiName",": "],["null"," |"],["string\n","}>>"]]]],"meta":{"line":1043,"file":"Channel.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Channel.ts#L1043"}},{"name":"toJSON","scope":"static","params":[{"name":"source","optional":false,"type":[[["T"]]]},{"name":"props","optional":false,"type":[[["Array","<"],["U",">"]]]}],"returns":[[[["OmitNever","<"],["json","<"],["unknown",">>"]]]],"meta":{"line":92,"file":"Base.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Base.ts#L92"}}]},{"name":"WelcomeScreen","construct":{"name":"new WelcomeScreen","params":[{"name":"data","optional":false,"type":[[["APIGuildWelcomeScreen"]]]},{"name":"guild","optional":false,"type":[[["BaseGuild"]]]}]},"props":[{"name":"description","description":"The welcome screen short message","type":[[["null"," |"],["string"]]],"meta":{"line":171,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L171"}},{"name":"guild","description":"The guild for this welcome screen","type":[[["BaseGuild"]]],"meta":{"line":167,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L167"}},{"name":"welcomeChannels","description":"Suggested channels","type":[[["Map","<"],["string",", "],["WelcomeChannel",">"]]],"meta":{"line":175,"file":"Guild.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/resources/Guild.ts#L175"}}]}],"functions":[{"name":"GatewayShardError","params":[{"name":"message","optional":false,"type":[[["string"]]]},{"name":"code","optional":false,"type":[[["GatewayCloseCodes"]]]},{"name":"shardId","optional":false,"type":[[["string"]]]}],"returns":[[[["Error"," |"],["TypeError"," |"],["RangeError"," |"],["SyntaxError"]]]],"meta":{"line":7,"file":"index.d.ts"}},{"name":"MakeError","params":[{"name":"options","optional":false,"type":[[["MakeErrorOptions"]]]},{"name":"type","optional":true,"type":[[["TypeErrorConstructor"," |"],["ErrorConstructor"," |"],["RangeErrorConstructor"," |"],["SyntaxErrorConstructor"]]]}],"returns":[[[["Error"," |"],["TypeError"," |"],["RangeError"," |"],["SyntaxError"]]]],"meta":{"line":32,"file":"index.d.ts"}},{"name":"MissingIntentsError","params":[{"name":"intents","optional":false,"variable":true,"type":[[["Array","<"],["string",">"]]]}],"returns":[[[["Error"," |"],["TypeError"," |"],["RangeError"," |"],["SyntaxError"]]]],"meta":{"line":6,"file":"index.d.ts"}},{"name":"bitsArrayToBits","params":[{"name":"arr","optional":false,"type":[[["Array","<"],["number",">"]]]},{"name":"init","optional":true,"type":[[["number"]]]}],"returns":[[[["number"]]]],"meta":{"line":38,"file":"index.d.ts"}},{"name":"buildAttachment","params":[{"name":"attachment","optional":false,"type":[[["MessageAttachment"," & {"],["\nfile",": "],["string"," |"],["URL\n","}"]]]}],"returns":[[[["Promise","<"],["MessageAttachment",">"]]]],"meta":{"line":33,"file":"index.d.ts"}},{"name":"camelCase","params":[{"name":"str","optional":false,"type":[[["string"]]]}],"returns":[[[["string"]]]],"meta":{"line":37,"file":"index.d.ts"}},{"name":"createWebAssemblyModule","params":[{"name":"path","optional":false,"type":[[["string"]]]}],"returns":[[[["WebAssemblyExports"]]]],"meta":{"line":36,"file":"index.d.ts"}},{"name":"delay","params":[{"name":"time","optional":false,"type":[[["number"]]]}],"returns":[[[["Promise","<"],["unknown",">"]]]],"meta":{"line":31,"file":"index.d.ts"}},{"name":"extractMessageData","params":[{"name":"data","optional":false,"type":[[["MessagePostData"," |"],["Omit","<"],["APIInteractionResponse",", "],["data","> & {"],["\ndata",": "],["MessagePostData\n","}"]]]},{"name":"isInteraction","optional":true,"type":[[["boolean"]]]}],"returns":[[[["{"],["\ncontentType",": "],["string"," |"],["undefined",","],["\nd",": "],["string"," |"],["FormData\n","}"]]]],"meta":{"line":25,"file":"index.d.ts"}},{"name":"isEqual","params":[{"name":"o1","optional":false,"type":[[["_"],["1"]]]},{"name":"o2","optional":false,"type":[[["_"],["2"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":40,"file":"index.d.ts"}},{"name":"objectSnakeKeysToCamelKeys","params":[{"name":"o","optional":false,"type":[[["T"]]]}],"returns":[[[["KeysToCamelCase","<"],["T",">"]]]],"meta":{"line":39,"file":"index.d.ts"}},{"name":"parseResponse","params":[{"name":"res","optional":false,"type":[[["Response"]]]}],"returns":[[[["unknown"]]]],"meta":{"line":24,"file":"index.d.ts"}},{"name":"structuredClone","params":[{"name":"o","optional":false,"type":[[["T"]]]}],"returns":[[[["T"," |"],["null"]]]],"meta":{"line":41,"file":"index.d.ts"}},{"name":"transformMessagePostData","params":[{"name":"data","optional":false,"type":[[["string"," |"],["MessagePostData"]]]}],"returns":[[[["MessagePostData"]]]],"meta":{"line":42,"file":"index.d.ts"}}],"interfaces":[],"typedefs":[{"name":"GatewayStatus","meta":{"line":184,"file":"index.d.ts"},"props":[{"name":"Closing","type":[[[3]]]},{"name":"Connected","type":[[[0]]]},{"name":"Connecting","type":[[[5]]]},{"name":"Destroyed","type":[[[8]]]},{"name":"Disconnected","type":[[[1]]]},{"name":"Handshaking","type":[[[7]]]},{"name":"Identifying","type":[[[4]]]},{"name":"Ready","type":[[[9]]]},{"name":"Reconnecting","type":[[[6]]]},{"name":"Resuming","type":[[[2]]]},{"name":"WaitingGuilds","type":[[[10]]]}]},{"name":"AuditLogEntry","meta":{"line":163,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L163"},"props":[{"name":"actionType","optional":false,"type":[[["AuditLogEvent"]]]},{"name":"changes","optional":true,"type":[[["Array","<"],["KeysToCamelCase","<"],["APIAuditLogChange",">>"]]]},{"name":"id","optional":false,"type":[[["string"]]]},{"name":"options","optional":true,"type":[[["KeysToCamelCase","<"],["undefined"," |"],["APIAuditLogOptions",">"]]]},{"name":"reason","optional":false,"type":[[["undefined"," |"],["string"]]]},{"name":"targetId","optional":false,"type":[[["null"," |"],["string"]]]},{"name":"userId","optional":false,"type":[[["null"," |"],["string"]]]}]},{"name":"BaseCacheOptions","meta":{"line":324,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L324"},"props":[{"name":"maxSize","optional":false,"type":[[["number"]]]},{"name":"sweeper","optional":true,"type":[[["BaseCacheSweeper","<"],["T",">"]]]}]},{"name":"BaseCacheSweeper","meta":{"line":318,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L318"},"props":[{"name":"filter","optional":true,"type":[[["("],["value",": "],["T",") => "],["boolean"]]]},{"name":"keepFilter","optional":true,"type":[[["("],["value",": "],["T",") => "],["boolean"]]]},{"name":"lifetime","optional":true,"type":[[["number"]]]}]},{"name":"BaseClientOptions","meta":{"line":59,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L59"},"props":[{"name":"partials","optional":true,"type":[[["Array","<"],["Partials",">"]]]}]},{"name":"CacheAdapter","meta":{"line":331,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L331"},"props":[{"name":"size","optional":false,"type":[[["number"]]]},{"name":"clear","optional":false,"type":[[["(..."],["args",": "],["unknown","[]) => "],["void"]]]},{"name":"delete","optional":false,"type":[[["("],["key",": "],["string",") => "],["boolean"]]]},{"name":"entries","optional":false,"type":[[["(..."],["args",": "],["unknown","[]) => "],["IterableIterator","<["],["string",", "],["T","]>"]]]},{"name":"get","optional":false,"type":[[["("],["key",": "],["string",") => "],["undefined"," |"],["T"]]]},{"name":"has","optional":false,"type":[[["("],["key",": "],["string",") => "],["boolean"]]]},{"name":"keys","optional":false,"type":[[["(..."],["args",": "],["unknown","[]) => "],["IterableIterator","<"],["string",">"]]]},{"name":"set","optional":false,"type":[[["("],["key",": "],["string",", "],["value",": "],["T",") => "],["CacheAdapter","<"],["T",">"]]]},{"name":"values","optional":false,"type":[[["(..."],["args",": "],["unknown","[]) => "],["IterableIterator","<"],["T",">"]]]}]},{"name":"ClientEvents","meta":{"line":175,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L175"},"props":[{"name":"channelCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"channelDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"channelPinsAdd","optional":false,"type":[[["["],["unknown",", "],["unknown",", "],["unknown","]"]]]},{"name":"channelPinsRemove","optional":false,"type":[[["["],["unknown",", "],["unknown",", "],["unknown","]"]]]},{"name":"channelPinsUpdate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"channelUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"connect","optional":false,"type":[[["[]"]]]},{"name":"debug","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildAuditLogEntryCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildBanAdd","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"guildBanRemove","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"guildCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildEmojiCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildEmojiDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildEmojiUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"guildEmojisUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown",", "],["unknown","]"]]]},{"name":"guildIntegrationsUpdate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildMemberAdd","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"guildMemberRemove","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"guildMemberUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"guildMembersChunk","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildMembersChunked","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"guildRoleCreate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"guildRoleDelete","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"guildRoleUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown",", "],["unknown","]"]]]},{"name":"guildScheduledEventCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildScheduledEventDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildScheduledEventUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"guildScheduledEventUserAdd","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"guildScheduledEventUserRemove","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"guildStickerCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildStickerDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"guildStickerUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"guildStickersUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown",", "],["unknown","]"]]]},{"name":"guildUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"integrationCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"interactionCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"inviteCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"inviteDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"messageCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"messageDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"messageDeleteBulk","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"messageReactionAdd","optional":false,"type":[[["["],["unknown",", "],["unknown",", "],["unknown","]"]]]},{"name":"messageReactionRemove","optional":false,"type":[[["["],["unknown",", "],["unknown",", "],["unknown","]"]]]},{"name":"messageReactionRemoveAll","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"messageReactionRemoveEmoji","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"messageUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"packet","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"ready","optional":false,"type":[[["[]"]]]},{"name":"reconnecting","optional":false,"type":[[["[]"]]]},{"name":"shardClose","optional":false,"type":[[["["],["unknown",", "],["unknown",", "],["unknown","]"]]]},{"name":"shardConnect","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"shardDebug","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"shardDispatch","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"shardError","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"shardHello","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"shardPing","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"shardPreReady","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"shardReady","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"shardReconnectRequired","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"shardResume","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"stageInstanceCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"stageInstanceDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"stageInstanceUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"threadCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"threadDelete","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"threadListSync","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"threadMemberUpdate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"threadMembersUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"typingStart","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"userUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"voiceChannelJoin","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"voiceChannelLeave","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"voiceChannelSwitch","optional":false,"type":[[["["],["unknown",", "],["unknown",", "],["unknown","]"]]]},{"name":"voiceServerUpdate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"voiceStateUpdate","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"warn","optional":false,"type":[[["["],["unknown","]"]]]}]},{"name":"ClientOptions","meta":{"line":84,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L84"},"props":[{"name":"cache","optional":true,"type":[[["{"],["\nadapter",": "],["CacheAdapter","<"],["any",">,"],["\nchannels",": "],["CacheOption",","],["\nemojis",": "],["CacheOption",","],["\nguilds",": "],["CacheOption",","],["\nmembers",": "],["CacheOption",","],["\nmessageCacheLimitPerChannel",": "],["number",","],["\nroles",": "],["CacheOption",","],["\nstickers",": "],["CacheOption",","],["\nthreads",": "],["CacheOption",","],["\nusers",": "],["CacheOption\n","}"]]]},{"name":"gateway","optional":false,"type":[[["{"],["\ncompress",": "],["boolean",","],["\nconcurrency",": "],["number",","],["\ndisabledEvents",": "],["Array","<"],["keyof"," "],["ClientEvents",">,"],["\nencoding",": "],["json"," |"],["etf",","],["\nintents",": "],["GatewayIntentBits"," |"],["Array","<"],["GatewayIntentBits",">,"],["\nproperties",": {"],["\nbrowser",": "],["string",","],["\ndevice",": "],["string\n","},"],["\ntotalShards",": "],["number\n","}"]]]},{"name":"partials","optional":true,"type":[[["Array","<"],["Partials",">"]]]},{"name":"plugins","optional":true,"type":[[["Array","<"],["PluginFn",">"]]]}]},{"name":"DisplayUserAvatarOptions","meta":{"line":53,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L53"},"props":[{"name":"format","optional":true,"type":[[["UserAvatarFormat"]]]},{"name":"size","optional":true,"type":[[["number"]]]}]},{"name":"FullWebServerOptions","meta":{"line":28,"file":"index.d.ts"},"props":[{"name":"hostname","optional":true,"type":[[["string"]]]},{"name":"port","optional":false,"type":[[["number"]]]},{"name":"publicKey","optional":false,"type":[[["string"]]]},{"name":"route","optional":true,"type":[[["string"]]]},{"name":"token","optional":true,"type":[[["string"]]]}]},{"name":"GatewayShardEvents","meta":{"line":137,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L137"},"props":[{"name":"close","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"connect","optional":false,"type":[[["[]"]]]},{"name":"debug","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"dispatch","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"error","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"hello","optional":false,"type":[[["[]"]]]},{"name":"ping","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"preReady","optional":false,"type":[[["[]"]]]},{"name":"ready","optional":false,"type":[[["[]"]]]},{"name":"reconnectRequired","optional":false,"type":[[["[]"]]]},{"name":"reconnecting","optional":false,"type":[[["[]"]]]},{"name":"resume","optional":false,"type":[[["[]"]]]}]},{"name":"GatewayShardOptions","meta":{"line":122,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L122"},"props":[{"name":"compress","description":"Recommended to compress gateway packets","optional":true,"type":[[["boolean"]]]},{"name":"encoding","description":"The encoding of received gateway packets","optional":true,"type":[[["json"," |"],["etf"]]]},{"name":"shardId","description":"The id of this gateway shard","optional":false,"type":[[["string"]]]}]},{"name":"ImageSize","meta":{"line":49,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L49"},"props":[{"name":"size","optional":true,"type":[[["number"]]]}]},{"name":"InteractionClientEvents","meta":{"line":157,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L157"},"props":[{"name":"connect","optional":false,"type":[[["[]"]]]},{"name":"interactionCreate","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"warn","optional":false,"type":[[["["],["unknown","]"]]]}]},{"name":"InteractionClientOptions","meta":{"line":63,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L63"},"props":[{"name":"cache","optional":true,"type":[[["{"],["\nadapter",": "],["CacheAdapter","<"],["any",">,"],["\nchannels",": "],["CacheOption",","],["\nguilds",": "],["CacheOption",","],["\nmessageCacheLimitPerChannel",": "],["number",","],["\nroles",": "],["CacheOption\n","}"]]]},{"name":"partials","optional":true,"type":[[["Array","<"],["Partials",">"]]]},{"name":"resolvePartialData","description":"Resolves partial values and converts them into resolved instances, which may be slower due to requests made in the API, but is functional.","optional":true,"default":"false","type":[[["boolean"]]]},{"name":"rest","optional":true,"type":[[["{"],["\ntoken",": "],["string\n","}"]]]},{"name":"webserver","optional":false,"type":[[["WebServerOptions"]]]}]},{"name":"MakeErrorOptions","meta":{"line":11,"file":"types.d.ts"},"props":[{"name":"args","optional":true,"type":[[["Array","<["],["string",", "],["any","]>"]]]},{"name":"message","optional":false,"type":[[["string"]]]},{"name":"name","optional":true,"type":[[["string"]]]}]},{"name":"MessageAttachment","meta":{"line":3,"file":"types.d.ts"},"props":[{"name":"description","optional":true,"type":[[["string"]]]},{"name":"file","optional":false,"type":[[["Buffer"," |"],["Blob"]]]},{"name":"name","optional":false,"type":[[["string"]]]}]},{"name":"MessagePostData","description":"https://discord.com/developers/docs/resources/channel#create-message","meta":{"line":8,"file":"types.d.ts"},"props":[{"name":"allowed_mentions","description":"Allowed mentions for a message\n\nSee https://discord.com/developers/docs/resources/channel#allowed-mentions-object","optional":true,"type":[[["APIAllowedMentions"]]]},{"name":"attachments","description":"Attachment objects with filename and description","optional":true,"type":[[["Array","<"],["RESTAPIAttachment",">"]]]},{"name":"components","description":"The components to include with the message\n\nSee https://discord.com/developers/docs/interactions/message-components#component-object","optional":true,"type":[[["Array","<"],["APIActionRowComponent","<"],["APIMessageActionRowComponent",">>"]]]},{"name":"content","description":"The message contents (up to 2000 characters)","optional":true,"type":[[["string"]]]},{"name":"embeds","description":"Embedded `rich` content (up to 6000 characters)\n\nSee https://discord.com/developers/docs/resources/channel#embed-object","optional":true,"type":[[["Array","<"],["APIEmbed",">"]]]},{"name":"files","optional":true,"type":[[["Array","<"],["MessageAttachment",">"]]]},{"name":"flags","description":"Message flags combined as a bitfield","optional":true,"type":[[["MessageFlags"]]]},{"name":"message_reference","description":"Include to make your message a reply\n\nSee https://discord.com/developers/docs/resources/channel#message-reference-object-message-reference-structure","optional":true,"type":[[["APIMessageReferenceSend"]]]},{"name":"nonce","description":"A nonce that can be used for optimistic message sending","optional":true,"type":[[["string"," |"],["number"]]]},{"name":"sticker_ids","description":"IDs of up to 3 stickers in the server to send in the message\n\nSee https://discord.com/developers/docs/resources/sticker#sticker-object","optional":true,"type":[[["["],["string","] |["],["string",", "],["string","] |["],["string",", "],["string",", "],["string","]"]]]},{"name":"tts","description":"`true` if this is a TTS message","optional":true,"type":[[["boolean"]]]}]},{"name":"PluginObject","meta":{"line":39,"file":"PluginManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/PluginManager.ts#L39"},"props":[{"name":"name","optional":false,"type":[[["string"]]]},{"name":"version","optional":false,"type":[[["string"]]]},{"name":"load","optional":false,"type":[[["(..."],["args",": "],["unknown","[]) => "],["void"]]]},{"name":"onStart","optional":false,"type":[[["(..."],["args",": "],["unknown","[]) => "],["void"]]]}]},{"name":"ResourceObject","meta":{"line":34,"file":"PluginManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/PluginManager.ts#L34"},"props":[{"name":"baseFile","optional":false,"type":[[["string"]]]},{"name":"exports","optional":false,"type":[[["AnyResource"]]]}]},{"name":"Typing","meta":{"line":359,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L359"},"props":[{"name":"channel","optional":true,"type":[[["TextBasedChannel"," |"],["APIChannel"]]]},{"name":"channelId","optional":false,"type":[[["string"]]]},{"name":"guild","optional":true,"type":[[["Guild"]]]},{"name":"guildId","optional":true,"type":[[["string"]]]},{"name":"member","optional":true,"type":[[["Member"]]]},{"name":"startedTimestamp","optional":false,"type":[[["number"]]]},{"name":"userId","optional":false,"type":[[["string"]]]}]},{"name":"VoiceServer","meta":{"line":169,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L169"},"props":[{"name":"guild","optional":false,"type":[[["Guild"]]]},{"name":"host","optional":false,"type":[[["string"]]]},{"name":"token","optional":false,"type":[[["string"]]]}]},{"name":"WebServerEvents","meta":{"line":14,"file":"index.d.ts"},"props":[{"name":"data","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"interactionDataReceived","optional":false,"type":[[["["],["unknown",", "],["unknown","]"]]]},{"name":"interactionPingReceived","optional":false,"type":[[["[]"]]]},{"name":"listen","optional":false,"type":[[["["],["unknown","]"]]]}]},{"name":"WebServerOptions","meta":{"line":112,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L112"},"props":[{"name":"hostname","optional":true,"type":[[["string"]]]},{"name":"port","optional":false,"type":[[["number"]]]},{"name":"route","optional":true,"type":[[["string"]]]}]},{"name":"APIGuildWithShard","type":[[["APIGuild"," & {"],["\nshard","_"],["id",": "],["string\n","}"]]],"meta":{"line":357,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L357"}},{"name":"AnyChannel","type":[[["Channel"," |"],["TextBasedChannel"," |"],["GuildChannel"," |"],["GuildTextChannel"," |"],["CategoryChannel"," |"],["DMChannel"," |"],["VoiceChannel"," |"],["StageChannel"]]],"meta":{"line":20,"file":"Resolvable.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/Resolvable.ts#L20"}},{"name":"AnyClient","type":[[["InteractionClient"," |"],["Client"]]],"meta":{"line":343,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L343"}},{"name":"AnyResource","type":[[["("],["typeof"," "],["AnyChannel",") |("],["typeof"," "],["AnyGuild",") |("],["typeof"," "],["AnyInteraction",") |("],["typeof"," "],["Invite",") |("],["typeof"," "],["EmojiOrReaction",") |("],["typeof"," "],["Webhook",") |("],["typeof"," "],["Integration",") |("],["typeof"," "],["AnyMember",") |("],["typeof"," "],["Message",") |("],["typeof"," "],["BitField",") |("],["typeof"," "],["Base",") |("],["typeof"," "],["AuditLog",") |("],["typeof"," "],["Application",")"]]],"meta":{"line":19,"file":"PluginManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/PluginManager.ts#L19"}},{"name":"Awaitable","type":[[["T"," |"],["Promise","<"],["T",">"]]],"meta":{"line":329,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L329"}},{"name":"CacheEntries","type":[[["Readonly","<"],["Array","<"],["Readonly","<["],["K",", "],["V","]>>> |"],["Iterable","<"],["Readonly","<["],["K",", "],["V","]>>"]]],"meta":{"line":3,"file":"Cache.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/cache/Cache.ts#L3"}},{"name":"CacheOption","type":[[["number"," |"],["BaseCacheOptions","<"],["any",">"]]],"meta":{"line":82,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L82"}},{"name":"CamelCase","type":[[["S"," "],["extends"," "],["unknown"," ? "],["unknown"," : "],["Lowercase","<"],["S",">"]]],"meta":{"line":346,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L346"}},{"name":"ChannelResolvable","type":[[["string"," |"],["APIChannel"," |"],["AnyChannel"]]],"meta":{"line":29,"file":"Resolvable.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/Resolvable.ts#L29"}},{"name":"CreateChannelOptions","type":[[["KeysToCamelCase","<"],["RESTPostAPIGuildChannelJSONBody","> & "],["KeysToCamelCase","<"],["RESTPatchAPIChannelJSONBody",">"]]],"meta":{"line":371,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L371"}},{"name":"DataWithClient","type":[[["T"," & {"],["\nclient",": "],["AnyClient\n","}"]]],"meta":{"line":344,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L344"}},{"name":"GuildDataModel","type":[[["T"," & {"],["\nguild",": "],["Guild\n","}"]]],"meta":{"line":57,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L57"}},{"name":"GuildMembersChunkData","type":[[["Omit","<"],["KeysToCamelCase","<"],["GatewayGuildMembersChunkDispatchData",">, "],["presences"," |"],["members","> & {"],["\nguild",": "],["Guild",","],["\nmembers",": "],["Array","<"],["APIGuildMember"," |"],["Member",">"],["\n","}"]]],"meta":{"line":152,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L152"}},{"name":"GuildResolvable","type":[[["Guild"," |"],["APIGuild"," |"],["string"]]],"meta":{"line":19,"file":"Resolvable.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/Resolvable.ts#L19"}},{"name":"InteractionFlags","type":[[["MessageFlagsEphemeral"," |"],["MessageFlagsSuppressEmbeds"]]],"meta":{"line":118,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L118"}},{"name":"JSONFY","type":[[["OmitNever","<"],["json","<"],["T",">>"]]],"meta":{"line":397,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L397"}},{"name":"KeysToCamelCase","type":[[["unknown"]]],"meta":{"line":351,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L351"}},{"name":"MessageResolvable","type":[[["Message"," |"],["APIMessage"," & {"],["\nguild","_"],["id",": "],["string\n","}"]]],"meta":{"line":30,"file":"Resolvable.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/Resolvable.ts#L30"}},{"name":"MessageTimestampStyle","type":[[["t"," |"],["T"," |"],["d"," |"],["D"," |"],["f"," |"],["F"," |"],["R"]]],"meta":{"line":369,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L369"}},{"name":"Optional","type":[[["Pick","<"],["Partial","<"],["T",">, "],["K","> & "],["Omit","<"],["T",", "],["K",">"]]],"meta":{"line":375,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L375"}},{"name":"PluginFn","type":[[["("],["manager",": "],["PluginManager",") => "],["PluginObject"]]],"meta":{"line":46,"file":"PluginManager.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/utils/PluginManager.ts#L46"},"params":[{"name":"manager","optional":false,"type":[[["PluginManager"]]]}],"returns":[[[["PluginObject"]]]]},{"name":"ValueOf","type":[[["I","["],["keyof"," "],["I","]"]]],"meta":{"line":316,"file":"index.ts","url":"https://github.com/nicolasribeiroo/darkcord/blob/4df1ab9/packages/darkcord/src/types/index.ts#L316"}}],"externals":[],"custom":{}}